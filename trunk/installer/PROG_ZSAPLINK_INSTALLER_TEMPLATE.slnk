<?xml version="1.0" encoding="iso-8859-1"?>
<PROG NAME="ZSAPLINK_INSTALLER_TEMPLATE" VARCL="X" SUBC="1" CNAM="USEWH90" CDAT="20070201" UNAM="USEWH90" UDAT="20070201" VERN="000011" RMAND="321" RLOAD="E" FIXPT="X" SDATE="20070201" STIME="143733" IDATE="20070201" ITIME="143733" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="Program ZSAPLINK_INSTALLER_BASE" LENGTH="31 "/>
  </language>
 </textPool>
 <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
REPORT  ZSAPLINK_INSTALLER_TEMPLATE.

type-pools: seor, abap.
data retFileTable type FILETABLE.
data retRc type sysubrc.
data retUserAction type i.

data tempXMLString type string.
data ixmlNugget type ref to if_ixml_document.

data pluginExists type flag.
data objectExists type flag.
data flag type flag.
data statusMsg type string.
DATA  y2all type flag.
selection-screen begin of Line.
  SELECTION-SCREEN COMMENT 1(20) fileCom FOR FIELD NUGGFIL.
  parameters NUGGFIL(300) type c modif id did obligatory.
selection-screen end of Line.

selection-screen begin of Line.
  SELECTION-SCREEN COMMENT 1(20) checkCom FOR FIELD NUGGFIL.
  parameters overwrt type c as checkbox default &apos;X&apos;.
selection-screen end of Line.



start-of-selection.
clear tempXMLString.
perform uploadXMLFromLM using NUGGFIL tempXMLString.
perform CONVERTSTRINGTOIXMLDOC using tempXMLString changing ixmlNugget.
perform installNugget using ixmlNugget overwrt.


*/--------------------------------------------------------------------\
*| Selection screen events                                            |
initialization.
  fileCom = &apos;Installation Nugget&apos;.
  checkCom = &apos;Overwrite Originals&apos;.


at selection-screen on value-request for NUGGFIL.
  call method CL_GUI_FRONTEND_SERVICES=&gt;FILE_OPEN_DIALOG
      exporting
        MULTISELECTION = abap_false
        FILE_FILTER = &apos;*.nugg&apos;
        DEFAULT_EXTENSION = &apos;nugg&apos;
      changing
        FILE_TABLE = retFileTable
        rc = retRc
        user_Action = retUserAction.
  read table retFileTable into NUGGFIL index 1.
  refresh retFileTable.

*\--------------------------------------------------------------------/


*/--------------------------------------------------------------------\
*| Forms from the SAPLink Installer                                   |
*|                                                                     |
form uploadXMLFromLM using p_filename xmlString type string .
  data tempTable type table_of_strings.
  data l_fileName type string.

    l_fileName = p_filename.
    call method CL_GUI_FRONTEND_SERVICES=&gt;GUI_UPLOAD
          exporting
            FILENAME = l_fileName
          changing
            data_tab = tempTable.
  perform createString using tempTable changing xmlString.
endform.
*\--------------------------------------------------------------------/
form createString
      using
        tempTable type table_of_strings
      changing
        bigString type string.

data sTemp type string.
  loop at tempTable into sTemp.
    concatenate bigString sTemp CL_ABAP_CHAR_UTILITIES=&gt;NEWLINE into
    bigString.
  endloop.

endform.
*/----------------------------------------------------------------------



*/--------------------------------------------------------------------\
*| Forms from the SAPLink Root Class                                  |
form CONVERTSTRINGTOIXMLDOC
      using
        xmlString type string
      changing
        ixmlDocument type ref to if_ixml_document.

data ixml type ref to if_ixml.
data streamFactory type ref to IF_IXML_STREAM_FACTORY.
data iStream type ref to if_ixml_istream.
data ixmlParser type ref to if_ixml_parser.
data xmlDoc type ref to if_ixml_document.

  ixml = cl_ixml=&gt;create( ).
  xmlDoc = ixml-&gt;create_document( ).
  streamFactory = ixml-&gt;CREATE_STREAM_FACTORY( ).
  iStream = streamFactory-&gt;CREATE_ISTREAM_STRING( xmlString ).
  iXMLParser = iXML-&gt;create_parser(  stream_factory = streamFactory
                                     istream        = iStream
                                     document       = xmlDoc ).
  iXMLParser-&gt;parse( ).
  ixmlDocument = xmlDoc.

endform.

*|                                                                     |
*|                                                                     |

FORM GETOBJECTInfoFROMIXMLDOC
      using ixmlDocument type ref to if_ixml_document
      changing objTypeName type string objName type string.
data rootNode type ref to IF_IXML_NODE.
data rootAttr type ref to IF_IXML_NAMED_NODE_MAP.
data AttrNode type ref to IF_IXML_NODE.
data nodeName type string.

  rootNode ?= ixmlDocument-&gt;GET_ROOT_ELEMENT( ).

* get object type
  objTypeName = rootNode-&gt;GET_NAME( ).
  translate objTypeName to upper case.

* get object name
  rootAttr = rootNode-&gt;GET_ATTRIBUTES( ).
  AttrNode = rootAttr-&gt;GET_ITEM( 0 ).
  objName = AttrNode-&gt;GET_VALUE( ).

ENDFORM.

*/--------------------------------------------------------------------\
*|  Nugget Class                                                      |
form     installNugget
      using xmlDoc type ref to if_ixml_document overwrite type c.
types: begin of t_objectTable,
         classname type string,
         object type ko100-object,
         text type ko100-text,
       end of t_objectTable.


data iterator type ref to IF_IXML_NODE_ITERATOR.
data ixml type ref to if_ixml.
data Namefilter type ref to IF_IXML_NODE_FILTER.
data parentFilter type ref to IF_IXML_NODE_FILTER.
data currentNode type ref to if_ixml_node.
data newNode type ref to if_ixml_node.
data rval type i.
data ixmlDocument type ref to if_ixml_document.
data _objName type string.
data objType type string.
data objectTable type table of t_objectTable.
data objectLine type t_objectTable.
data exists type flag.
data sTemp type string.
data nameCollision type flag.
data l_targetObject type ref to zsaplink.
data l_installObject type string.
data l_excClass type ref to ZCX_SAPLINK.
data tempcname type string.

  ixml = cl_ixml=&gt;create( ).
  nameFilter = xmlDoc-&gt;create_filter_name( name = &apos;nugget&apos; ).
  parentFilter = xmlDoc-&gt;create_filter_parent( nameFilter ).
  iterator = xmlDoc-&gt;create_iterator_filtered( parentFilter ).

  currentNode ?= iterator-&gt;get_next( ).
  while currentNode is not initial.
    clear exists.
    ixmlDocument = ixml-&gt;create_document( ).
    newNode = currentNode-&gt;clone( ).
    rval = ixmlDocument-&gt;append_child( newNode ).

    call method zsaplink=&gt;GETOBJECTInfoFROMIXMLDOC
      exporting
        ixmlDocument = ixmlDocument
      importing
        objtypename = objType
        objname     = _objName.

*  call method zsaplink=&gt;getplugins( changing objectTable = objectTable )
*.
*
*  read table objectTable into objectLine with key object = objType.
*
*  if sy-subrc = 0.

    translate objType to upper case.
    case objtype.
      when &apos;CLAS&apos;.
        tempcname = &apos;ZSAPLINK_CLASS&apos;.
      when &apos;PROG&apos;.
        tempcname = &apos;ZSAPLINK_PROGRAM&apos;.
      when others.
    endcase.

    create object l_targetObject type (tempcname)
      exporting name = _objName.

    objectExists = l_targetObject-&gt;checkexists( ).

    if objectExists = &apos;X&apos; and overWrt = &apos;&apos;.
      write :/  objType, _objName,
      &apos; exists on this system , if you wish to install this Nugget &apos;
      &amp; &apos;please set the Overwrite Originals checkbox.&apos;
          .
    elseif objectExists = &apos;X&apos; and overWrt = &apos;X&apos;.

      if l_targetObject is not initial.

      if y2all &lt;&gt; &apos;X&apos;.
        concatenate objType _objName into sTemp separated by space.
        perform confirmOverwrite using sTemp
                              changing flag.
        if flag = &apos;1&apos;. &quot;yes
        elseif flag = &apos;2&apos;. &quot;yes to all
          y2all = &apos;X&apos;.
        elseif flag = &apos;A&apos;. &quot;cancel
          write / &apos;Import cancelled by user&apos;.
*          Flag = &apos;X&apos;.
          exit.
        endif.
       endif.
        try.
          l_installObject = l_targetObject-&gt;createObjectfromiXMLDoc(
                                          ixmlDocument = ixmlDocument
                                          overwrite = overWrt ).

          catch ZCX_SAPLINK into l_excClass.
            statusMsg = l_excClass-&gt;get_text( ).
            Flag = &apos;X&apos;.
        endtry.
        if l_installObject is not initial.
          concatenate &apos;Installed: &apos; objType l_installObject
           into statusMsg separated by space.
        endif.
      else.
        statusMsg = &apos;an undetermined error occured&apos;.
        Flag = &apos;X&apos;.
      endif.

    else.
        try.
          l_installObject = l_targetObject-&gt;createObjectfromiXMLDoc(
                                          ixmlDocument = ixmlDocument
                                          overwrite = overWrt ).

          catch ZCX_SAPLINK into l_excClass.
            statusMsg = l_excClass-&gt;get_text( ).
            Flag = &apos;X&apos;.
        endtry.
        if l_installObject is not initial.
          concatenate &apos;Installed: &apos; objType l_installObject
           into statusMsg separated by space.
        endif.
    endif.
  currentNode ?= iterator-&gt;get_next( ).
  write: / Statusmsg.
endwhile.
endform.

*/----------------------confirmOverwrite------------------------------\
form confirmOverwrite using l_objInfo type string
                   changing l_answer type flag.

data l_message type string.
data l_title type string.

  clear l_answer.
  l_title = &apos;Overwrite confirm. Proceed with CAUTION!&apos;.

  concatenate &apos;You have selected to overwrite originals.&apos;
    l_objinfo &apos;will be overwritten. Are you sure?&apos;
    into l_message separated by space.

  CALL FUNCTION &apos;POPUP_TO_CONFIRM&apos;
    EXPORTING
      TITLEBAR                    = l_title
      text_question               = l_message
      TEXT_BUTTON_1               = &apos;Yes&apos;
      TEXT_BUTTON_2               = &apos;Yes to all&apos;
      DEFAULT_BUTTON              = &apos;1&apos;
      DISPLAY_CANCEL_BUTTON       = &apos;X&apos;
    IMPORTING
      ANSWER                      = l_answer
            .
endform.
*\--------------------------------------------------------------------/</source>
</PROG>
