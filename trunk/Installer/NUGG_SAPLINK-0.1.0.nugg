<?xml version="1.0" encoding="iso-8859-1"?>
<nugget name="SAPLINK-0.1.0">
 <PROG NAME="ZSAPLINK" VARCL="X" SUBC="1" CNAM="USDWM01" CDAT="20060903" UNAM="USEWH90" UDAT="20060908" VERN="000025" RMAND="321" RLOAD="D" FIXPT="X" SDATE="20060908" STIME="151637" IDATE="20060908" ITIME="151637" UCCHECK="X">
  <textPool>
   <language SPRAS="D">
    <textElement ID="I" KEY="NGA" ENTRY="Add Object to Nugget" LENGTH="20 "/>
    <textElement ID="I" KEY="NGC" ENTRY="Create Empty Nugget" LENGTH="19 "/>
    <textElement ID="I" KEY="NGI" ENTRY="Import Nugget" LENGTH="13 "/>
    <textElement ID="I" KEY="OPT" ENTRY="Options" LENGTH="7 "/>
    <textElement ID="I" KEY="SLK" ENTRY="SAPlink" LENGTH="7 "/>
    <textElement ID="I" KEY="TB1" ENTRY="Object" LENGTH="6 "/>
    <textElement ID="I" KEY="TB2" ENTRY="Nugget" LENGTH="6 "/>
    <textElement ID="R" ENTRY="SAPlink" LENGTH="7 "/>
    <textElement ID="S" KEY="EXPORT" ENTRY="        Export Object" LENGTH="21 "/>
    <textElement ID="S" KEY="FILENAME" ENTRY="        SAPlink File Name" LENGTH="33 "/>
    <textElement ID="S" KEY="IMPORT" ENTRY="        Import Object" LENGTH="21 "/>
    <textElement ID="S" KEY="NOBJNAM" ENTRY="        Object Name" LENGTH="19 "/>
    <textElement ID="S" KEY="NOVRWR" ENTRY="        Overwrite Originals" LENGTH="27 "/>
    <textElement ID="S" KEY="NPLUGIN" ENTRY="        Object Type" LENGTH="19 "/>
    <textElement ID="S" KEY="NUGA" ENTRY="        Add Object to Nugget" LENGTH="28 "/>
    <textElement ID="S" KEY="NUGC" ENTRY="        Create Empty Nugget" LENGTH="27 "/>
    <textElement ID="S" KEY="NUGD" ENTRY="        Display Objects in Nugget" LENGTH="33 "/>
    <textElement ID="S" KEY="NUGFILE" ENTRY="        Nugget File Name" LENGTH="32 "/>
    <textElement ID="S" KEY="NUGGNAM" ENTRY="        Nugget Name" LENGTH="19 "/>
    <textElement ID="S" KEY="NUGI" ENTRY="        Import Nugget" LENGTH="21 "/>
    <textElement ID="S" KEY="OBJNAME" ENTRY="        Object Name" LENGTH="19 "/>
    <textElement ID="S" KEY="OVERWR" ENTRY="        Overwrite Originals" LENGTH="27 "/>
    <textElement ID="S" KEY="PLUGIN" ENTRY="        Object Type" LENGTH="19 "/>
   </language>
   <language SPRAS="E">
    <textElement ID="I" KEY="NGA" ENTRY="Add Object to Nugget" LENGTH="20 "/>
    <textElement ID="I" KEY="NGC" ENTRY="Create Empty Nugget" LENGTH="19 "/>
    <textElement ID="I" KEY="NGI" ENTRY="Import Nugget" LENGTH="13 "/>
    <textElement ID="I" KEY="OPT" ENTRY="Options" LENGTH="7 "/>
    <textElement ID="I" KEY="SLK" ENTRY="SAPlink" LENGTH="7 "/>
    <textElement ID="I" KEY="TB1" ENTRY="Object" LENGTH="6 "/>
    <textElement ID="I" KEY="TB2" ENTRY="Nugget" LENGTH="6 "/>
    <textElement ID="R" ENTRY="SAPlink" LENGTH="7 "/>
    <textElement ID="S" KEY="EXPORT" ENTRY="        Export Object" LENGTH="21 "/>
    <textElement ID="S" KEY="FILENAME" ENTRY="        SAPlink File Name" LENGTH="33 "/>
    <textElement ID="S" KEY="IMPORT" ENTRY="        Import Object" LENGTH="21 "/>
    <textElement ID="S" KEY="NOBJNAM" ENTRY="        Object Name" LENGTH="19 "/>
    <textElement ID="S" KEY="NOVRWR" ENTRY="        Overwrite Originals" LENGTH="27 "/>
    <textElement ID="S" KEY="NPLUGIN" ENTRY="        Object Type" LENGTH="19 "/>
    <textElement ID="S" KEY="NUGA" ENTRY="        Add Object to Nugget" LENGTH="28 "/>
    <textElement ID="S" KEY="NUGC" ENTRY="        Create Empty Nugget" LENGTH="27 "/>
    <textElement ID="S" KEY="NUGD" ENTRY="        Display Objects in Nugget" LENGTH="33 "/>
    <textElement ID="S" KEY="NUGFILE" ENTRY="        Nugget File Name" LENGTH="32 "/>
    <textElement ID="S" KEY="NUGGNAM" ENTRY="        Nugget Name" LENGTH="19 "/>
    <textElement ID="S" KEY="NUGI" ENTRY="        Import Nugget" LENGTH="21 "/>
    <textElement ID="S" KEY="OBJNAME" ENTRY="        Object Name" LENGTH="19 "/>
    <textElement ID="S" KEY="OVERWR" ENTRY="        Overwrite Originals" LENGTH="27 "/>
    <textElement ID="S" KEY="PLUGIN" ENTRY="        Object Type" LENGTH="19 "/>
   </language>
  </textPool>
  <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
*/---------------------------------------------------------------------\
*| /  __ \           | |      (_) |         | |                        |
*| | /  \/ ___  _ __ | |_ _ __ _| |__  _   _| |_ ___  _ __ ___         |
*| | |    / _ \| &apos;_ \| __| &apos;__| | &apos;_ \| | | | __/ _ \| &apos;__/ __|        |
*| | \__/\ (_) | | | | |_| |  | | |_) | |_| | || (_) | |  \__ \        |
*|  \____/\___/|_| |_|\__|_|  |_|_.__/ \__,_|\__\___/|_|  |___/        |
*|---------------------------------------------------------------------|
*| Lead Developers : ed herrmann                                       |
*|                        ewherrmann+saplinkcred@gmail.com             |
*|                   dan mcweeney                                      |
*|                        daniel.mcweeney+saplinkcred@gmail.com        |
*|                                                                     |
*| Fearless Alpha Testers: Matt Ammons                                 |
*|                         Philip T Young                              |
*|                         Ryan Quackenboss                            |
*|                         Sascha Kiefer                               |
*|                         Todd Rowland                                |
*\---------------------------------------------------------------------/
REPORT  ZSAPLINK                                                    .
TABLES SSCRFIELDS.

types: begin of t_plugin,
         object type KO100-object,
         text type KO100-text,
       end of t_plugin.

types: begin of t_objectTable,
         classname type string,
         object type ko100-object,
         text type ko100-text,
       end of t_objectTable.

types: begin of t_nuggetObject,
          objType type string,
          objName type string,
          exists type flag,
       end of t_nuggetObject.

data pluginLine type t_plugin.
data pluginList type table of t_plugin.
data hidid(3) type c.
data currentTab type string.
data isNugget(1) type c value &apos; &apos;.
data objectTable type table of t_objectTable.
data objectLine type t_objectTable.
data _objName type string.
data _objType type string.
data nuggetName type string.
data targetObject type ref to zsaplink.
data xml type string.
data excClass type ref to ZCX_SAPLINK.
data errorMsg type string.
data statusMsg type string.
data _pluginExists type flag.
data _objectExists type flag.
data _flag type flag.

data errorFlag type flag.
data it_nuggetObject type table of t_nuggetObject.
data wa_nuggetObject type t_nuggetObject.

data defFilename type string.
data retFileName type string.
data retPath type string.
data retFullpath type string.
data retUserAct type i.
data retFileTable type FILETABLE.
data retRc type sysubrc.
data retUserAction type i.

data nugg type ref to zsaplink_nugget.
data sTemp type string.
data anXMLDoc type ref to if_ixml_document.
data ixmlDocument type ref to if_ixml_document.

data foo type ref to data.
data len type i.

data: l_marker type i,
      l_offset type i,
      l_total_offset type i.

*/------------------------SELECTION SCREEN----------------------------\


SELECTION-SCREEN BEGIN OF TABBED BLOCK tabb FOR 20 LINES.
SELECTION-SCREEN TAB (17) text-tb1 USER-COMMAND obj
                     DEFAULT SCREEN 110.
SELECTION-SCREEN TAB (17) text-tb2 USER-COMMAND nugg
                     DEFAULT SCREEN 120.
SELECTION-SCREEN END OF BLOCK tabb.


SELECTION-SCREEN BEGIN OF SCREEN 110 AS SUBSCREEN.
  selection-screen begin of block main with frame.
    selection-screen begin of block splk with frame title text-slk.
      parameters Import type c RADIOBUTTON GROUP 2 default &apos;X&apos;
        user-command updown.
      parameters Export type c RADIOBUTTON GROUP 2.
    selection-screen end of block splk.

    selection-screen begin of block opt with frame title text-opt.
      parameters filename(300) type c modif id did.
      parameters OverWr type c as checkbox modif id did.

      parameters objName(40) type c modif id uid.
      parameters plugin type KO100-object modif id uid.
    selection-screen end of block opt.
  selection-screen end of block main.
SELECTION-SCREEN END OF SCREEN 110.

SELECTION-SCREEN BEGIN OF SCREEN 120 AS SUBSCREEN.
  selection-screen begin of block main2 with frame.
    selection-screen begin of block splk2 with frame title text-slk.
        parameters NugI type c RADIOBUTTON GROUP 3 default &apos;X&apos;
          user-command updown.
        parameters NugA type c RADIOBUTTON GROUP 3.
        parameters nugD type c radiobutton group 3.
        parameters nugC type c radiobutton group 3.
    selection-screen end of block splk2.

    selection-screen begin of block opt2 with frame title text-opt.
      parameters NuggNam(300) type c modif id nnm.
      parameters NObjNam(40) type c modif id npg.
      parameters nPlugIn type  KO100-object modif id npg.
      parameter NugFile(300) type c modif id nfl.
      parameters nOvrWr type c as checkbox modif id now.
    selection-screen end of block opt2.
  selection-screen end of block main2.
SELECTION-SCREEN END OF SCREEN 120.
*\--------------------------------------------------------------------/


*/----------------------selection screen events-----------------------\
initialization.
  call method zsaplink=&gt;getplugins(
    changing objectTable = objectTable ).

  IMPORT isNugget FROM MEMORY ID &apos;ISNUGG&apos;.

  if isNugget = &apos;X&apos;.
    tabb-dynnr   = 120.
    tabb-activetab = &apos;NUGG&apos;.
  endif.

at selection-screen.
  case SSCRFIELDS-UCOMM.
    when &apos;OBJ&apos;.
      isNugget = &apos; &apos;.
    when &apos;NUGG&apos;.
      isNugget = &apos;X&apos;.
  endcase.
  EXPORT isNugget TO MEMORY ID &apos;ISNUGG&apos;.

AT SELECTION-SCREEN OUTPUT.
  if Import = &apos;X&apos;.
    hidID = &apos;UID&apos;.
  else.
    hidID = &apos;DID&apos;.
  endif.

  LOOP AT SCREEN.
    if SCREEN-GROUP1 = hidID.
      SCREEN-ACTIVE = &apos;0&apos;.
      SCREEN-INVISIBLE = &apos;1&apos;.
      MODIFY SCREEN.
    endif.
  ENDLOOP.


  loop at screen.
    if NugC = &apos;X&apos;.
      if screen-group1 = &apos;NNM&apos;.
        SCREEN-ACTIVE = &apos;1&apos;.
        SCREEN-INVISIBLE = &apos;0&apos;.
        MODIFY SCREEN.
       elseif screen-group1 = &apos;NPG&apos; or screen-group1 = &apos;NFL&apos;
         or screen-group1 = &apos;NOW&apos;.
        SCREEN-ACTIVE = &apos;0&apos;.
        SCREEN-INVISIBLE = &apos;1&apos;.
        MODIFY SCREEN.
       endif.
    elseif NugI = &apos;X&apos;.
      if screen-group1 = &apos;NFL&apos; or screen-group1 = &apos;NOW&apos;.
        SCREEN-ACTIVE = &apos;1&apos;.
        SCREEN-INVISIBLE = &apos;0&apos;.
        MODIFY SCREEN.
       elseif screen-group1 = &apos;NNM&apos; or screen-group1 =&apos;NPG&apos;.
        SCREEN-ACTIVE = &apos;0&apos;.
        SCREEN-INVISIBLE = &apos;1&apos;.
        MODIFY SCREEN.
       endif.
    elseif NugA = &apos;X&apos;.
      if screen-group1 = &apos;NFL&apos; or screen-group1 = &apos;NPG&apos;.
        SCREEN-ACTIVE = &apos;1&apos;.
        SCREEN-INVISIBLE = &apos;0&apos;.
        MODIFY SCREEN.
      elseif screen-group1 = &apos;NNM&apos; or screen-group1 = &apos;NOW&apos;.
        SCREEN-ACTIVE = &apos;0&apos;.
        SCREEN-INVISIBLE = &apos;1&apos;.
        MODIFY SCREEN.
      endif.
    elseif NugD = &apos;X&apos;.
      if screen-group1 = &apos;NFL&apos;.
        SCREEN-ACTIVE = &apos;1&apos;.
        SCREEN-INVISIBLE = &apos;0&apos;.
        MODIFY SCREEN.
       elseif screen-group1 = &apos;NNM&apos; or screen-group1 =&apos;NPG&apos;
        or screen-group1 = &apos;NOW&apos;.
        SCREEN-ACTIVE = &apos;0&apos;.
        SCREEN-INVISIBLE = &apos;1&apos;.
        MODIFY SCREEN.
       endif.
    endif.
  endloop.

at selection-screen on value-request for plugin.
  refresh pluginList.
  loop at objectTable into objectLine.
    move-corresponding objectLine to pluginLine.
    append pluginLine to pluginList.
  endloop.

  CALL FUNCTION &apos;F4IF_INT_TABLE_VALUE_REQUEST&apos;
   EXPORTING
     retfield               = &apos;OBJECT&apos;
     window_title           = &apos;Installed Plugins&apos;
     dynpprog    = sy-repid
     dynpnr      = &apos;1000&apos;
     dynprofield = &apos;PLUGIN&apos;
     value_org   = &apos;S&apos;
   TABLES
     value_tab              =  pluginList
   EXCEPTIONS
     PARAMETER_ERROR        = 1
     NO_VALUES_FOUND        = 2
     OTHERS                 = 3.

at selection-screen on value-request for Nplugin.
  refresh pluginList.
  loop at objectTable into objectLine.
    move-corresponding objectLine to pluginLine.
    append pluginLine to pluginList.
  endloop.

  CALL FUNCTION &apos;F4IF_INT_TABLE_VALUE_REQUEST&apos;
   EXPORTING
     retfield               = &apos;OBJECT&apos;
     window_title           = &apos;Installed Plugins&apos;
     dynpprog    = sy-repid
     dynpnr      = &apos;1000&apos;
     dynprofield = &apos;NPLUGIN&apos;
     value_org   = &apos;S&apos;
   TABLES
     value_tab              =  pluginList
   EXCEPTIONS
     PARAMETER_ERROR        = 1
     NO_VALUES_FOUND        = 2
     OTHERS                 = 3.


at selection-screen on value-request for filename.
  call method CL_GUI_FRONTEND_SERVICES=&gt;FILE_OPEN_DIALOG
      exporting
        MULTISELECTION = abap_false
        FILE_FILTER = &apos;*.slnk&apos;
        DEFAULT_EXTENSION = &apos;slnk&apos;
      changing
        FILE_TABLE = retFileTable
        rc = retRc
        user_Action = retUserAction.
  read table retFileTable into fileName index 1.

at selection-screen on value-request for NugFile.
  call method CL_GUI_FRONTEND_SERVICES=&gt;FILE_OPEN_DIALOG
      exporting
        MULTISELECTION = abap_false
        FILE_FILTER = &apos;*.nugg&apos;
        DEFAULT_EXTENSION = &apos;nugg&apos;
      changing
        FILE_TABLE = retFileTable
        rc = retRc
        user_Action = retUserAction.
  read table retFileTable into NugFile index 1.

*\--------------------------------------------------------------------/

*/----------------------main------------------------------------------\
start-of-selection.
  clear: errorMsg, statusMsg.
  if isNugget is initial.
    _objName = objName.
    if Export = &apos;X&apos;.
      read table objectTable into objectLine with key object = plugin.
      if sy-subrc &lt;&gt; 0.
        write: / &apos;Plugin for object type &apos;, plugin,
          &apos; is not installed on this system&apos;.
        exit.
      endif.
      create object targetObject type (objectLine-classname)
        exporting name = _objName.
      try.
        ixmlDocument = targetObject-&gt;CREATEIXMLDOCFROMOBJECT( ).
        catch ZCX_SAPLINK into excClass.
          errorMsg = excClass-&gt;get_text( ).
          write errorMsg.
      endtry.
      if errorMsg is not initial.
        exit.
      endif.
      xml = zsapLink=&gt;convertIxmlDoctoString( ixmlDocument ).

      concatenate plugin &apos;_&apos; _objName &apos;.slnk&apos; into defFilename.
      clear errorFlag.
      perform downloadXMLtoLM using defFilename xml
                              changing errorFlag.
      if errorFlag is not initial.
        message s208(00) with &apos;Action cancelled&apos;.
        exit.
      endif.
      perform displayXMLOnScreen using xml.
    elseif Import = &apos;X&apos;.
      perform uploadXMLFromLM using filename xml.
      ixmlDocument = zsapLink=&gt;convertStringToIxmlDoc( xml ).

*     run some checks before install
      perform checkObject using ixmlDocument
                          changing _objType
                                   _objName
                                   _pluginExists
                                   _objectExists.

      if _pluginExists is initial.
        concatenate
          &apos;There is no installed SAPlink plugin for object type&apos;
          _objType into errorMsg separated by space.
        write / errorMsg.
        exit.
      elseif _objectExists = &apos;X&apos; and overWr is initial.
        concatenate _objType _objName &apos;already exists. Use overwrite&apos;
          &apos;orginals option to replace&apos; into errorMsg separated by space.
        write / errorMsg.
        exit.
      elseif _objectExists = &apos;X&apos; and overWr = &apos;X&apos;.
        concatenate _objType _objName into sTemp separated by space.
        perform confirmOverwrite using sTemp
                              changing _flag.
        if _flag = &apos;A&apos;. &quot;cancel
          write / &apos;Import cancelled by user&apos;.
          exit.
        endif.
      endif.

*     install object
      perform installObject using ixmlDocument overWr
                         changing errorFlag statusMsg.
      write / statusMsg.
      if errorFlag = &apos;X&apos;.
        exit.
      endif.
    endif.
    message s208(00) with &apos;Import successful&apos;.
  else.
    if nugC = &apos;X&apos;.
      if nuggNam is initial.
        write / &apos;Please enter the name of the new nugget to be created&apos;.
        exit.
      endif.
      stemp = nuggNam.
      ixmlDocument = zsaplink_nugget=&gt;createemptyXML(
        nuggetName = sTemp ).
      xml = zsapLink=&gt;convertIxmlDoctoString( ixmlDocument ).
      concatenate &apos;NUGG_&apos; nuggNam &apos;.nugg&apos; into sTemp.
      clear errorFlag.
      perform downloadXMLtoLM using sTemp xml
                              changing errorFlag.
      if errorFlag is not initial.
        exit.
      endif.
    elseif NugA = &apos;X&apos;.
      read table objectTable into objectLine with key object = nplugin.
      if sy-subrc &lt;&gt; 0.
        write: / &apos;Plugin for object type &apos;, nplugin,
          &apos; is not installed on this system&apos;.
        exit.
      endif.
      sTemp = nuggNam.
      perform uploadXMLFromLM using nugfile xml.
      ixmlDocument = zsapLink=&gt;convertStringToIxmlDoc( xml ).
      create object nugg exporting ixmlDocument = ixmlDocument.
      _objName = nobjNam.
      sTemp = nplugin.
      try.
        nugg-&gt;ADDOBJECTTONUGGET( objName = _objName objType = sTemp ).
        catch ZCX_SAPLINK into excClass.
          errorMsg = excClass-&gt;get_text( ).
          write / errorMsg.
          exit.
      endtry.
      ixmlDocument = nugg-&gt;CREATEIXMLDOCFROMNUGGET( ).
      xml = zsapLink=&gt;convertIxmlDoctoString( ixmlDocument ).
      concatenate  nuggNam &apos;.nugg&apos; into sTemp.
      sTemp = nugFile.
      perform putOnMachine using sTemp xml.
    elseif NugI = &apos;X&apos;.
      perform uploadXMLFromLM using nugfile xml.
      ixmlDocument = zsapLink=&gt;convertStringToIxmlDoc( xml ).
      nuggetName = zsaplink_nugget=&gt;getnuggetinfo( ixmlDocument ).
      write: / &apos;Starting import of nugget &apos;, nuggetName. skip.

      create object nugg exporting ixmlDocument = ixmlDocument.

*     check for installed plugins
      clear errorFlag.
      refresh it_nuggetObject.
      anXMLDoc = nugg-&gt;getNextObject( ).
      while anXMLDoc is not Initial.
        clear: _objType, _objName, _pluginExists, _objectExists,
               wa_nuggetObject.
        perform checkObject using anXMLDoc
                            changing _objType
                                     _objName
                                     _pluginExists
                                     _objectExists.
        if _pluginExists is initial.
          concatenate
            &apos;There is no installed SAPlink plugin for object type&apos;
            _objType into errorMsg separated by space.
          write / errorMsg.
          errorFlag = &apos;X&apos;.
        elseif _objectExists = &apos;X&apos; and nOvrWr is initial.
          concatenate _objType _objName &apos;already exists. Use overwrite&apos;
            &apos;orginals option to replace&apos;
              into errorMsg separated by space.
          write / errorMsg.
          errorFlag = &apos;X&apos;.
        endif.
        wa_nuggetObject-objType = _objType.
        wa_nuggetObject-objName = _objName.
        wa_nuggetObject-exists = _objectExists.
        append wa_nuggetObject to it_nuggetObject.

        anXMLDoc = nugg-&gt;getNextObject( ).
      endwhile.

      if errorFlag = &apos;X&apos;.
        exit.
      endif.

*     confirm overwrite
      loop at it_nuggetObject into wa_nuggetObject where exists = &apos;X&apos;.
        clear _flag.
        concatenate wa_nuggetObject-objType wa_nuggetObject-objName
          into sTemp separated by space.
        perform confirmOverwrite using sTemp
                              changing _flag.
        if _flag = &apos;1&apos;. &quot;yes
          continue.
        elseif _flag = &apos;2&apos;. &quot;yes to all
          clear errorFlag.
          exit.
        elseif _flag = &apos;A&apos;. &quot;cancel
          write / &apos;Import cancelled by user&apos;.
          errorFlag = &apos;X&apos;.
          exit.
        endif.
      endloop.

      if errorFlag = &apos;X&apos;.
        exit.
      endif.

*     install nugget
      nugg-&gt;reset( ). &quot;reset nugget iterator
      anXMLDoc = nugg-&gt;getNextObject( ).
      while anXMLDoc is not Initial.
        clear statusMsg.
        perform installObject using anXMLDoc nOvrWr
                           changing errorFlag
                                    statusMsg.
        write / statusMsg.
*       do not continue with nugget install if error occurrs
        if errorFlag = &apos;X&apos;.
          exit.
        endif.
        anXMLDoc = nugg-&gt;getNextObject( ).
      endwhile.

      if errorFlag = &apos;X&apos;.
        exit.
      endif.
      message s208(00) with &apos;Import successful&apos;.
    elseif NugD = &apos;X&apos;.
      perform uploadXMLFromLM using nugfile xml.
      ixmlDocument = zsapLink=&gt;convertStringToIxmlDoc( xml ).
      nuggetName = zsaplink_nugget=&gt;getnuggetinfo( ixmlDocument ).
      write: / &apos;Object list for nugget &apos;, nuggetName. skip.

      create object nugg exporting ixmlDocument = ixmlDocument.
      anXMLDoc = nugg-&gt;getNextObject( ).

      if anXMLDoc is initial.
        write / &apos;You have an empty Nugget&apos;.
        exit.
      endif.

      while anXMLDoc is not Initial.
        call method zsapLink=&gt;GETOBJECTInfoFROMIXMLDOC
              exporting
                ixmlDocument = anXMLDoc
              importing
                objtypename = _objType
                objname     = _objName.
        write: / _objtype, &apos; &apos;, _objName.
        anXMLDoc = nugg-&gt;getNextObject( ).
      endwhile.
    endif.
  endif.

*\--------------------------------------------------------------------/

*/----------------------displayXMLOnScreen----------------------------\
form displayXMLOnScreen using xmlString type string.
data printXMLDoc type ref to cl_xml_document.
data rc type sysubrc.

  create object printXMLDoc.
  rc = printXMLDoc-&gt;parse_string( xmlString ).
  call method printXMLDoc-&gt;display( ).

endform.
*\--------------------------------------------------------------------/

*/----------------------downloadXMLToLM-------------------------------\
form downloadXMLToLM using   defFilename type string
                             xmlString type string
                    changing _errorFlag type flag.

data retFileName type string.
data retPath type string.
data retFullpath type string.
data retUserAct type i.

  clear _errorFlag.

  call method CL_GUI_FRONTEND_SERVICES=&gt;FILE_SAVE_DIALOG
        exporting
          DEFAULT_FILE_NAME = defFilename
        changing
          FILENAME = retFileName
          PATH = retPath
          FULLPATH = retFullPath
          USER_ACTION = retUserAct.

  if retUserAct &lt;&gt; 0.
   _errorFlag = &apos;X&apos;.
  else.
    perform putOnMachine using retFullPath xmlString.
  endif.


endform.
*\--------------------------------------------------------------------/


*/------------------------putOnMachine--------------------------------\
form putOnMachine using fullpath type string xmlString type string.

data tempTable type table_of_strings.
data encoding type abap_encoding.
data applEncoding type CPCODEPAGE.
data tempString type string.
data tempXString type xstring.
data xLen type i.
data totalxLen type i.

types: xLin(65535) type x.

data binLin type xLin.
data tempTable_bin type table of xLin.

    append xmlString to tempTable.

    call function &apos;SCP_GET_CODEPAGE_NUMBER&apos;
          importing
            APPL_CODEPAGE = applEncoding.
    encoding = applEncoding.


   if retUserAct = 0.
*   build binary table with file content
    loop at tempTable into tempString.
      clear tempXString.
*     export tempString to data buffer tempXString.
      CALL FUNCTION &apos;SCMS_STRING_TO_XSTRING&apos;
        EXPORTING
          text           = tempString
          encoding       = encoding
        IMPORTING
          BUFFER         = tempXString
        EXCEPTIONS
         FAILED         = 1
         OTHERS         = 2.

      l_marker = 0. l_offset = 65535. l_total_offset = 0.
      xLen = xstrlen( tempXString ).
      totalxLen = totalxLen + xLen.

      while l_marker &lt; xLen.
        l_total_offset = l_marker + l_offset.
        if l_total_offset &gt; xLen.
          l_offset = xLen - l_marker.
        endif.

        binLin = tempXString+l_marker(l_offset).
        append binLin to tempTable_bin.
        l_marker = l_marker + l_offset.
      endwhile.
    endloop.

    call method CL_GUI_FRONTEND_SERVICES=&gt;GUI_DOWNLOAD
          exporting
            FILENAME = fullpath
            FILETYPE = &apos;BIN&apos;
            BIN_FILESIZE = totalxLen
          changing
            DATA_TAB = tempTable_bin.
   endif.


endform.
*\--------------------------------------------------------------------/


*/----------------------uploadXMLFromLM-------------------------------\
form uploadXMLFromLM using p_filename xmlString type string .
data retFileTable type FILETABLE.
data retRc type sysubrc.
data retUserAction type i.
data tempTable type table_of_strings.
data tempTable_bin type table  of xstring.
data l_fileName type string.

  l_fileName = p_filename.
  call method CL_GUI_FRONTEND_SERVICES=&gt;GUI_UPLOAD
        exporting
          FILENAME = l_fileName
        changing
          data_tab = tempTable.
  perform createString using tempTable changing xmlString.

endform.
*\--------------------------------------------------------------------/

*/----------------------createString----------------------------------\
form createString
      using
        tempTable type table_of_strings
      changing
        bigString type string.

data sTemp type string.
  loop at tempTable into sTemp.
    concatenate bigString sTemp CL_ABAP_CHAR_UTILITIES=&gt;NEWLINE
      into bigString.
  endloop.

endform.
*\--------------------------------------------------------------------/

*/----------------------installObject---------------------------------\
form installObject using l_ixmlDocument type ref to if_ixml_document
                         l_overwriteFlag type flag
                changing l_errorFlag type flag
                         l_message type string.

data l_objName type string.
data l_objType type string.
data l_objTable type table of t_objectTable.
data l_objLine type t_objectTable.
data l_targetObject type ref to zsaplink.
data l_installObject type string.
data l_excClass type ref to ZCX_SAPLINK.

  clear l_errorFlag.
  call method zsapLink=&gt;GETOBJECTInfoFROMIXMLDOC
        exporting
          ixmlDocument = l_ixmlDocument
        importing
          objtypename = l_objType
          objname     = l_objName.

  call method zsaplink=&gt;getplugins( changing objectTable = l_objTable ).

  read table l_objTable into l_objLine with key object = l_objType.

  if sy-subrc &lt;&gt; 0.
    concatenate &apos;There is no installed SAPlink plugin for object type&apos;
      l_objType into l_message separated by space.
    l_errorFlag = &apos;X&apos;.
  else.
    create object l_targetObject type (l_objLine-classname)
      exporting name = l_objName.

    if l_targetObject is not initial.
      try.
        l_installObject = l_targetObject-&gt;createObjectfromiXMLDoc(
                                        ixmlDocument = l_ixmlDocument
                                        overwrite = l_overwriteFlag ).
        catch ZCX_SAPLINK into excClass.
          l_message = l_excClass-&gt;get_text( ).
          l_errorFlag = &apos;X&apos;.
      endtry.
      if l_installObject is not initial.
        concatenate l_objType l_installObject &apos;install successful,&apos;
         &apos;you must activate object to use&apos;
         into l_message separated by space.
      endif.
    else.
      l_message = &apos;an undetermined error occured&apos;.
      l_errorFlag = &apos;X&apos;.
    endif.
  endif.

endform.
*\--------------------------------------------------------------------/

*/----------------------confirmOverwrite------------------------------\
form confirmOverwrite using l_objInfo type string
                   changing l_answer type flag.

data l_message type string.
data l_title type string.

  clear l_answer.
  l_title = &apos;Overwrite confirm. Proceed with CAUTION!&apos;.

  concatenate &apos;You have selected to overwrite originals.&apos;
    l_objinfo &apos;will be overwritten. Are you sure?&apos;
    into l_message separated by space.

  CALL FUNCTION &apos;POPUP_TO_CONFIRM&apos;
    EXPORTING
      TITLEBAR                    = l_title
      text_question               = l_message
      TEXT_BUTTON_1               = &apos;Yes&apos;
      TEXT_BUTTON_2               = &apos;Yes to all&apos;
      DEFAULT_BUTTON              = &apos;1&apos;
      DISPLAY_CANCEL_BUTTON       = &apos;X&apos;
    IMPORTING
      ANSWER                      = l_answer
            .
endform.
*\--------------------------------------------------------------------/

*/----------------------checkObject-----------------------------------\
form checkObject using l_ixmlDocument type ref to if_ixml_document
              changing l_objType type string
                       l_objName type string
                       l_pluginExists type flag
                       l_objectExists type flag.

data l_objTable type table of t_objectTable.
data l_objLine type t_objectTable.
data l_targetObject type ref to zsaplink.

  clear: l_objType, l_objName, l_pluginExists, l_objectExists.
  call method zsapLink=&gt;GETOBJECTInfoFROMIXMLDOC
        exporting
          ixmlDocument = l_ixmlDocument
        importing
          objtypename = l_objType
          objname     = l_objName.

  call method zsaplink=&gt;getplugins( changing objectTable = l_objTable ).

  read table l_objTable into l_objLine with key object = l_objType.

  if sy-subrc = 0.
    l_pluginExists = &apos;X&apos;.
    create object l_targetObject type (l_objLine-classname)
      exporting name = l_objName.

    l_objectExists = l_targetObject-&gt;checkexists( ).
  endif.

endform.
*\--------------------------------------------------------------------/</source>
 </PROG>
 <CLAS CLSNAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" UUID="44BE650060AC082502000000A7E42BB6" CATEGORY="40" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="USDWM01" CREATEDON="20060719" CHANGEDBY="USEWH90" CHANGEDON="00000000" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" VARCL="X" UNICODE="X" RSTAT="S" R3RELEASE="620" CLSBCCAT="00" REFCLSNAME="CX_STATIC_CHECK">
  <publicSection>class ZCX_SAPLINK definition
  public
  inheriting from CX_STATIC_CHECK
  create public .

*&quot;* public components of class ZCX_SAPLINK
*&quot;* do not include other source files here!!!
public section.

  constants EXISTING type SOTR_CONC
 value &apos;44F5C1A35F5C09C200000000A7E42BB6&apos;. &quot;#EC NOTEXT
  constants SYSTEM_ERROR type SOTR_CONC
 value &apos;44F5C1B55F5C09C200000000A7E42BB6&apos;. &quot;#EC NOTEXT
  constants ERROR_MESSAGE type SOTR_CONC
 value &apos;44F5C21A5F5C09C200000000A7E42BB6&apos;. &quot;#EC NOTEXT
  constants NOT_AUTHORIZED type SOTR_CONC
 value &apos;44F5C1A95F5C09C200000000A7E42BB6&apos;. &quot;#EC NOTEXT
  constants NOT_FOUND type SOTR_CONC
 value &apos;44F5C1AF5F5C09C200000000A7E42BB6&apos;. &quot;#EC NOTEXT
  constants LOCKED type SOTR_CONC
 value &apos;44F7518323DB08BC02000000A7E42BB6&apos;. &quot;#EC NOTEXT
  constants NO_PLUGIN type SOTR_CONC
 value &apos;44F7C18C68D709C200000000A7E42BB6&apos;. &quot;#EC NOTEXT
  data MSG type STRING .

  methods CONSTRUCTOR
    importing
      !TEXTID like TEXTID optional
      !PREVIOUS like PREVIOUS optional
      value(MSG) type STRING optional .</publicSection>
  <protectedSection>*&quot;* protected components of class ZCX_SAPLINK
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
  <privateSection>*&quot;* private components of class ZCX_SAPLINK
*&quot;* do not include other source files here!!!
private section.</privateSection>
  <attribute CLSNAME="ZCX_SAPLINK" CMPNAME="ERROR_MESSAGE" VERSION="0" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;44F5C21A5F5C09C200000000A7E42BB6&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X">
   <sotr CONCEPT="44F5C21A5F5C09C200000000A7E42BB6" PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="USEWH90" CREA_TSTUT="20060830222845" CHAN_NAME="USEWH90" CHAN_TSTUT="20060830222845" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText CONCEPT="44F5C21A5F5C09C200000000A7E42BB6" LANGU="E" OBJECT="44F5C21B5F5C09C200000000A7E42BB6" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="USEWH90" CREA_TSTUT="20060830222845" CHAN_NAME="USEWH90" CHAN_TSTUT="20060830222917" STATUS="R" VERSION="0" LENGTH="255" TEXT="&amp;msg&amp;"/>
   </sotr>
  </attribute>
  <attribute CLSNAME="ZCX_SAPLINK" CMPNAME="EXISTING" VERSION="0" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="0 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDBY="USEWH90" CHANGEDON="20060830" ATTDECLTYP="2" ATTVALUE="&apos;44F5C1A35F5C09C200000000A7E42BB6&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X">
   <sotr CONCEPT="44F5C1A35F5C09C200000000A7E42BB6" PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="USEWH90" CREA_TSTUT="20060830222424" CHAN_NAME="USEWH90" CHAN_TSTUT="20060830222424" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText CONCEPT="44F5C1A35F5C09C200000000A7E42BB6" LANGU="E" OBJECT="44F5C1A45F5C09C200000000A7E42BB6" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="USEWH90" CREA_TSTUT="20060830222424" CHAN_NAME="USEWH90" CHAN_TSTUT="20060830224432" STATUS="R" VERSION="0" LENGTH="255" TEXT="A new object that you want to create already exists"/>
   </sotr>
  </attribute>
  <attribute CLSNAME="ZCX_SAPLINK" CMPNAME="LOCKED" VERSION="0" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="USEWH90" CREATEDON="20060901" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;44F7518323DB08BC02000000A7E42BB6&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" R3RELEASE="620">
   <sotr CONCEPT="44F7518323DB08BC02000000A7E42BB6" PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="USEWH90" CREA_TSTUT="20060901044545" CHAN_NAME="USEWH90" CHAN_TSTUT="20060901044545" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText CONCEPT="44F7518323DB08BC02000000A7E42BB6" LANGU="E" OBJECT="44F7518423DB08BC02000000A7E42BB6" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="USEWH90" CREA_TSTUT="20060901044545" CHAN_NAME="USEWH90" CHAN_TSTUT="20060901044545" STATUS="R" VERSION="0" LENGTH="255" TEXT="Object is locked"/>
   </sotr>
  </attribute>
  <attribute CLSNAME="ZCX_SAPLINK" CMPNAME="MSG" VERSION="0" LANGU="E" DESCRIPT="Error message variable" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="620"/>
  <attribute CLSNAME="ZCX_SAPLINK" CMPNAME="NOT_AUTHORIZED" VERSION="0" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDBY="USEWH90" CHANGEDON="20060830" ATTDECLTYP="2" ATTVALUE="&apos;44F5C1A95F5C09C200000000A7E42BB6&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" R3RELEASE="620">
   <sotr CONCEPT="44F5C1A95F5C09C200000000A7E42BB6" PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="USEWH90" CREA_TSTUT="20060830222425" CHAN_NAME="USEWH90" CHAN_TSTUT="20060830222425" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText CONCEPT="44F5C1A95F5C09C200000000A7E42BB6" LANGU="E" OBJECT="44F5C1AA5F5C09C200000000A7E42BB6" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="USEWH90" CREA_TSTUT="20060830222425" CHAN_NAME="USEWH90" CHAN_TSTUT="20060830222425" STATUS="R" VERSION="0" LENGTH="255" TEXT="The user does not have the required authorization"/>
   </sotr>
  </attribute>
  <attribute CLSNAME="ZCX_SAPLINK" CMPNAME="NOT_FOUND" VERSION="0" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDBY="USEWH90" CHANGEDON="20060830" ATTDECLTYP="2" ATTVALUE="&apos;44F5C1AF5F5C09C200000000A7E42BB6&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" R3RELEASE="620">
   <sotr CONCEPT="44F5C1AF5F5C09C200000000A7E42BB6" PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="USEWH90" CREA_TSTUT="20060830222426" CHAN_NAME="USEWH90" CHAN_TSTUT="20060830222426" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText CONCEPT="44F5C1AF5F5C09C200000000A7E42BB6" LANGU="E" OBJECT="44F5C1B05F5C09C200000000A7E42BB6" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="USEWH90" CREA_TSTUT="20060830222426" CHAN_NAME="USEWH90" CHAN_TSTUT="20060830222426" STATUS="R" VERSION="0" LENGTH="255" TEXT="Unable to find the requested object"/>
   </sotr>
  </attribute>
  <attribute CLSNAME="ZCX_SAPLINK" CMPNAME="NO_PLUGIN" VERSION="0" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="USEWH90" CREATEDON="20060901" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;44F7C18C68D709C200000000A7E42BB6&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" R3RELEASE="620">
   <sotr CONCEPT="44F7C18C68D709C200000000A7E42BB6" PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="USEWH90" CREA_TSTUT="20060901132438" CHAN_NAME="USEWH90" CHAN_TSTUT="20060901132438" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText CONCEPT="44F7C18C68D709C200000000A7E42BB6" LANGU="E" OBJECT="44F7C18D68D709C200000000A7E42BB6" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="USEWH90" CREA_TSTUT="20060901132438" CHAN_NAME="USEWH90" CHAN_TSTUT="20060901132438" STATUS="R" VERSION="0" LENGTH="255" TEXT="This plugin is not available on this system"/>
   </sotr>
  </attribute>
  <attribute CLSNAME="ZCX_SAPLINK" CMPNAME="SYSTEM_ERROR" VERSION="0" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="0 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDBY="USEWH90" CHANGEDON="20060830" ATTDECLTYP="2" ATTVALUE="&apos;44F5C1B55F5C09C200000000A7E42BB6&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X">
   <sotr CONCEPT="44F5C1B55F5C09C200000000A7E42BB6" PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="USEWH90" CREA_TSTUT="20060830222517" CHAN_NAME="USEWH90" CHAN_TSTUT="20060830222517" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText CONCEPT="44F5C1B55F5C09C200000000A7E42BB6" LANGU="E" OBJECT="44F5C1B65F5C09C200000000A7E42BB6" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="USEWH90" CREA_TSTUT="20060830222517" CHAN_NAME="USEWH90" CHAN_TSTUT="20060830224925" STATUS="R" VERSION="0" LENGTH="255" TEXT="ouch, your pants are on fire..better go get help"/>
   </sotr>
  </attribute>
  <method CLSNAME="ZCX_SAPLINK" CMPNAME="CONSTRUCTOR" VERSION="0" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060719" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" LOCKED="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCX_SAPLINK" CMPNAME="CONSTRUCTOR" SCONAME="TEXTID" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060719" CHANGEDBY="USEWH90" CHANGEDON="20060901" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="TEXTID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_SAPLINK" CMPNAME="CONSTRUCTOR" SCONAME="PREVIOUS" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060719" CHANGEDBY="USEWH90" CHANGEDON="20060901" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="PREVIOUS" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_SAPLINK" CMPNAME="CONSTRUCTOR" SCONAME="MSG" VERSION="0" LANGU="E" DESCRIPT="MSG" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDBY="USEWH90" CHANGEDON="20060901" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <source>method CONSTRUCTOR .
CALL METHOD SUPER-&gt;CONSTRUCTOR
EXPORTING
TEXTID = TEXTID
PREVIOUS = PREVIOUS
.
me-&gt;MSG = MSG .
endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZSAPLINK_NUGGET" VERSION="0" LANGU="E" DESCRIPT="SAPlink Nugget" UUID="44F3BA07217B09C200000000A7E42BB6" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="620" CLSBCCAT="00">
  <publicSection>class ZSAPLINK_NUGGET definition
  public
  final
  create public .

*&quot;* public components of class ZSAPLINK_NUGGET
*&quot;* do not include other source files here!!!
public section.

  methods ADDOBJECTTONUGGET
    importing
      !OBJNAME type STRING
      !OBJTYPE type STRING
    raising
      ZCX_SAPLINK .
  class-methods CREATEEMPTYXML
    importing
      !NUGGETNAME type STRING
    returning
      value(IXMLDOCUMENT) type ref to IF_IXML_DOCUMENT .
  methods CREATEIXMLDOCFROMNUGGET
    returning
      value(IXMLDOCUMENT) type ref to IF_IXML_DOCUMENT
    raising
      ZCX_SAPLINK .
  methods GETNEXTOBJECT
    returning
      value(IXMLDOCUMENT) type ref to IF_IXML_DOCUMENT .
  class-methods GETNUGGETINFO
    importing
      !IXMLDOCUMENT type ref to IF_IXML_DOCUMENT
    returning
      value(NAME) type STRING .
  methods RESET .
  methods CONSTRUCTOR
    importing
      !NAME type STRING optional
      !IXMLDOCUMENT type ref to IF_IXML_DOCUMENT optional .</publicSection>
  <protectedSection>*&quot;* protected components of class ZSAPLINK_NUGGET
*&quot;* do not include other source files here!!!
protected section.

  data IXML type ref to IF_IXML .
  data XMLDOC type ref to IF_IXML_DOCUMENT .</protectedSection>
  <privateSection>*&quot;* private components of class ZSAPLINK_NUGGET
*&quot;* do not include other source files here!!!
private section.

  data ITERATOR type ref to IF_IXML_NODE_ITERATOR .
  data NUGGNAME type STRING .
  data STREAMFACTORY type ref to IF_IXML_STREAM_FACTORY .
  data XMLDATA type STRING .</privateSection>
  <attribute CLSNAME="ZSAPLINK_NUGGET" CMPNAME="ITERATOR" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_NODE_ITERATOR" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="USDWM01" CREATEDON="20060831" CHANGEDBY="USDWM01" CHANGEDON="20060831" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="IF_IXML_NODE_ITERATOR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="620"/>
  <attribute CLSNAME="ZSAPLINK_NUGGET" CMPNAME="IXML" VERSION="0" LANGU="E" DESCRIPT="IF_IXML" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="IF_IXML" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="620"/>
  <attribute CLSNAME="ZSAPLINK_NUGGET" CMPNAME="NUGGNAME" VERSION="0" LANGU="E" DESCRIPT="Nugget Name" EXPOSURE="0" STATE="1" EDITORDER="5 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDBY="USDWM01" CHANGEDON="20060831" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 "/>
  <attribute CLSNAME="ZSAPLINK_NUGGET" CMPNAME="STREAMFACTORY" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_STREAM_FACTORY" EXPOSURE="0" STATE="1" EDITORDER="6 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDBY="USDWM01" CHANGEDON="20060831" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="IF_IXML_STREAM_FACTORY" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 "/>
  <attribute CLSNAME="ZSAPLINK_NUGGET" CMPNAME="XMLDATA" VERSION="0" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="7 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDBY="USDWM01" CHANGEDON="20060831" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 "/>
  <attribute CLSNAME="ZSAPLINK_NUGGET" CMPNAME="XMLDOC" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="620"/>
  <method CLSNAME="ZSAPLINK_NUGGET" CMPNAME="ADDOBJECTTONUGGET" VERSION="0" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="0 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDBY="USEWH90" CHANGEDON="20060903" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK_NUGGET" CMPNAME="ADDOBJECTTONUGGET" SCONAME="OBJNAME" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZSAPLINK_NUGGET" CMPNAME="ADDOBJECTTONUGGET" SCONAME="OBJTYPE" VERSION="0" LANGU="E" DESCRIPT="Object Type" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDBY="USDWM01" CHANGEDON="20060831" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <exception CLSNAME="ZSAPLINK_NUGGET" CMPNAME="ADDOBJECTTONUGGET" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060903" CHANGEDON="00000000"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method ADDOBJECTTONUGGET .
types: begin of t_objectTable,
         classname type string,
         object type ko100-object,
         text type ko100-text,
       end of t_objectTable.

data rootNode type ref to if_ixml_element.
data saplink type ref to zsaplink.
data objectTable type table of t_objectTable.
data objectLine type t_objectTable.
data ixmlDocument type ref to if_ixml_document.
data rval type i.
data objElement type ref to if_ixml_element.

  call method zsaplink=&gt;getplugins( changing objectTable = objectTable )
  .

  rootNode = xmlDoc-&gt;GET_ROOT_ELEMENT( ).
*  if rootNode is initial.
*    rootNode = xmlDoc-&gt;create_element( &apos;nugget&apos; ).
*    rval = rootNode-&gt;SET_ATTRIBUTE( name = &apos;name&apos; value = nuggName ).
*    rval = xmlDoc-&gt;append_child( rootNode ).
*  endif.

  read table objectTable into objectLine with key object = ObjType.
  if sy-subrc &lt;&gt; 0.
    raise exception type zcx_saplink
          exporting textid = zcx_saplink=&gt;no_plugin.
  endif.
  create object saplink type (objectLine-classname) exporting name =
  objName.
  ixmlDocument = saplink-&gt;CREATEIXMLDOCFROMOBJECT( ).
  objElement = ixmlDocument-&gt;get_root_element( ).
  rval = rootNode-&gt;append_Child( objElement ).
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK_NUGGET" CMPNAME="CONSTRUCTOR" VERSION="0" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK_NUGGET" CMPNAME="CONSTRUCTOR" SCONAME="NAME" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDBY="USDWM01" CHANGEDON="20060831" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZSAPLINK_NUGGET" CMPNAME="CONSTRUCTOR" SCONAME="IXMLDOCUMENT" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060831" CHANGEDBY="USDWM01" CHANGEDON="20060831" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT" PAROPTIONL="X"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CONSTRUCTOR .
data rootNode type ref to if_ixml_element.
  if name is not initial.
    NuggName = name.
    ixml = cl_ixml=&gt;create( ).
    xmlDoc = ixml-&gt;create_document( ).
    streamFactory = ixml-&gt;CREATE_STREAM_FACTORY( ).
  elseif ixmlDocument is not initial.
    ixml = cl_ixml=&gt;create( ).
    xmlDoc = ixmlDocument.
    rootNode = xmlDoc-&gt;get_root_element( ).
    nuggName = rootNode-&gt;get_attribute( &apos;name&apos; ).
    streamFactory = ixml-&gt;CREATE_STREAM_FACTORY( ).
  else.
    raise exception type zcx_saplink
      exporting textid = zcx_saplink=&gt;system_error.
  endif.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK_NUGGET" CMPNAME="CREATEEMPTYXML" VERSION="0" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="0 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060831" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK_NUGGET" CMPNAME="CREATEEMPTYXML" SCONAME="NUGGETNAME" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060831" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZSAPLINK_NUGGET" CMPNAME="CREATEEMPTYXML" SCONAME="IXMLDOCUMENT" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060831" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CREATEEMPTYXML .
data ixml type ref to if_IXML.
data rootNode type ref to if_ixml_element.
data rval type i.
data xmlDoc type ref to if_ixml_document.

  ixml = cl_ixml=&gt;create( ).
  xmlDoc = ixml-&gt;create_document( ).
  rootNode = xmlDoc-&gt;create_element( &apos;nugget&apos; ).
  rval = rootNode-&gt;SET_ATTRIBUTE( name = &apos;name&apos; value = nuggetName ).
  rval = xmlDoc-&gt;append_child( rootNode ).
  ixmlDocument = xmlDoc.

endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK_NUGGET" CMPNAME="CREATEIXMLDOCFROMNUGGET" VERSION="0" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="0 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDBY="USEWH90" CHANGEDON="20060903" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK_NUGGET" CMPNAME="CREATEIXMLDOCFROMNUGGET" SCONAME="IXMLDOCUMENT" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
   <exception CLSNAME="ZSAPLINK_NUGGET" CMPNAME="CREATEIXMLDOCFROMNUGGET" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060903" CHANGEDON="00000000"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CREATEIXMLDOCFROMNUGGET .
  ixmlDocument = xmlDoc.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK_NUGGET" CMPNAME="GETNEXTOBJECT" VERSION="0" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="0 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060901" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK_NUGGET" CMPNAME="GETNEXTOBJECT" SCONAME="IXMLDOCUMENT" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060901" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method GETNEXTOBJECT .
data aNode type ref to if_ixml_node.
data sTemp type string.
data rootNode type ref to if_ixml_node.
data Namefilter type ref to IF_IXML_NODE_FILTER.
data parentFilter type ref to IF_IXML_NODE_FILTER.
data currentNode type ref to if_ixml_node.
data newNode type ref to if_ixml_node.
data rval type i.

  if iterator is initial.
    nameFilter = xmlDoc-&gt;create_filter_name( name = &apos;nugget&apos; ).
    parentFilter = xmlDoc-&gt;create_filter_parent( nameFilter ).
    iterator = xmlDoc-&gt;create_iterator_filtered( parentFilter ).
  endif.

  currentNode ?= iterator-&gt;get_next( ).
  if currentNode is initial.
    clear IXMLDOCUMENT.
  else.
    ixmlDocument = ixml-&gt;create_document( ).
    newNode = currentNode-&gt;clone( ).
    rval = ixmlDocument-&gt;append_child( newNode ).

  endif.
*  while aNode is not initial.
*    sTemp = aNode-&gt;get_name( ).
*    aNode ?= iterator-&gt;get_next( ).
*  endwhile.
*

endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK_NUGGET" CMPNAME="GETNUGGETINFO" VERSION="0" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="0 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060902" CHANGEDBY="USDWM01" CHANGEDON="20060902" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK_NUGGET" CMPNAME="GETNUGGETINFO" SCONAME="IXMLDOCUMENT" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060902" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
   <parameter CLSNAME="ZSAPLINK_NUGGET" CMPNAME="GETNUGGETINFO" SCONAME="NAME" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060902" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method GETNUGGETINFO .
data rootNode type ref to if_ixml_element.
    rootNode = ixmlDocument-&gt;get_root_element( ).
    name = rootNode-&gt;get_attribute( &apos;name&apos; ).
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK_NUGGET" CMPNAME="RESET" VERSION="0" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="0 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060901" CHANGEDBY="USDWM01" CHANGEDON="20060901" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method RESET .
  if iterator is not initial.
    iterator-&gt;reset( ).
  endif.
endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZSAPLINK" VERSION="0" LANGU="E" UUID="43456FDD407C08A400000000A7E42BB5" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDBY="USDWM01" CHANGEDON="20060116" CHGDANYON="00000000" CLSABSTRCT="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="620" CLSBCCAT="00">
  <publicSection>class ZSAPLINK definition
  public
  abstract
  create public .

*&quot;* public components of class ZSAPLINK
*&quot;* do not include other source files here!!!
public section.

  class-methods GETOBJECTINFOFROMIXMLDOC
    importing
      !IXMLDOCUMENT type ref to IF_IXML_DOCUMENT
    exporting
      !OBJTYPENAME type STRING
      !OBJNAME type STRING .
  class-methods CONVERTSTRINGTOIXMLDOC
    importing
      value(XMLSTRING) type STRING
    returning
      value(IXMLDOCUMENT) type ref to IF_IXML_DOCUMENT .
  class-methods CONVERTIXMLDOCTOSTRING
    importing
      !IXMLDOCUMENT type ref to IF_IXML_DOCUMENT
    returning
      value(XMLSTRING) type STRING .
  methods CREATEOBJECTFROMIXMLDOC
  abstract
    importing
      !IXMLDOCUMENT type ref to IF_IXML_DOCUMENT
      !DEVCLASS type DEVCLASS default &apos;$TMP&apos;
      !OVERWRITE type FLAG optional
    returning
      value(NAME) type STRING
    raising
      ZCX_SAPLINK .
  methods CREATEIXMLDOCFROMOBJECT
  abstract
    returning
      value(IXMLDOCUMENT) type ref to IF_IXML_DOCUMENT
    raising
      ZCX_SAPLINK .
  methods CONSTRUCTOR
    importing
      !NAME type STRING .
  methods UPLOADXML
  final
    importing
      !XMLDATA type STRING .
  class-methods GETPLUGINS
    changing
      value(OBJECTTABLE) type TABLE .
  methods CHECKEXISTS
  abstract
    returning
      value(EXISTS) type FLAG .</publicSection>
  <protectedSection>*&quot;* protected components of class ZSAPLINK
*&quot;* do not include other source files here!!!
protected section.

  data OBJNAME type STRING .
  data IXML type ref to IF_IXML .
  data XMLDOC type ref to IF_IXML_DOCUMENT .

  methods DELETEOBJECT
  abstract
    raising
      ZCX_SAPLINK .
  methods CREATENODEFROMOTR
  final
    importing
      !OTRGUID type SOTR_CONC
    returning
      value(NODE) type ref to IF_IXML_ELEMENT .
  class-methods SETATTRIBUTESFROMSTRUCTURE
    importing
      !NODE type ref to IF_IXML_ELEMENT
      !STRUCTURE type DATA .
  class-methods GETSTRUCTUREFROMATTRIBUTES
    importing
      !NODE type ref to IF_IXML_ELEMENT
    changing
      !STRUCTURE type DATA .
  methods CREATEXMLSTRING
  final
    returning
      value(XML) type STRING .
  class-methods BUILDTABLEFROMSTRING
    importing
      !SOURCE type STRING
    returning
      value(SOURCETABLE) type TABLE_OF_STRINGS .
  class-methods BUILDSOURCESTRING
    importing
      !SOURCETABLE type RSWSOURCET optional
      !PAGETABLE type O2PAGELINE_TABLE optional
    returning
      value(SOURCESTRING) type STRING .
  methods GETOBJECTTYPE
  abstract
    returning
      value(OBJECTTYPE) type STRING .
  methods CREATEOTRFROMNODE
  final
    importing
      value(NODE) type ref to IF_IXML_ELEMENT
      !DEVCLASS type DEVCLASS default &apos;$TMP&apos;
    raising
      ZCX_SAPLINK .</protectedSection>
  <privateSection>*&quot;* private components of class ZSAPLINK
*&quot;* do not include other source files here!!!
private section.

  data STREAMFACTORY type ref to IF_IXML_STREAM_FACTORY .
  data XMLDATA type STRING .</privateSection>
  <attribute CLSNAME="ZSAPLINK" CMPNAME="IXML" VERSION="0" LANGU="E" DESCRIPT="IF_IXML" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDBY="USEWH90" CHANGEDON="20060729" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="IF_IXML" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 "/>
  <attribute CLSNAME="ZSAPLINK" CMPNAME="OBJNAME" VERSION="0" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="USDWM01" CREATEDON="20060116" CHANGEDBY="USEWH90" CHANGEDON="20060729" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 "/>
  <attribute CLSNAME="ZSAPLINK" CMPNAME="STREAMFACTORY" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_STREAM_FACTORY" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDBY="USEWH90" CHANGEDON="20060727" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="IF_IXML_STREAM_FACTORY" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="620"/>
  <attribute CLSNAME="ZSAPLINK" CMPNAME="XMLDATA" VERSION="0" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDBY="USEWH90" CHANGEDON="20060727" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="620"/>
  <attribute CLSNAME="ZSAPLINK" CMPNAME="XMLDOC" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDBY="USEWH90" CHANGEDON="20060729" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 "/>
  <method CLSNAME="ZSAPLINK" CMPNAME="BUILDSOURCESTRING" VERSION="0" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="BUILDSOURCESTRING" SCONAME="SOURCETABLE" VERSION="0" LANGU="E" DESCRIPT="Table of Strings" CMPTYPE="1" MTDTYPE="0" EDITORDER="8 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDBY="USEWH90" CHANGEDON="20060729" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="RSWSOURCET" PAROPTIONL="X"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="BUILDSOURCESTRING" SCONAME="PAGETABLE" VERSION="0" LANGU="E" DESCRIPT="O2: Oxygen Page Table" CMPTYPE="1" MTDTYPE="0" EDITORDER="9 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDBY="USEWH90" CHANGEDON="20060729" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="O2PAGELINE_TABLE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="BUILDSOURCESTRING" SCONAME="SOURCESTRING" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="10 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDBY="USEWH90" CHANGEDON="20060729" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method BUILDSOURCESTRING .
data sTemp type string.
data pageLine type O2PAGELINE.

  if sourceTable is not initial.
    loop at sourceTable into sTemp.
      concatenate sourceString sTemp CL_ABAP_CHAR_UTILITIES=&gt;NEWLINE
        into sourceString.
    endloop.
  elseif pageTable is not initial.
    loop at pageTable into pageLine.
      concatenate sourceString pageLine-line
        CL_ABAP_CHAR_UTILITIES=&gt;NEWLINE
        into sourceString.
    endloop.
  endif.

* remove extra newline characters for conversion comparison consistency
  shift sourceString left deleting leading
    CL_ABAP_CHAR_UTILITIES=&gt;NEWLINE.
  shift sourceString right deleting trailing
    CL_ABAP_CHAR_UTILITIES=&gt;NEWLINE.
  shift sourceString left deleting leading space.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="BUILDTABLEFROMSTRING" VERSION="0" LANGU="E" DESCRIPT="Build a table" EXPOSURE="1" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051203" CHANGEDBY="USDWM01" CHANGEDON="20060901" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="BUILDTABLEFROMSTRING" SCONAME="SOURCE" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051203" CHANGEDBY="USEWH90" CHANGEDON="20060729" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="BUILDTABLEFROMSTRING" SCONAME="SOURCETABLE" VERSION="0" LANGU="E" DESCRIPT="Table of Strings" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051203" CHANGEDBY="USEWH90" CHANGEDON="20060729" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="TABLE_OF_STRINGS"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method BUILDTABLEFROMSTRING .
  split source at CL_ABAP_CHAR_UTILITIES=&gt;NEWLINE
    into table sourceTable.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CHECKEXISTS" VERSION="0" LANGU="E" DESCRIPT="Check if object exists" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CHECKEXISTS" SCONAME="EXISTS" VERSION="0" LANGU="E" DESCRIPT="object exists flag" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CONSTRUCTOR" VERSION="0" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDBY="USEWH90" CHANGEDON="20060729" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CONSTRUCTOR" SCONAME="NAME" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CONSTRUCTOR .

*  data meTypeDescr type ref to CL_ABAP_TYPEDESCR.
*  clear className.
*
*  objName = name.
*  meTypeDescr = CL_ABAP_TYPEDESCR=&gt;DESCRIBE_BY_OBJECT_REF( me ).
*  className = meTypeDescr-&gt;get_relative_name( ).

  objName = name.
  translate objName to upper case.

  ixml = cl_ixml=&gt;create( ).
  xmlDoc = ixml-&gt;create_document( ).
  streamFactory = ixml-&gt;CREATE_STREAM_FACTORY( ).
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CONVERTIXMLDOCTOSTRING" VERSION="0" LANGU="E" DESCRIPT="Converts any IF_IXML_DOCUMENT to a String" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060720" CHANGEDBY="USEWH90" CHANGEDON="20060726" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CONVERTIXMLDOCTOSTRING" SCONAME="IXMLDOCUMENT" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060720" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CONVERTIXMLDOCTOSTRING" SCONAME="XMLSTRING" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060720" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CONVERTIXMLDOCTOSTRING .
data _ixml type ref to if_ixml.
data _streamFactory type ref to IF_IXML_STREAM_FACTORY.
data _outputStream type ref to IF_IXML_OSTREAM.
data _renderer type ref to IF_IXML_RENDERER.
data _tempString type string.
data _printXMLDoc type ref to cl_xml_document.
data _rc type sysubrc.
  _ixml = cl_ixml=&gt;create( ).
  _streamFactory = _ixml-&gt;CREATE_STREAM_FACTORY( ).
  _outputStream = _streamFactory-&gt;CREATE_OSTREAM_CSTRING( _tempString ).
  _renderer = _ixml-&gt;CREATE_RENDERER(
    DOCUMENT = ixmlDocument OSTREAM = _outputStream ).
  _renderer-&gt;SET_NORMALIZING( ).
  _rc = _renderer-&gt;render( ).
  create object _printXMLDoc.
  _rc = _printXMLDoc-&gt;parse_string( _tempString ).
  xmlString = _tempString.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CONVERTSTRINGTOIXMLDOC" VERSION="0" LANGU="E" DESCRIPT="Converts any String into an IF_IXML_DOCUMENT" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060720" CHANGEDBY="USEWH90" CHANGEDON="20060726" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CONVERTSTRINGTOIXMLDOC" SCONAME="XMLSTRING" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060720" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CONVERTSTRINGTOIXMLDOC" SCONAME="IXMLDOCUMENT" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060720" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CONVERTSTRINGTOIXMLDOC .
data ixml type ref to if_ixml.
data streamFactory type ref to IF_IXML_STREAM_FACTORY.
data iStream type ref to if_ixml_istream.
data ixmlParser type ref to if_ixml_parser.
data xmlDoc type ref to if_ixml_document.

  ixml = cl_ixml=&gt;create( ).
  xmlDoc = ixml-&gt;create_document( ).
  streamFactory = ixml-&gt;CREATE_STREAM_FACTORY( ).
  iStream = streamFactory-&gt;CREATE_ISTREAM_STRING( xmlString ).
  iXMLParser = iXML-&gt;create_parser(  stream_factory = streamFactory
                                     istream        = iStream
                                     document       = xmlDoc ).
  iXMLParser-&gt;parse( ).
  ixmlDocument = xmlDoc.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CREATEIXMLDOCFROMOBJECT" VERSION="0" LANGU="E" DESCRIPT="Creates an IF_IXML_DOCUMENT from the OBJNAME Attribute" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060720" CHANGEDBY="USEWH90" CHANGEDON="20060830" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CREATEIXMLDOCFROMOBJECT" SCONAME="IXMLDOCUMENT" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060720" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
   <exception CLSNAME="ZSAPLINK" CMPNAME="CREATEIXMLDOCFROMOBJECT" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDON="00000000"/>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CREATENODEFROMOTR" VERSION="0" LANGU="E" DESCRIPT="Creates an XML node from an OTR object" EXPOSURE="1" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDFINAL="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CREATENODEFROMOTR" SCONAME="OTRGUID" VERSION="0" LANGU="E" DESCRIPT="Key for Logical Object in the OTR" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SOTR_CONC"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CREATENODEFROMOTR" SCONAME="NODE" VERSION="0" LANGU="E" DESCRIPT="xml Element" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="IF_IXML_ELEMENT"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CREATENODEFROMOTR .

data rootNode type ref to if_ixml_element.
data txtNode type ref to if_ixml_element.
data rc type sysubrc.

data sotrHeader type SOTR_HEAD.
data sotrTextLine type SOTR_TEXT.
data sotrTextTable type table of SOTR_TEXT.

data _ixml type ref to IF_IXML.
data _XMLDOC type ref to IF_IXML_DOCUMENT.

  CALL FUNCTION &apos;SOTR_GET_CONCEPT&apos;
    EXPORTING
      concept              = otrguid
    IMPORTING
      HEADER               = sotrHeader
    TABLES
      ENTRIES              = sotrTextTable.
*   EXCEPTIONS
*     NO_ENTRY_FOUND       = 1
*     OTHERS               = 2
*            .
*  IF sy-subrc &lt;&gt; 0.
**   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**           WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.

  sotrHeader-paket = &apos;$TMP&apos;. &quot;change devclass to $TMP for exports

* Create xml doc
  _ixml = cl_ixml=&gt;create( ).
  _xmlDoc = _ixml-&gt;create_document( ).
  streamFactory = _ixml-&gt;CREATE_STREAM_FACTORY( ).

* Create parent node
  rootNode = _xmlDoc-&gt;create_element( &apos;sotr&apos; ). &quot;OTR object type
  setAttributesFromStructure( node = rootNode structure = sotrHeader ).

* Create nodes for texts
  loop at sotrTextTable into sotrTextLine.
    txtNode = _xmlDoc-&gt;create_element( &apos;sotrText&apos; ).
    setAttributesFromStructure(
      node = txtNode structure = sotrTextLine ).
    rc = rootNode-&gt;append_child( txtNode ).
  endloop.

  node = rootNode.

endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CREATEOBJECTFROMIXMLDOC" VERSION="0" LANGU="E" DESCRIPT="Creates Object on System from IXMLDocument passed in" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060720" CHANGEDBY="USEWH90" CHANGEDON="20060830" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CREATEOBJECTFROMIXMLDOC" SCONAME="IXMLDOCUMENT" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060720" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CREATEOBJECTFROMIXMLDOC" SCONAME="DEVCLASS" VERSION="0" LANGU="E" DESCRIPT="Development class/package" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDBY="USEWH90" CHANGEDON="20060831" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="DEVCLASS" PARVALUE="&apos;$TMP&apos;"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CREATEOBJECTFROMIXMLDOC" SCONAME="OVERWRITE" VERSION="0" LANGU="E" DESCRIPT="Overwrite original objects" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FLAG" PAROPTIONL="X"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CREATEOBJECTFROMIXMLDOC" SCONAME="NAME" VERSION="0" LANGU="E" DESCRIPT="Installed object name" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060901" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <exception CLSNAME="ZSAPLINK" CMPNAME="CREATEOBJECTFROMIXMLDOC" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDON="00000000"/>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CREATEOTRFROMNODE" VERSION="0" LANGU="E" DESCRIPT="Creates or updates an OTR object from XML node" EXPOSURE="1" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDBY="USEWH90" CHANGEDON="20060903" MTDTYPE="0" MTDDECLTYP="0" MTDFINAL="X" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CREATEOTRFROMNODE" SCONAME="NODE" VERSION="0" LANGU="E" DESCRIPT="xml Element" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="IF_IXML_ELEMENT"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CREATEOTRFROMNODE" SCONAME="DEVCLASS" VERSION="0" LANGU="E" DESCRIPT="Development class/package" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="DEVCLASS" PARVALUE="&apos;$TMP&apos;"/>
   <exception CLSNAME="ZSAPLINK" CMPNAME="CREATEOTRFROMNODE" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060903" CHANGEDON="00000000"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CREATEOTRFROMNODE .

data txtNode type ref to if_ixml_element.
data filter type ref to if_ixml_node_filter.
data iterator type ref to if_ixml_node_iterator.

data sotrHeader type SOTR_HEAD.
data sotrTextLine type SOTR_TEXT.
data sotrTextTable type table of SOTR_TEXT.
data sotrPaket type SOTR_PACK.

* get OTR header info
  call method GETSTRUCTUREFROMATTRIBUTES
        exporting
          node = node
        changing
          structure = sotrHeader.

* get OTR text info
  filter = node-&gt;create_filter_name( &apos;sotrText&apos; ).
  iterator = node-&gt;create_iterator_filtered( filter ).
  txtNode ?= iterator-&gt;get_next( ).

  while txtNode is not initial.
    clear sotrTextLine.
    call method GETSTRUCTUREFROMATTRIBUTES
          exporting
            node = txtNode
          changing
            structure = sotrTextLine.
    append sotrTextLine to sotrTextTable.
    txtNode ?= iterator-&gt;get_next( ).
  endwhile.

  CALL FUNCTION &apos;SOTR_GET_CONCEPT&apos;
    EXPORTING
      concept              = sotrHeader-concept
*   IMPORTING
*     HEADER               =
*   TABLES
*     ENTRIES              =
   EXCEPTIONS
     NO_ENTRY_FOUND       = 1
     OTHERS               = 2
            .
  IF sy-subrc &lt;&gt; 1.
*   delete OTR if exists already
    CALL FUNCTION &apos;SOTR_DELETE_CONCEPT&apos;
      EXPORTING
        concept                     = sotrHeader-concept
     EXCEPTIONS
       NO_AUTHORIZATION            = 1
       NO_ENTRY_FOUND              = 2. &quot;who cares
*       CONCEPT_USED                = 3
*       NO_MASTER_LANGUAGE          = 4
*       NO_SOURCE_SYSTEM            = 5
*       NO_TADIR_ENTRY              = 6
*       ERROR_IN_CORRECTION         = 7
*       USER_CANCELLED              = 8
*       OTHERS                      = 9
*              .
    if sy-subrc = 1.
      raise exception type zcx_saplink
        exporting textid = zcx_saplink=&gt;not_authorized.
    endif.
  ENDIF.


data objectTable type SOTR_OBJECTS.
data objectType type line of SOTR_OBJECTS.
* Retrieve object type of OTR
  call function &apos;SOTR_OBJECT_GET_OBJECTS&apos;
    exporting
      object_vector    = sotrHeader-objid_vec
    importing
      objects          = objectTable
    exceptions
      object_not_found = 1
      others           = 2.

  read table objectTable into objectType index 1.

* create OTR
  sotrPaket-paket = devclass.
  CALL FUNCTION &apos;SOTR_CREATE_CONCEPT&apos;
    EXPORTING
      paket                               = sotrPaket
      crea_lan                            = sotrHeader-crea_lan
      ALIAS_NAME                          = sotrHeader-alias_name
*      CATEGORY                            =
      object                              = objectType
      entries                             = sotrTextTable
*     FLAG_CORRECTION_ENTRY               =
*     IN_UPDATE_TASK                      =
      CONCEPT_DEFAULT                     = sotrHeader-concept
*   IMPORTING
*     CONCEPT                             =
*   EXCEPTIONS
*     PACKAGE_MISSING                     = 1
*     CREA_LAN_MISSING                    = 2
*     OBJECT_MISSING                      = 3
*     PAKET_DOES_NOT_EXIST                = 4
*     ALIAS_ALREADY_EXIST                 = 5
*     OBJECT_TYPE_NOT_FOUND               = 6
*     LANGU_MISSING                       = 7
*     IDENTICAL_CONTEXT_NOT_ALLOWED       = 8
*     TEXT_TOO_LONG                       = 9
*     ERROR_IN_UPDATE                     = 10
*     NO_MASTER_LANGU                     = 11
*     ERROR_IN_CONCEPT_ID                 = 12
*     ALIAS_NOT_ALLOWED                   = 13
*     TADIR_ENTRY_CREATION_FAILED         = 14
*     INTERNAL_ERROR                      = 15
*     ERROR_IN_CORRECTION                 = 16
*     USER_CANCELLED                      = 17
*     NO_ENTRY_FOUND                      = 18
*     OTHERS                              = 19
            .
  IF sy-subrc &lt;&gt; 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*           WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.



endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CREATEXMLSTRING" VERSION="0" LANGU="E" DESCRIPT="converts data stored in iXML to a string" EXPOSURE="1" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDFINAL="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="CREATEXMLSTRING" SCONAME="XML" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDBY="USEWH90" CHANGEDON="20060729" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CREATEXMLSTRING .
data streamFactory type ref to IF_IXML_STREAM_FACTORY.
data outputStream type ref to IF_IXML_OSTREAM.
data renderer type ref to IF_IXML_RENDERER.
data tempString type string.
data printXMLDoc type ref to cl_xml_document.
data rc type sysubrc.

  streamFactory = ixml-&gt;CREATE_STREAM_FACTORY( ).
  outputStream = streamFactory-&gt;CREATE_OSTREAM_CSTRING( tempString ).
  renderer = ixml-&gt;CREATE_RENDERER(
    DOCUMENT = xmlDoc OSTREAM = outputStream ).
  rc = renderer-&gt;render( ).
  create object printXMLDoc.
  rc = printXMLDoc-&gt;parse_string( tempString ).
  xml = tempString.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="DELETEOBJECT" VERSION="0" LANGU="E" DESCRIPT="Delete object" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZSAPLINK" CMPNAME="DELETEOBJECT" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDON="00000000"/>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="GETOBJECTINFOFROMIXMLDOC" VERSION="0" LANGU="E" DESCRIPT="Gets the info of the Object that the XMLDOCUMENT describes" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060720" CHANGEDBY="USEWH90" CHANGEDON="20060726" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="GETOBJECTINFOFROMIXMLDOC" SCONAME="IXMLDOCUMENT" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060720" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="GETOBJECTINFOFROMIXMLDOC" SCONAME="OBJTYPENAME" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060720" CHANGEDBY="USEWH90" CHANGEDON="20060720" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="GETOBJECTINFOFROMIXMLDOC" SCONAME="OBJNAME" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060720" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method GETOBJECTINFOFROMIXMLDOC .

data rootNode type ref to IF_IXML_NODE.
data rootAttr type ref to IF_IXML_NAMED_NODE_MAP.
data AttrNode type ref to IF_IXML_NODE.
data nodeName type string.

  rootNode ?= ixmlDocument-&gt;GET_ROOT_ELEMENT( ).

* get object type
  objTypeName = rootNode-&gt;GET_NAME( ).
  translate objTypeName to upper case.

* get object name
  rootAttr = rootNode-&gt;GET_ATTRIBUTES( ).
  AttrNode = rootAttr-&gt;GET_ITEM( 0 ).
  objName = AttrNode-&gt;GET_VALUE( ).
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="GETOBJECTTYPE" VERSION="0" LANGU="E" DESCRIPT="Get object type of plugin" EXPOSURE="1" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060829" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="GETOBJECTTYPE" SCONAME="OBJECTTYPE" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060829" CHANGEDBY="USEWH90" CHANGEDON="20060829" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="GETPLUGINS" VERSION="0" LANGU="E" DESCRIPT="Get installed saplink plugins" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060726" CHANGEDBY="USEWH90" CHANGEDON="20060729" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="GETPLUGINS" SCONAME="OBJECTTABLE" VERSION="0" LANGU="E" DESCRIPT="Installed Plugin Table" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060726" CHANGEDBY="USEWH90" CHANGEDON="20060727" PARDECLTYP="2" PARPASSTYP="0" TYPTYPE="1" TYPE="TABLE"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method GETPLUGINS .
  types: begin of t_objectTable,
           classname type string,
           object type ko100-object,
           text type ko100-text,
         end of t_objectTable.

  data classList type SEO_INHERITANCES.
  data classLine type VSEOEXTEND.
  data classObject type ref to zsaplink.
  data objectLine type t_objectTable.
  data tableTypeLine type KO105.
  data tableTypesIn type table of KO105.
  data tableTypesOut type TR_OBJECT_TEXTS.
  data tableTypeOutLine type KO100.
  data clsName type string.
  data objType type TROBJTYPE.

  refresh objectTable.

  select * from VSEOEXTEND into table classList
    where REFCLSNAME = &apos;ZSAPLINK&apos;
    and version = &apos;1&apos;.

  loop at classList into classLine.
    clsName = classLine-clsName.
    create object classObject type (clsName)
      exporting name = &apos;foo&apos;.
    objtype = classObject-&gt;getObjectType( ).
    clear tableTypeLine.
    refresh tableTypesIn.

    tableTypeLine-object = objtype.
    append tableTypeLine to tableTypesIn.

    CALL FUNCTION &apos;TRINT_OBJECT_TABLE&apos;
      TABLES
        TT_TYPES_IN             = tableTypesIn
        tt_types_out            = tableTypesOut.

    loop at tableTypesOut into tableTypeOutLine.
      objectLine-className = clsName.
      move-corresponding tableTypeOutLine to objectLine.
      append objectLine to objectTable.
    endloop.
  endloop.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="GETSTRUCTUREFROMATTRIBUTES" VERSION="0" LANGU="E" DESCRIPT="Updates a structure with node attributes" EXPOSURE="1" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051017" CHANGEDBY="USDWM01" CHANGEDON="20060901" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="GETSTRUCTUREFROMATTRIBUTES" SCONAME="NODE" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_ELEMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051017" CHANGEDBY="USEWH90" CHANGEDON="20060729" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_ELEMENT"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="GETSTRUCTUREFROMATTRIBUTES" SCONAME="STRUCTURE" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051017" CHANGEDBY="USEWH90" CHANGEDON="20060729" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="DATA"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method GETSTRUCTUREFROMATTRIBUTES .
data attributeList type ref to IF_IXML_NAMED_NODE_MAP.
data nodeIterator type ref to IF_IXML_NODE_ITERATOR.
data attributeNode type ref to if_ixml_node.
data value type string.
data name type string.
field-symbols &lt;value&gt; type any.

  clear structure.
  attributeList = node-&gt;GET_ATTRIBUTES( ).
  nodeIterator = attributeList-&gt;create_iterator( ).
  attributeNode = nodeIterator-&gt;get_next( ).
  while attributeNode is not initial.
    name = attributeNode-&gt;get_name( ).
    if name = &apos;VERSION&apos;.
      value = &apos;0&apos;.
    else.
      value = attributeNode-&gt;get_value( ).
    endif.
    assign component name of structure structure to &lt;value&gt;.
    if sy-subrc = 0.
      &lt;value&gt; = value.
    endif.
    attributeNode = nodeIterator-&gt;get_next( ).
  endwhile.

endmethod.





*    .-&quot;-.
*  .&apos;=^=^=&apos;.
* /=^=^=^=^=\
*:^=SAPLINK=^;
*|^ EASTER  ^|
*:^=^EGG^=^=^:
* \=^=^=^=^=/
*  `.=^=^=.&apos;
*    `~~~`
* Don&apos;t like the way we did something?
* Help us fix it!  Tell us what you think!
* http://saplink.sourceforge.net</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="SETATTRIBUTESFROMSTRUCTURE" VERSION="0" LANGU="E" DESCRIPT="Creates an XML Attribute list from any structure" EXPOSURE="1" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051017" CHANGEDBY="USDWM01" CHANGEDON="20060901" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="SETATTRIBUTESFROMSTRUCTURE" SCONAME="NODE" VERSION="0" LANGU="E" DESCRIPT="xml Element" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051017" CHANGEDBY="USEWH90" CHANGEDON="20060729" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_ELEMENT"/>
   <parameter CLSNAME="ZSAPLINK" CMPNAME="SETATTRIBUTESFROMSTRUCTURE" SCONAME="STRUCTURE" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051017" CHANGEDBY="USEWH90" CHANGEDON="20060729" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="DATA"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method SETATTRIBUTESFROMSTRUCTURE .

data int type i.
int = int.
data structDescr type ref to cl_abap_structDescr.
data aComponent type abap_compdescr.
field-symbols &lt;fieldValue&gt; type any.
data rc type sysubrc.
data sName type string.
data sValue type string.

  structDescr ?= cl_abap_structDescr=&gt;describe_by_data( structure ).
  loop at structDescr-&gt;components into aComponent.
    assign component aComponent-name of structure
      structure to &lt;fieldValue&gt;.
    if sy-subrc = 0.
      sName = aComponent-name.
*      sValue = &lt;fieldValue&gt;.
*     for certain attributes, set to a standard for exporting
      case sName.
        when &apos;VERSION&apos;. &quot;version should always export as inactive
          sValue = &apos;0&apos;.
        when &apos;DEVCLASS&apos;. &quot;development class should always be $TMP
          sValue = &apos;$TMP&apos;.
        when others.
          sValue = &lt;fieldValue&gt;.
      endcase.
      if sValue is not initial.
        rc = Node-&gt;set_attribute( name = sName value = sValue ).
      endif.
    else.
* WHAT?&gt;!??
    endif.
  endloop.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="UPLOADXML" VERSION="0" LANGU="E" DESCRIPT="Upload XML" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDBY="USEWH90" CHANGEDON="20060729" MTDTYPE="0" MTDDECLTYP="0" MTDFINAL="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK" CMPNAME="UPLOADXML" SCONAME="XMLDATA" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20051007" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method UPLOADXML .
data iStream type ref to if_ixml_istream.
data ixmlParser type ref to if_ixml_parser.

  iStream = streamFactory-&gt;CREATE_ISTREAM_STRING( xmlData ).
  iXMLParser = iXML-&gt;create_parser(  stream_factory = streamFactory
                                     istream        = iStream
                                     document       = XMLdoc ).
  iXMLParser-&gt;parse( ).

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZSAPLINK_CLASS" VERSION="0" LANGU="E" DESCRIPT="SapLink Class Installer" UUID="43C535DF388C00D202000000A7E42BB5" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="USDWM01" CREATEDON="20060116" CHANGEDBY="USEWH90" CHANGEDON="20060831" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="620" CLSBCCAT="00" REFCLSNAME="ZSAPLINK">
  <publicSection>class ZSAPLINK_CLASS definition
  public
  inheriting from ZSAPLINK
  create public .

*&quot;* public components of class ZSAPLINK_CLASS
*&quot;* do not include other source files here!!!
public section.
  type-pools ABAP .
  type-pools SEOR .
  type-pools SEOS .
  type-pools SEOT .

  methods CHECKEXISTS
    redefinition .
  methods CREATEIXMLDOCFROMOBJECT
    redefinition .
  methods CREATEOBJECTFROMIXMLDOC
    redefinition .</publicSection>
  <protectedSection>*&quot;* protected components of class ZSAPLINK_CLASS
*&quot;* do not include other source files here!!!
protected section.

  methods GETOBJECTTYPE
    redefinition .
  methods DELETEOBJECT
    redefinition .</protectedSection>
  <privateSection>*&quot;* private components of class ZSAPLINK_CLASS
*&quot;* do not include other source files here!!!
private section.

  methods FINDIMPLEMENTINGCLASS
    importing
      !METHODNAME type STRING
      !STARTCLASS type STRING optional
    returning
      value(CLASSNAME) type STRING .</privateSection>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <forwardDeclaration>SEOR</forwardDeclaration>
  <forwardDeclaration>SEOS</forwardDeclaration>
  <forwardDeclaration>SEOT</forwardDeclaration>
  <method CLSNAME="ZSAPLINK" CMPNAME="CHECKEXISTS" VERSION="0" LANGU="E" DESCRIPT="Check if object exists" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CHECKEXISTS .

data classkey type SEOCLSKEY.
data not_active TYPE  SEOX_BOOLEAN.

  classKey-clsName = objname.

  call function &apos;SEO_CLASS_EXISTENCE_CHECK&apos;
    EXPORTING
      clskey        = classkey
    IMPORTING
      not_active    = not_active
    EXCEPTIONS
*      not_specified = 1
      not_existing  = 2.
*      is_interface  = 3
*      no_text       = 4
*      inconsistent  = 5
*      others        = 6.

  if sy-subrc &lt;&gt; 2.
    exists = &apos;X&apos;.
  endif.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CREATEIXMLDOCFROMOBJECT" VERSION="0" LANGU="E" DESCRIPT="Creates an IF_IXML_DOCUMENT from the OBJNAME Attribute" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060720" CHANGEDBY="USEWH90" CHANGEDON="20060830" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <exception CLSNAME="ZSAPLINK" CMPNAME="CREATEIXMLDOCFROMOBJECT" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDON="00000000"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CREATEIXMLDOCFROMOBJECT .


data publicSection type ref to if_ixml_element.
data protectedSection type ref to if_ixml_element.
data privateSection type ref to if_ixml_element.
data rootNode type ref to if_ixml_element.
data reportList type standard table of string.
data includeName TYPE PROGRAM.
data _className type SEOCLSNAME.
data reportString type string.
data rc type sysubrc.
data classDescr type ref to cl_abap_classdescr.
data typeDescr type ref to cl_abap_typedescr.
data methodDescr type abap_methdescr.
data methodNode type ref to if_ixml_element.
data parameterNode type ref to if_ixml_element.
data sourceNode type ref to if_ixml_element.
data exceptionNode type ref to if_ixml_element.
data exceptionList type SEOS_EXCEPTIONS_R.
data anException type vseoexcep.

data tempString type string.
data methodKey TYPE SEOCPDKEY.
data clsMethKey type SEOCMPKEY.
data methodProperties type VSEOMETHOD.
data classKey type seoclskey.
data classProperties type vseoclass.
data paramDescr type abap_parmdescr.
data paramKey type SEOSCOKEY.
data paramProperties type vseoparam.
data superClass type ref to cl_abap_typeDescr.
data superClassName type string.
data superClassKey type SEORELKEY.

data attribDescr type abap_attrdescr.
data attribKey type SEOCMPKEY.
data attribProperties type vseoattrib.
data attribNode type ref to if_ixml_element.
data inheritanceProps type VSEOEXTEND.
data redefines type sTANDARD TABLE OF SEOREDEF
    WITH KEY CLSNAME REFCLSNAME VERSION MTDNAME.
data inheritance type VSEOEXTEND.
data REDEFINITIONS type SEOR_REDEFINITIONS_R.
data forwardDeclarationList type SEOT_TYPEPUSAGES_R.
data forwardDeclaration type ref to if_ixml_element.
data forwardDeclarationRow type SEOT_TYPEPUSAGE_R.

data otrNode type ref to if_ixml_element.
data _otrguid type sotr_conc.

_className = objName.
classKey-clsName = objName.

*  setObjectType( ).

  data _objType type string.
*  _objType = objType.
  _objType = getObjectType( ).
  rootNode = xmlDoc-&gt;create_element( _objType ).
  call function &apos;SEO_CLASS_GET&apos;
    exporting
      clsKey = classKey
      version = &apos;1&apos;
    importing
      class = classProperties
    exceptions
      NOT_EXISTING = 1
      DELETED      = 2
      IS_INTERFACE = 3
      MODEL_ONLY   = 4.

  if sy-subrc &lt;&gt; 0.
    case sy-subrc.
      when 1.
        raise exception type zcx_saplink
          exporting textid = zcx_saplink=&gt;not_found.
      when 2.
        raise exception type zcx_saplink
          exporting
            textid = zcx_saplink=&gt;error_message
            msg = &apos;class deleted&apos;.
      when 3.
        raise exception type zcx_saplink
          exporting
            textid = zcx_saplink=&gt;error_message
            msg = &apos;interfaces not supported&apos;.
      when 4.
        raise exception type zcx_saplink
          exporting
            textid = zcx_saplink=&gt;error_message
            msg = &apos;class is modeled only&apos;.
    endcase.
  endif.

  setAttributesFromStructure( node = rootNode structure =
  classProperties ).
  try.
    call method cl_abap_classDescr=&gt;describe_by_name
          exporting
            p_name = objName
          receiving
            p_descr_ref = typeDescr
          exceptions
            type_not_found = 1.
    if sy-subrc = 0.
      classDescr ?= typeDescr.
    else.

    endif.
  catch cx_root.
    raise exception type zcx_saplink
      exporting textid = zcx_saplink=&gt;system_error.
  endtry.

  call method classDescr-&gt;GET_SUPER_CLASS_TYPE
        receiving
         P_DESCR_REF = superClass
        exceptions
          SUPER_CLASS_NOT_FOUND = 1.

  if sy-subrc = 0.
    superClassName = superClass-&gt;GET_RELATIVE_NAME( ).
    if not superClassName CS &apos;OBJECT&apos;.
      superClassKey-clsname = objName.
      superClassKey-refclsname = superClassname.
      call function &apos;SEO_INHERITANC_GET&apos;
            exporting
              INHKEY = superClassKey
            importing
              INHERITANCE = inheritanceprops
              REDEFINITIONS = redefines.
      setAttributesFromStructure( node = rootNode structure =
      inheritanceprops ).
    endif.
  endif.
*/--------------------------------------------------------------------\
*|                                                                    |
  includeName = CL_OO_CLASSNAME_SERVICE=&gt;GET_PUBSEC_NAME( _className ).
  read report includeName into reportList.
  publicSection = xmlDoc-&gt;create_element( &apos;publicSection&apos; ).

  reportString = buildSourceString( sourceTable = reportList ).
  rc = publicSection-&gt;IF_IXML_NODE~SET_VALUE( reportString ).
  clear reportString.
*|--------------------------------------------------------------------|
  includeName = CL_OO_CLASSNAME_SERVICE=&gt;GET_PROSEC_NAME( _className ).
  read report includeName into reportList.
  protectedSection = xmlDoc-&gt;create_element( &apos;protectedSection&apos; ).
  reportString = buildSourceString( sourceTable = reportList ).
  rc = protectedSection-&gt;IF_IXML_NODE~SET_VALUE( reportString ).
  clear reportString.
*|--------------------------------------------------------------------|
  includeName = CL_OO_CLASSNAME_SERVICE=&gt;GET_PRISEC_NAME( _className ).
  read report includeName into reportList.
  privateSection = xmlDoc-&gt;create_element( &apos;privateSection&apos; ).
  reportString = buildSourceString( sourceTable = reportList ).
  rc = privateSection-&gt;IF_IXML_NODE~SET_VALUE( reportString ).
*|                                                                    |
*\--------------------------------------------------------------------/
  rc = rootNode-&gt;append_Child( publicSection ).
  rc = rootNode-&gt;append_Child( protectedSection ).
  rc = rootNode-&gt;append_Child( privateSection ).


  call function &apos;SEO_TYPEPUSAGE_READ_ALL&apos;
        exporting
          CIFKEY = classKey
          VERSION = &apos;1&apos;
        importing
          TYPEPUSAGES = forwardDeclarationList.

  loop at forwardDeclarationList into forwardDeclarationRow.
    forwardDeclaration = xmlDoc-&gt;create_element( &apos;forwardDeclaration&apos; ).
    tempString = forwardDeclarationRow-TYPEGROUP.
    rc = forwardDeclaration-&gt;IF_IXML_NODE~SET_VALUE( tempString ).
    rc = rootNode-&gt;append_Child( forwardDeclaration ).
  endloop.

*  classDescriptor ?= cl_abap_typedescr=&gt;describe_by_name( className ).
  attribKey-clsName = objName.
  loop at classDescr-&gt;attributes into attribDescr where is_inherited =
  abap_false.
    attribNode = xmlDoc-&gt;create_element( &apos;attribute&apos; ).
    attribKey-cmpName = attribDescr-name.
    call function &apos;SEO_ATTRIBUTE_GET&apos;
        exporting
          attKey = attribKey
        importing
          attribute = attribProperties.

*   include OTR if necessary (for exception classes)
    if attribProperties-type = &apos;SOTR_CONC&apos; and attribProperties-attvalue
    is not initial.
      _otrguid = attribProperties-attvalue+1(32).
      otrNode = CREATENODEFROMOTR( _otrguid ).
      rc = attribNode-&gt;append_child( otrNode ).
    endif.

*   append attribute node to parent node
    SETATTRIBUTESFROMSTRUCTURE( node = attribNode structure =
    attribProperties ).
    rc = rootNode-&gt;append_child( attribNode ).
  endloop.


  loop at classDescr-&gt;methods into methodDescr.
    methodNode = xmlDoc-&gt;create_element( &apos;method&apos; ).
    tempString = methodDescr-name.
    clsMethKey-CMPNAME = methodDescr-name.
    if methodDescr-IS_REDEFINED = abap_true.
      tempString = methodDescr-name.
      clsMethkey-clsName = FINDIMPLEMENTINGCLASS( methodName =
      tempString ).
      paramKey-clsName = clsMethkey-clsName.
*      paramKey-clsName = superClassName.
*      clsMethkey-clsName = superClassName.
    else.
      paramKey-clsName = clsMethKey-clsName.
      clsMethKey-clsName = objName.
    endif.
    clear methodProperties.
    call function &apos;SEO_METHOD_GET&apos;
          exporting
            MTDKEY = clsMethKey
          importing
            method = methodProperties
          exceptions
            NOT_EXISTING = 1.
    if sy-subrc = 0.
      setAttributesFromStructure( node = methodNode structure =
      methodProperties ).
      loop at methodDescr-parameters into paramDescr.
        clear paramProperties.
        parameterNode = xmlDoc-&gt;create_element( &apos;parameter&apos; ).
        paramKey-cmpName = clsMethKey-cmpName.
        paramKey-SCONAME = paramDescr-name.
        paramKey-CLSNAME = objName.
        call function &apos;SEO_PARAMETER_GET&apos;
              exporting
                parKey = paramKey
                version = &apos;1&apos;
              importing
                parameter = paramProperties.
        setAttributesFromStructure( node = parameterNode structure =
        paramProperties ).
        rc = methodNode-&gt;append_Child( parameterNode ).
      endloop.
      call function &apos;SEO_METHOD_SIGNATURE_GET&apos;
            exporting
              MTDKEY = clsMethkey
              version = &apos;1&apos;
            importing
              EXCEPS = exceptionList.
      loop at exceptionList into anException.
        exceptionNode = xmlDoc-&gt;create_element( &apos;exception&apos; ).
        setAttributesFromStructure( node = exceptionNode structure =
        anException ).
        rc = methodNode-&gt;append_child( exceptionNode ).
      endloop.
*      if methodDescr-IS_REDEFINED = abap_false.
        methodKey-CLSNAME = _className.
        methodKey-CPDNAME = methodDescr-name.
        call method CL_OO_CLASSNAME_SERVICE=&gt;GET_METHOD_INCLUDE
              exporting
               mtdKey = methodKey
              RECEIVING
                result = includeName
              exceptions
                METHOD_NOT_EXISTING = 1.
        if sy-subrc = 0.
          read report includeName into reportList.
          reportString = buildSourceString( sourceTable = reportList ).
          sourceNode = xmlDoc-&gt;create_element( &apos;source&apos; ).
          rc = sourceNode-&gt;IF_IXML_NODE~SET_VALUE( reportString ).
          rc = methodNode-&gt;append_child( sourceNode ).
       endif.
*      endif.

*      methodKey-CLSNAME = _className.
*      methodKey-CPDNAME = methodDescr-name.
*if methodDescr-is_redefined = abap_true and methodDescr-is_abstract =
*abap_false.
**Don&apos;t think i need this..... why am i doing it?
*        call function &apos;SEO_INHERITANC_READ&apos;
*          exporting
*            clsKey = classkey
*            version = &apos;1&apos;
*          importing
*            INHERITANCE = INHERITANCE
*            REDEFINITIONS = REDEFINITIONS.
*
*      else.
*      endif.
      rc = rootNode-&gt;append_child( methodNode ).
    endif.
  endloop.
  rc = xmldoc-&gt;append_child( rootNode ).
  ixmlDocument = xmlDoc.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CREATEOBJECTFROMIXMLDOC" VERSION="0" LANGU="E" DESCRIPT="Creates Object on System from IXMLDocument passed in" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060720" CHANGEDBY="USEWH90" CHANGEDON="20060830" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <exception CLSNAME="ZSAPLINK" CMPNAME="CREATEOBJECTFROMIXMLDOC" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDON="00000000"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CREATEOBJECTFROMIXMLDOC .

data rootNode type ref to if_ixml_element.
data classHeader type vseoClass.
data classKey type SEOCLSKEY.
data not_active type boolean.
data filter type ref to if_ixml_node_filter.
data iterator type ref to if_ixml_node_iterator.
data node type ref to if_ixml_element.
data otrNode type ref to if_ixml_element.
data filter2 type ref to if_ixml_node_filter.
data iterator2 type ref to if_ixml_node_iterator.
data attribProperties type vseoattrib.
data methodProperties type vseomethod.
data methodRedefinition type SEOREDEF.
data methodRedefTable type standard table of SEOREDEF WITH KEY CLSNAME
REFCLSNAME VERSION MTDNAME.
data superClass type vseoextend.
data superClassKey type vseoextend.
data includeName type program.
data methodSourceNode type ref to if_ixml_node.
data source type string.
data sourceTable type table of string.
data methodKey TYPE SEOCPDKEY.
data forwardDeclarationRow type VSEOTYPEP.
data forwardDeclarations type standard table of VSEOTYPEP.
data node2 type ref to if_ixml_element.
data paramInfo type VSEOPARAM.
data exceptInfo type VSEOEXCEP.
data _devclass type devclass.
data _objType type string.
data checkExists type flag.

  call function &apos;SEO_BUFFER_INIT&apos;.

  _devclass = devclass.
  _objType = getObjectType( ).

  xmlDoc = ixmlDocument.
  rootNode = xmlDoc-&gt;find_from_name( _objType ).

  call method GETSTRUCTUREFROMATTRIBUTES
        exporting
          node = rootnode
        changing
          structure = classHeader.

  classKey-clsName = classHeader-CLSNAME.
  objName = classKey-clsName.
*  call function &apos;SEO_CLASS_EXISTENCE_CHECK&apos;
*    EXPORTING
*      clskey        = classkey
*    IMPORTING
*      not_active    = not_active
*    EXCEPTIONS
*      not_specified = 1
*      not_existing  = 2
*      is_interface  = 3
*      no_text       = 4
*      inconsistent  = 5
*      others        = 6.
*
*  if sy-subrc &lt;&gt; 2 and overwrite &lt;&gt; &apos;X&apos;.
*    raise exception type zcx_saplink
*      exporting textid = zcx_saplink=&gt;existing.
*  endif.
  checkExists = checkexists( ).
  if checkExists is not initial.
    if overwrite is initial.
      raise exception type zcx_saplink
        exporting textid = zcx_saplink=&gt;existing.
    else.
*     delete object for new install
      deleteobject( ).
    endif.
  endif.

  classHeader-version = &apos;0&apos;.
  superClass = rootNode-&gt;get_attribute( name = &apos;REFCLSNAME&apos; ).
  if superClass is not initial.
* set something for inheritence
    superClassKey-clsName = classKey-clsName.
    superClassKey-REFCLSNAME = superClass.
    superClassKey-version = &apos;0&apos;.
    superClassKey-state = &apos;1&apos;.

  endif.

  call function &apos;SEO_CLASS_CREATE_F_DATA&apos;
    EXPORTING
      save          = &apos; &apos;
    CHANGING
      class         = classHeader
    EXCEPTIONS
      error_message = 5
      existing      = 1
      is_interface  = 2
      not_created   = 3
      db_error      = 4
      others        = 5.

  if sy-subrc &lt;&gt; 0.
    case sy-subrc.
      when 1.
        raise exception type zcx_saplink
          exporting textid = zcx_saplink=&gt;not_authorized.
      when others.
        raise exception type zcx_saplink
          exporting textid = zcx_saplink=&gt;system_error.
    endcase.
  endif.


data aobjName type TROBJ_NAME.



*  system-call create class classKey-clsname.
*  if sy-subrc = 8.
**Raise error
*    exit.
*  endif.
*TODO:  Add aliases

*Add attributes to new class
  filter = xmlDoc-&gt;create_filter_name( &apos;attribute&apos; ).
  iterator = xmlDoc-&gt;create_iterator_filtered( filter ).
  node ?= iterator-&gt;get_next( ).
  while node is not initial.
*   create OTR texts if necessary (for exception classes)
    otrNode = node-&gt;find_from_name( &apos;sotr&apos; ).
    if otrNode is not initial.
       me-&gt;createotrfromnode( otrNode ).
    endif.

*   create attribute
    call method GETSTRUCTUREFROMATTRIBUTES
          exporting
            node = node
          changing
            structure = attribProperties.
    attribProperties-version = &apos;0&apos;.
    call function &apos;SEO_ATTRIBUTE_CREATE_F_DATA&apos;
          exporting
            save = &apos; &apos;
          changing
            attribute = attribProperties.
    node ?= iterator-&gt;get_next( ).
  endwhile.






*Add Methods to new class
  filter = xmlDoc-&gt;create_filter_name( &apos;method&apos; ).
  iterator = xmlDoc-&gt;create_iterator_filtered( filter ).
  node ?= iterator-&gt;get_next( ).
  while node is not initial.
    clear methodProperties.
    call method GETSTRUCTUREFROMATTRIBUTES
          exporting
            node = node
          changing
            structure = methodProperties.
    methodProperties-version = &apos;0&apos;.
    if methodProperties-clsname = classHeader-clsname.
* method created in this class
      call function &apos;SEO_METHOD_CREATE_F_DATA&apos;
            exporting
              save = &apos; &apos;
            changing
              method = methodProperties.
      filter2 = node-&gt;create_filter_name( &apos;parameter&apos; ).
      iterator2 = node-&gt;create_iterator_filtered( filter2 ).
      node2 ?= iterator2-&gt;get_next( ).
      while node2 is not initial.
*29a
        clear paramInfo.
*/29a
        call method GETSTRUCTUREFROMATTRIBUTES
              exporting
                node = node2
              changing
                structure = paramInfo.
        call function &apos;SEO_PARAMETER_CREATE_F_DATA&apos;
              exporting
                save = &apos; &apos;
              changing
                parameter = paramInfo.

        node2 ?= iterator2-&gt;get_next( ).
      endwhile.
      filter2 = node-&gt;create_filter_name( &apos;exception&apos; ).
      iterator2 = node-&gt;create_iterator_filtered( filter2 ).
      node2 ?= iterator2-&gt;get_next( ).
      while node2 is not initial.
        call method GETSTRUCTUREFROMATTRIBUTES
              exporting
                node = node2
              changing
                structure = exceptInfo.
        call function &apos;SEO_EXCEPTION_CREATE_F_DATA&apos;
              exporting
                save = &apos; &apos;
              changing
                excep = exceptInfo.

        node2 ?= iterator2-&gt;get_next( ).

      endwhile.
    else.
* method redefined in this class
      move-corresponding methodProperties to methodRedefinition.
      methodRedefinition-CLSNAME = classHeader-clsname.
      methodRedefinition-REFCLSNAME = methodProperties-clsname.
      methodRedefinition-VERSION = &apos;0&apos;.
*29a -- will cause an issue if a subclass passes the inheritance down
*stream... is this possible in abap?
      methodRedefinition-MTDABSTRCT = &apos;&apos;.
*/29a
      methodRedefinition-MTDNAME = methodProperties-cmpName.
      append methodRedefinition to methodRedefTable.
    endif.
    node ?= iterator-&gt;get_next( ).

  endwhile.



*29a
 if methodRedefTable is not initial or superClass-clsName is not initial
 .
*/29a
    call function &apos;SEO_INHERITANC_CREATE_F_DATA&apos;
          exporting
            save = &apos; &apos;
          changing
            INHERITANCE = superClassKey
            REDEFINITIONS = methodredefTable.
  endif.

data classType type seoclstype.
data impKeys type seor_implementing_keys.
data isError type boolean.
*data devClass type devclass.
*devClass = &apos;$TMP&apos;.


*create forward declarations
*bug 77
  filter = xmlDoc-&gt;create_filter_name( &apos;forwardDeclaration&apos; ).
  iterator = xmlDoc-&gt;create_iterator_filtered( filter ).
  node ?= iterator-&gt;get_next( ).

  forwardDeclarationRow-clsname = classKey-clsName.
  forwardDeclarationRow-VERSION = &apos;0&apos;.
  forwardDeclarationRow-TPUTYPE = &apos;&apos;.
*29a
*  forwardDeclarationRow-TPUTYPE = &apos;0&apos;.
*/29a
  forwardDeclarationRow-EXPLICIT =  &apos;X&apos;.
  forwardDeclarationRow-IMPLICIT = &apos;&apos;.

  while node is not initial.
    source = node-&gt;get_value( ).
    forwardDeclarationRow-typegroup = source.
*29a
type-pools seot.
data forwardDecTable type seot_typepusages_w.
data forwardDecRow like line of forwardDecTable.
    clear forwardDecRow.
    refresh forwardDecTable.
    forwardDecRow-clsName = classKey-clsName.
    forwardDecRow-VERSION = &apos;0&apos;.
    forwardDecRow-TPUTYPE = &apos;0&apos;.
    forwardDecRow-EXPLICIT =  &apos;X&apos;.
    forwardDecRow-IMPLICIT = &apos;&apos;.
    forwardDecRow-typeGroup = source.
    append forwardDecRow to forwardDecTable.
    call function &apos;SEO_TYPEPUSAGE_CREATE&apos;
        exporting
          TYPEPUSAGES = forwardDecTable.

*    call function &apos;SEO_TYPEPUSAGE_CHANGE_F_DATA&apos;
*          exporting
*            SAVE = ABAP_TRUE
*          changing
*            TYPEPUSAGE = forwardDeclarationRow.
*/29a

    node ?= iterator-&gt;get_next( ).
  endwhile.

  _devclass = devclass.

  call function &apos;SEO_CLIF_SAVE_ALL&apos;
        exporting
          CIFKEY = classKey
        importing
          error_occurred = isError
        changing
          devclass = _devclass.

  if isError is not initial.
    raise exception type zcx_saplink
      exporting
        textid = zcx_saplink=&gt;error_message
        msg = &apos;error during save&apos;.
  endif.

*Insert source code into the methods
  filter = xmlDoc-&gt;create_filter_name( &apos;method&apos; ).
  iterator = xmlDoc-&gt;create_iterator_filtered( filter ).
  node ?= iterator-&gt;get_next( ).

  while node is not initial.
    call method GETSTRUCTUREFROMATTRIBUTES
          exporting
            node = node
          changing
            structure = methodProperties.
    methodKey-clsName = objName.
    methodKey-cpdname = methodProperties-cmpName.
    aobjName = methodKey.
    call function &apos;RS_INSERT_INTO_WORKING_AREA&apos;
      EXPORTING
        object            = &apos;METH&apos;
        obj_name          = aobjName
      EXCEPTIONS
        wrong_object_name = 1.
*29a
    methodSourceNode = node-&gt;find_from_name( &apos;source&apos; ).
    if methodSourceNode is not initial.
      includeName = CL_OO_CLASSNAME_SERVICE=&gt;GET_METHOD_INCLUDE(
      methodKey ).
*/29a
      source = methodSourceNode-&gt;get_value( ).
      sourceTable = BUILDTABLEFROMSTRING( source ).
*      insert report includeName from sourceTable state &apos;I&apos;.
      insert report includeName from sourceTable extension type
      srext_ext_class_method state &apos;I&apos; program type &apos;I&apos;.
    endif.

    node ?= iterator-&gt;get_next( ).
  endwhile.

  aobjName = classKey-CLSNAME.
  call function &apos;RS_INSERT_INTO_WORKING_AREA&apos;
    EXPORTING
      object            = &apos;CLSD&apos;
      obj_name          = aobjName
    EXCEPTIONS
      wrong_object_name = 1.
  if sy-subrc ne 0.

  endif.

  call function &apos;RS_INSERT_INTO_WORKING_AREA&apos;
    EXPORTING
      object            = &apos;CPUB&apos;
      obj_name          = aobjName
    EXCEPTIONS
      wrong_object_name = 1.
  if sy-subrc ne 0.

  endif.
  call function &apos;RS_INSERT_INTO_WORKING_AREA&apos;
    EXPORTING
      object            = &apos;CPRO&apos;
      obj_name          = aobjName
    EXCEPTIONS
      wrong_object_name = 1.
  if sy-subrc ne 0.

  endif.
    call function &apos;RS_INSERT_INTO_WORKING_AREA&apos;
    EXPORTING
      object            = &apos;CPRI&apos;
      obj_name          = aobjName
    EXCEPTIONS
      wrong_object_name = 1.
  if sy-subrc ne 0.

  endif.

  data _tempName(35) type c.
  data length type i.
  _tempName = &apos;==================================&apos;.
  length = numofchar( aobjName ).
  _tempName(length) = aObjName.
  _tempName+30 = &apos;CCDEF&apos;.
  aObjName = _tempName.
    call function &apos;RS_INSERT_INTO_WORKING_AREA&apos;
    EXPORTING
      object            = &apos;CINC&apos;
      obj_name          = aObjName
    EXCEPTIONS
      wrong_object_name = 1.


   _tempName+30 = &apos;CCIMP&apos;.
   aObjName = _tempName.
    call function &apos;RS_INSERT_INTO_WORKING_AREA&apos;
    EXPORTING
      object            = &apos;CINC&apos;
      obj_name          = aObjName
    EXCEPTIONS
      wrong_object_name = 1.

  _tempName+30 = &apos;CCMAC&apos;.
  aObjName = _tempName.
    call function &apos;RS_INSERT_INTO_WORKING_AREA&apos;
    EXPORTING
      object            = &apos;CINC&apos;
      obj_name          = aObjName
    EXCEPTIONS
      wrong_object_name = 1.

  _tempName+30 = &apos;CP  &apos;.
  aObjName = _tempName.
    call function &apos;RS_INSERT_INTO_WORKING_AREA&apos;
    EXPORTING
      object            = &apos;REPT&apos;
      obj_name          = aObjName
    EXCEPTIONS
      wrong_object_name = 1.

  call function &apos;SEO_CLIF_SAVE_ALL&apos;
        exporting
          CIFKEY = classKey
        importing
          error_occurred = isError
        changing
          devclass = _devclass.

* i guess if we made it this far, we will assume success
* successful install
  name = objName.

endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="DELETEOBJECT" VERSION="0" LANGU="E" DESCRIPT="Delete object" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZSAPLINK" CMPNAME="DELETEOBJECT" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDON="00000000"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method DELETEOBJECT .

data clsKey type SEOCLSKEY.

  clsKey-clsname = objname.
  CALL FUNCTION &apos;SEO_CLASS_DELETE_W_DEPS&apos;
    EXPORTING
      clskey             = clsKey
    EXCEPTIONS
     NOT_EXISTING       = 1
     IS_INTERFACE       = 2
     NOT_DELETED        = 3
     DB_ERROR           = 4
     OTHERS             = 5
            .
  if sy-subrc &lt;&gt; 0.
    case sy-subrc.
      when 1.
        raise exception type zcx_saplink
          exporting textid = zcx_saplink=&gt;not_found.
      when 2.
        raise exception type zcx_saplink
          exporting
            textid = zcx_saplink=&gt;error_message
            msg = &apos;interfaces not supported&apos;.
      when 3.
        raise exception type zcx_saplink
          exporting
            textid = zcx_saplink=&gt;error_message
            msg = &apos;class not deleted&apos;.
      when others.
        raise exception type zcx_saplink
          exporting textid = zcx_saplink=&gt;system_error.
    endcase.
  endif.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK_CLASS" CMPNAME="FINDIMPLEMENTINGCLASS" VERSION="0" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060621" CHANGEDBY="USEWH90" CHANGEDON="20060727" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK_CLASS" CMPNAME="FINDIMPLEMENTINGCLASS" SCONAME="METHODNAME" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060621" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZSAPLINK_CLASS" CMPNAME="FINDIMPLEMENTINGCLASS" SCONAME="STARTCLASS" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060621" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZSAPLINK_CLASS" CMPNAME="FINDIMPLEMENTINGCLASS" SCONAME="CLASSNAME" VERSION="0" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060621" CHANGEDBY="USDWM01" CHANGEDON="20060621" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method FINDIMPLEMENTINGCLASS .

data methodKey type SEOCMPKEY.
data methodProperties type VSEOMETHOD.
data classDescr type ref to cl_abap_classdescr.
data superClass type ref to cl_abap_typeDescr.
data superClassName type string.

  if startClass is initial.
    methodKey-CLSNAME = objName.
  else.
    methodKey-clsName = startClass.
  endif.
  methodKey-CMPNAME = methodName.

  call function &apos;SEO_METHOD_GET&apos;
        exporting
          MTDKEY = methodKey
        importing
          method = methodProperties
        exceptions
          NOT_EXISTING = 1.
  if sy-subrc = 0.
    className = methodProperties-clsname.
  else.
    classDescr ?= cl_abap_classDescr=&gt;describe_by_name(
    methodKey-clsName ).
    call method classDescr-&gt;GET_SUPER_CLASS_TYPE
        receiving
         P_DESCR_REF = superClass
        exceptions
          SUPER_CLASS_NOT_FOUND = 1.
    superClassName = superClass-&gt;GET_RELATIVE_NAME( ).
    className = FINDIMPLEMENTINGCLASS( methodName = methodName
    startClass = superCLassName ).
  endif.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="GETOBJECTTYPE" VERSION="0" LANGU="E" DESCRIPT="Get object type of plugin" EXPOSURE="1" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060829" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method GETOBJECTTYPE .

  objecttype = &apos;CLAS&apos;.  &quot;Class

endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZSAPLINK_PROGRAM" VERSION="0" LANGU="E" UUID="43C5363D388C00D202000000A7E42BB5" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="USDWM01" CREATEDON="20060116" CHANGEDON="20060831" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="620" CLSBCCAT="00" REFCLSNAME="ZSAPLINK" CHANGEDBY="USEWH90">
  <publicSection>class ZSAPLINK_PROGRAM definition
  public
  inheriting from ZSAPLINK
  final
  create public .

*&quot;* public components of class ZSAPLINK_PROGRAM
*&quot;* do not include other source files here!!!
public section.

  methods CHECKEXISTS
    redefinition .
  methods CREATEIXMLDOCFROMOBJECT
    redefinition .
  methods CREATEOBJECTFROMIXMLDOC
    redefinition .</publicSection>
  <protectedSection>*&quot;* protected components of class ZSAPLINK_PROGRAM
*&quot;* do not include other source files here!!!
protected section.

  methods GETOBJECTTYPE
    redefinition .
  methods DELETEOBJECT
    redefinition .</protectedSection>
  <privateSection>*&quot;* private components of class ZSAPLINK_PROGRAM
*&quot;* do not include other source files here!!!
private section.

  methods CREATE_TEXTPOOL
    importing
      !TEXTPOOLNODE type ref to IF_IXML_ELEMENT .
  methods DEQUEUE_ABAP
    raising
      ZCX_SAPLINK .
  methods GET_TEXTPOOL
    returning
      value(TEXTNODE) type ref to IF_IXML_ELEMENT .
  methods CREATE_SOURCE
    importing
      !SOURCE type TABLE_OF_STRINGS
      !ATTRIBS type TRDIR .
  methods ENQUEUE_ABAP
    raising
      ZCX_SAPLINK .
  methods TRANSPORT_COPY
    importing
      !AUTHOR type SYUNAME
      !DEVCLASS type DEVCLASS
    raising
      ZCX_SAPLINK .</privateSection>
  <method CLSNAME="ZSAPLINK" CMPNAME="CHECKEXISTS" VERSION="0" LANGU="E" DESCRIPT="Check if object exists" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CHECKEXISTS .

  select single name from trdir into objName where NAME = objName.
  if sy-subrc = 0.
    exists = &apos;X&apos;.
  endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CREATEIXMLDOCFROMOBJECT" VERSION="0" LANGU="E" DESCRIPT="Creates an IF_IXML_DOCUMENT from the OBJNAME Attribute" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060720" CHANGEDBY="USEWH90" CHANGEDON="20060830" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <exception CLSNAME="ZSAPLINK" CMPNAME="CREATEIXMLDOCFROMOBJECT" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDON="00000000"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CREATEIXMLDOCFROMOBJECT .
data rootNode type ref to if_ixml_element.
data sourceNode type ref to if_ixml_element.
data textPoolNode type ref to if_ixml_element.
data rc type sysubrc.
data progAttribs type trdir.
data progSource type RSWSOURCET.
data _objName(30) type c.
data sourceString type string.
data _objType type string.

  _objType = getObjectType( ).
  rootNode = xmlDoc-&gt;create_element( _objType ).
  sourceNode = xmlDoc-&gt;create_element( &apos;source&apos; ).
  select single * from trdir into progAttribs where NAME = objName.
  if sy-subrc = 0.
    setAttributesFromStructure( node = rootNode structure =  progAttribs
    ).
    _objName = objName.
    read report _objName into progSource.
    sourceString = buildSourceString( sourceTable = progSource ).
    rc = sourceNode-&gt;IF_IXML_NODE~SET_VALUE( sourceString ).
    textPoolNode = get_textPool( ).
    rc = rootNOde-&gt;append_child( textPoolNode ).
    rc = rootNode-&gt;append_child( sourceNode ).
    rc = xmldoc-&gt;append_child( rootNode ).
    ixmlDocument = xmlDoc.
  else.
    clear ixmlDocument.
    raise exception type zcx_saplink
      exporting textid = zcx_saplink=&gt;not_found.
  endif.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="CREATEOBJECTFROMIXMLDOC" VERSION="0" LANGU="E" DESCRIPT="Creates Object on System from IXMLDocument passed in" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060720" CHANGEDBY="USEWH90" CHANGEDON="20060830" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <exception CLSNAME="ZSAPLINK" CMPNAME="CREATEOBJECTFROMIXMLDOC" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060830" CHANGEDON="00000000"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/

method CREATEOBJECTFROMIXMLDOC .

data rootNode type ref to if_ixml_element.
data progAttribs type trdir.
data sourceNode type ref to if_ixml_element.
data textNode type ref to if_ixml_element.
data source type string.
data sourceTable type table_of_strings.
data _objName(30) type c.
data aObjName type TROBJ_NAME.
data _objType type string.
data checkExists type flag.

*if sy-uname &lt;&gt; &apos;USDWM01&apos;.
*    _objType = getObjectType( ).
*    xmlDoc = ixmlDocument.
*    rootNode = xmlDoc-&gt;find_from_name( _objType ).
*    call method GETSTRUCTUREFROMATTRIBUTES
*          exporting
*            node = rootNode
*          changing
*            structure = progAttribs.
*    objName = progAttribs-NAME.
*
**   check existing
*    select single name from trdir into objName where NAME = objName.
*    if sy-subrc = 0.
*      raise exception type zcx_saplink
*        exporting textid = zcx_saplink=&gt;existing.
*    endif.
*
*    sourceNode = rootNode-&gt;find_from_name( &apos;source&apos; ).
*    source = sourceNode-&gt;get_value( ).
*    sourceTable = BUILDTABLEFROMSTRING( source ).
*    insert report progAttribs-NAME from sourceTable.
*
*    commit work.
*
*    call function &apos;RS_INSERT_INTO_WORKING_AREA&apos;
*      EXPORTING
*        object            = &apos;REPS&apos;
*        obj_name          = aobjName
*      EXCEPTIONS
*        wrong_object_name = 1.
*    if sy-subrc &lt;&gt; 0.
*
*    endif.
*
*else.

  _objType = getObjectType( ).
  xmlDoc = ixmlDocument.
  rootNode = xmlDoc-&gt;find_from_name( _objType ).
  call method GETSTRUCTUREFROMATTRIBUTES
        exporting
          node = rootNode
        changing
          structure = progAttribs.
  objName = progAttribs-NAME.

*  check if object exists
*  select single name from trdir into objName where NAME = objName.
*  if sy-subrc = 0 and overwrite &lt;&gt; &apos;X&apos;.
*    raise exception type zcx_saplink
*      exporting textid = zcx_saplink=&gt;existing.
*  endif.

  checkExists = checkexists( ).
  if checkExists is not initial.
    if overwrite is initial.
      raise exception type zcx_saplink
        exporting textid = zcx_saplink=&gt;existing.
    else.
*     delete object for new install
      deleteobject( ).
    endif.
  endif.


  enqueue_abap( ).
  transport_copy( author = progAttribs-CNAM devclass = devclass ).
  sourceNode = rootNode-&gt;find_from_name( &apos;source&apos; ).
  source = sourceNode-&gt;get_value( ).
  sourceTable = BUILDTABLEFROMSTRING( source ).
  create_source( SOURCE = sourceTable attribs = progAttribs ).
  textNode = rootNode-&gt;find_from_name( &apos;textPool&apos; ).
  create_textPool( textNode ).
  dequeue_abap( ).
*endif.

* successful install
  name = objName.

endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="CREATE_SOURCE" VERSION="0" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDBY="USDWM01" CHANGEDON="20060829" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="CREATE_SOURCE" SCONAME="SOURCE" VERSION="0" LANGU="E" DESCRIPT="Table of Strings" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060830" CHANGEDBY="USDWM01" CHANGEDON="20060830" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TABLE_OF_STRINGS"/>
   <parameter CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="CREATE_SOURCE" SCONAME="ATTRIBS" VERSION="0" LANGU="E" DESCRIPT="Generated Table for View TRDIR" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060830" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TRDIR"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CREATE_SOURCE .
data _objName type TROBJ_NAME.
data progLine type PROGDIR.
data titleInfo type trdirti.
data reportLine type string.
data miniReport type table_of_strings.

  _objName = objName.
  call function &apos;RS_INSERT_INTO_WORKING_AREA&apos;
        exporting
             OBJECT   = &apos;REPS&apos;
             OBJ_NAME = _objName
        exceptions
             WRONG_OBJECT_NAME = 1.
   INSERT REPORT _objName FROM source STATE &apos;I&apos;.

  move-corresponding attribs to progline.
  modify progdir from progline.
* Are you kidding me?!?  No idea why you need to do this!!
  CONCATENATE &apos;REPORT&apos; _objName &apos;.&apos; INTO reportLine SEPARATED BY SPACE.
  append reportline to miniReport.
  INSERT REPORT _objName FROM miniReport STATE &apos;A&apos;.
  MOVE &apos;A&apos; TO progline-STATE.
  modify progdir from progline.

endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="CREATE_TEXTPOOL" VERSION="0" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="0 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060830" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="CREATE_TEXTPOOL" SCONAME="TEXTPOOLNODE" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_ELEMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060830" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_ELEMENT"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method CREATE_TEXTPOOL .
data textPoolTable type standard table of textPool.
data textPoolRow type textPool.
data langIterator type ref to if_ixml_node_iterator.
data filter type ref to if_ixml_node_filter.
data textFilter type ref to if_ixml_node_filter.
data textIterator type ref to if_ixml_node_iterator.
data langNode type ref to if_ixml_element.
data aTextNode type ref to if_ixml_element.
data _objName type TROBJ_NAME.
data lang type spras.
data langNodeExists type flag.
data logonLanguageExists type flag.

  _objName = objName.

  filter = textPoolNode-&gt;create_filter_name( &apos;language&apos; ).
  langIterator = textPoolNode-&gt;create_iterator_filtered( filter ).
  langNode ?= langIterator-&gt;get_next( ).

  while langNode is not initial.
    langNodeExists = &apos;X&apos;.
    CALL FUNCTION &apos;RS_INSERT_INTO_WORKING_AREA&apos;
         EXPORTING
              OBJECT   = &apos;REPT&apos;
              OBJ_NAME = _objName
         EXCEPTIONS
              OTHERS   = 0.

    refresh textPoolTable.
    textIterator = langNode-&gt;create_iterator( ).
    aTextNode ?= textIterator-&gt;get_next( ).
*For some reason the 1st one is blank... not sure why.
    aTextNode ?= textIterator-&gt;get_next( ).
    while aTextNode is not initial.
      call method GETSTRUCTUREFROMATTRIBUTES
            exporting
              node = aTextNode
            changing
              structure = textPoolRow.
      append textPoolRow to textPoolTable.
      aTextNode ?= textIterator-&gt;get_next( ).
    endwhile.
    if textPoolTable is not initial.
      lang = langNode-&gt;get_attribute( &apos;SPRAS&apos; ).
      if lang = sy-langu.
        logonLanguageExists = &apos;X&apos;.
      endif.
      insert textpool _objName from textPooltable language lang state
      &apos;I&apos;.
    endif.
    langNode ?= langIterator-&gt;get_next( ).
  endwhile.

* insert untranslated text pool in logon language if it doesnt exist
  if langNodeExists = &apos;X&apos; and logonLanguageExists = &apos; &apos;.
    insert textpool _objName from textPooltable language sy-langu state
    &apos;I&apos;.
  endif.
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="DELETEOBJECT" VERSION="0" LANGU="E" DESCRIPT="Delete object" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZSAPLINK" CMPNAME="DELETEOBJECT" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDON="00000000"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method DELETEOBJECT .

data program type sy-repid.

program = objName.

CALL FUNCTION &apos;RS_DELETE_PROGRAM&apos;
  EXPORTING
*   CORRNUMBER                       =
    program                          = program
*   SUPPRESS_CHECKS                  = &apos; &apos;
*   SUPPRESS_COMMIT                  = &apos; &apos;
    SUPPRESS_POPUP                   = &apos;X&apos;
*   MASS_DELETE_CALL                 = &apos; &apos;
*   WITH_CUA                         = &apos;X&apos;
*   WITH_DOCUMENTATION               = &apos;X&apos;
*   WITH_DYNPRO                      = &apos;X&apos;
*   WITH_INCLUDES                    = &apos; &apos;
*   WITH_TEXTPOOL                    = &apos;X&apos;
*   WITH_VARIANTS                    = &apos;X&apos;
*   TADIR_DEVCLASS                   =
*   SKIP_PROGRESS_IND                = &apos; &apos;
*   FORCE_DELETE_USED_INCLUDES       = &apos; &apos;
* IMPORTING
*   CORRNUMBER                       =
*   PROGRAM                          =
* EXCEPTIONS
*   ENQUEUE_LOCK                     = 1
*   OBJECT_NOT_FOUND                 = 2
*   PERMISSION_FAILURE               = 3
*   REJECT_DELETION                  = 4
*   OTHERS                           = 5
          .
IF sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="DEQUEUE_ABAP" VERSION="0" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="0 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060830" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="DEQUEUE_ABAP" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDON="00000000"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method DEQUEUE_ABAP .

  call function &apos;RS_ACCESS_PERMISSION&apos;
       exporting
            global_lock              = &apos;X&apos;
            mode                     = &apos;FREE&apos;
            object                   = objName
            object_class             = &apos;ABAP&apos;
       exceptions
            canceled_in_corr         = 1
            enqueued_by_user         = 3
            enqueue_system_failure   = 4
            locked_by_author         = 5
            illegal_parameter_values = 6
            no_modify_permission     = 7
            no_show_permission       = 8
            permission_failure       = 9.

  if sy-subrc &lt;&gt; 0.
    case sy-subrc.
      when 7 or 8 or 9.
        raise exception type zcx_saplink
          exporting
            textid = zcx_saplink=&gt;not_authorized.
      when 5.
        raise exception type zcx_saplink
          exporting
            textid = zcx_saplink=&gt;error_message
            msg = &apos;object locked&apos;.
      when others.
        raise exception type zcx_saplink
          exporting
            textid = zcx_saplink=&gt;system_error.
    endcase.
  endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="ENQUEUE_ABAP" VERSION="0" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="ENQUEUE_ABAP" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDON="00000000"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method ENQUEUE_ABAP .


  call function &apos;RS_ACCESS_PERMISSION&apos;
       exporting
*            authority_check          = authority_check
            global_lock              = &apos;X&apos;
            mode                     = &apos;INSERT&apos;
*            master_language          = trdir-rload
            object                   = objName
            object_class             = &apos;ABAP&apos;
*       importing
*            transport_key            = trkey_global
*            new_master_language      = trdir-rload
*            devclass                 = devclass_local
       exceptions
            canceled_in_corr         = 1
            enqueued_by_user         = 3
            enqueue_system_failure   = 4
            locked_by_author         = 5
            illegal_parameter_values = 6
            no_modify_permission     = 7
            no_show_permission       = 8
            permission_failure       = 9.

  if sy-subrc &lt;&gt; 0.
    case sy-subrc.
      when 7 or 8 or 9.
        raise exception type zcx_saplink
          exporting
            textid = zcx_saplink=&gt;not_authorized.
      when 5.
        raise exception type zcx_saplink
          exporting
            textid = zcx_saplink=&gt;error_message
            msg = &apos;object locked&apos;.
      when others.
        raise exception type zcx_saplink
          exporting
            textid = zcx_saplink=&gt;system_error.
    endcase.
  endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK" CMPNAME="GETOBJECTTYPE" VERSION="0" LANGU="E" DESCRIPT="Get object type of plugin" EXPOSURE="1" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="USEWH90" CREATEDON="20060829" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter VERSION="0" CMPTYPE="0" MTDTYPE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="0"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method GETOBJECTTYPE .
  objectType = &apos;PROG&apos;. &quot;ABAP Program
endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="GET_TEXTPOOL" VERSION="0" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="0 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060830" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="GET_TEXTPOOL" SCONAME="TEXTNODE" VERSION="0" LANGU="E" DESCRIPT="IF_IXML_ELEMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060830" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="IF_IXML_ELEMENT"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method GET_TEXTPOOL .

data aText type ref to if_ixml_element.
data textPoolTable type standard table of TEXTPOOL.
data textPoolRow type textPool.
data languageList type instLang.
data aLanguage type SPRAS.
data _objName(30) type c.
data rc type i.
data sTemp type string.
data languageNode type ref to if_ixml_element.

  _objName = objName.


  textNode = xmlDoc-&gt;create_element( &apos;textPool&apos; ).

  CALL FUNCTION &apos;RS_TEXTLOG_GET_PARAMETERS&apos;
        changing
          INSTALLED_LANGUAGES = languageList.

  loop at languageList into aLanguage.
    read textpool _objName into textPoolTable language aLanguage.
    if sy-subrc = 0.
      languageNode = xmlDoc-&gt;create_Element( &apos;language&apos; ).
      sTemp = aLanguage.
      rc = languageNode-&gt;set_attribute( name = &apos;SPRAS&apos; value = sTemp ).
      loop at textPoolTable into textPoolRow.
        aText = xmlDoc-&gt;create_element( &apos;textElement&apos; ).
        setAttributesFromStructure( node = aText structure =
        textPoolRow ).
        rc = languageNode-&gt;append_child( aText ).
      endloop.
      rc = textNode-&gt;append_child( languageNode ).
    endif.
  endloop.

endmethod.</source>
  </method>
  <method CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="TRANSPORT_COPY" VERSION="0" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060829" CHANGEDBY="USEWH90" CHANGEDON="20060831" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="620" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="TRANSPORT_COPY" SCONAME="AUTHOR" VERSION="0" LANGU="E" DESCRIPT="SAP System, User Logon Name" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060830" CHANGEDBY="USDWM01" CHANGEDON="20060830" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYUNAME"/>
   <parameter CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="TRANSPORT_COPY" SCONAME="DEVCLASS" VERSION="0" LANGU="E" DESCRIPT="Package" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="USDWM01" CREATEDON="20060830" CHANGEDBY="USDWM01" CHANGEDON="20060830" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="DEVCLASS"/>
   <exception CLSNAME="ZSAPLINK_PROGRAM" CMPNAME="TRANSPORT_COPY" SCONAME="ZCX_SAPLINK" VERSION="0" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="USEWH90" CREATEDON="20060831" CHANGEDON="00000000"/>
   <source>*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
method TRANSPORT_COPY .


  CALL FUNCTION &apos;RS_CORR_INSERT&apos;
       EXPORTING
            AUTHOR              = author
            GLOBAL_LOCK         = &apos;X&apos;
            OBJECT              = objName
            OBJECT_CLASS        = &apos;ABAP&apos;
            DEVCLASS            = devClass
*            KORRNUM             = CORRNUMBER_LOCAL
            MASTER_LANGUAGE     = sy-langu
*            PROGRAM             = PROGRAM_LOCAL
            MODE                = &apos;INSERT&apos;
*       IMPORTING
*            AUTHOR              = UNAME
*            KORRNUM             = CORRNUMBER_LOCAL
*            DEVCLASS            = DEVCLASS_LOCAL
       EXCEPTIONS
            CANCELLED           = 1
            PERMISSION_FAILURE  = 2
            UNKNOWN_OBJECTCLASS = 3.

  if sy-subrc &lt;&gt; 0.
    case sy-subrc.
      when 2.
        raise exception type zcx_saplink
          exporting
            textid = zcx_saplink=&gt;not_authorized.
      when others.
        raise exception type zcx_saplink
          exporting
            textid = zcx_saplink=&gt;system_error.
    endcase.
  endif.

endmethod.</source>
  </method>
 </CLAS>
</nugget>
