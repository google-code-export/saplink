<?xml version="1.0" encoding="iso-8859-1"?>
<CLAS CLSNAME="ZAKE" VERSION="1" LANGU="E" DESCRIPT="ABAP Make" UUID="DF0DD6BA1DC357F1B37C000C29B7D360" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="USDWM01" CREATEDON="20070202" CHANGEDBY="BCUSER" CHANGEDON="20100307" CHGDANYON="00000000" CLSABSTRCT="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <publicSection>class ZAKE definition
  public
  abstract
  create public .

*&quot;* public components of class ZAKE
*&quot;* do not include other source files here!!!
public section.
  type-pools ABAP .
  type-pools STMS .

  data DOWNLOAD_NUGGET_TO_LM type FLAG value &apos;X&apos;. &quot;#EC NOTEXT .
  data DOWNLOAD_SLINKEES_TO_LM type FLAG value &apos;X&apos;. &quot;#EC NOTEXT .
  data DOWNLOAD_TRANSPORT_TO_LM type FLAG value &apos; &apos;. &quot;#EC NOTEXT .

  class-methods GET_FILENAME_FROM_FULLPATH
    importing
      !I_FULLPATH type STRING
    returning
      value(R_FILENAME) type STRING .
  methods UPDATE
  abstract
    raising
      ZCX_SAPLINK .
  methods ACTIVATE_SLINKEES
    importing
      !I_SLINKEES type IGS_CE_CU_TAB
    raising
      ZCX_SAPLINK .
  methods ADD_FILES_TO_ZIP
    importing
      !I_FILES type STRING_TABLE .
  methods SET_TESTRUN
    importing
      !I_TESTRUN type FLAG .
  methods INSTALL_OBJECTS
    importing
      !I_OBJECTS type SCTS_TADIR
    raising
      ZCX_SAPLINK .
  methods SET_CHECKIN_OBJECTS
    importing
      !I_OBJECTS type SCTS_TADIR .
  methods INSTALL_SLINKEES_FROM_LM
    importing
      !I_TESTRUN type FLAG default &apos; &apos;
    raising
      ZCX_SAPLINK .
  methods CHECKOUT
  abstract
    importing
      !I_REVISION type I optional
    raising
      ZCX_SAPLINK .
  methods CHECKIN
  abstract
    importing
      !I_COMMENT type STRING optional
    raising
      ZCX_SAPLINK .
  methods ACTIVATE_PACKAGE_OBJECTS
    raising
      ZCX_SAPLINK .
  methods ACTIVATE
    importing
      !I_OBJTYPE type STRING
      !I_OBJNAME type STRING
    raising
      ZCX_SAPLINK .
  methods ADD_OBJECT_TO_NUGGET
    importing
      !I_NUGGET_NAME type STRING
      !I_XML_DOCUMENT type ref to IF_IXML_DOCUMENT
    raising
      ZCX_SAPLINK .
  methods BUILD_NUGGET_FROM_FILES
    importing
      !I_NUGGET_NAME type STRING
    raising
      ZCX_SAPLINK .
  methods CREATE_NUGGET
    importing
      !I_NUGGET_NAME type STRING .
  methods CREATE_SLINKEES
    importing
      !I_NUGGET_NAME type STRING optional
    raising
      ZCX_SAPLINK .
  methods GET_ALL_FILES
    raising
      ZCX_SAPLINK .
  methods GET_NUGGET_STRING
    importing
      !I_NUGGET_NAME type STRING
    returning
      value(R_NUGGET_STRING) type STRING .
  methods SAVE_NUGGET
    importing
      !I_NUGGET_NAME type STRING
      !I_TARGET type STRING .
  methods SYNTAXCHECK
    importing
      !I_OBJNAME type STRING
      !I_OBJTYPE type STRING .
  methods SET_PACKAGE
    importing
      !I_PACKAGE type DEVCLASS .
  methods SET_PACKAGE_OBJECTS
    importing
      !I_PACKAGE type DEVCLASS
    raising
      ZCX_SAPLINK .
  methods DELETE
    importing
      !I_XML_DOCUMENT type ref to IF_IXML_DOCUMENT .
  methods GET_FILE
    importing
      !I_FILENAME type STRING
      !I_NEWCLIENT type ref to IF_HTTP_CLIENT optional
    returning
      value(R_XML_DOCUMENT) type ref to IF_IXML_DOCUMENT
    raising
      ZCX_SAPLINK .
  methods CONSTRUCTOR
    importing
      !I_SVNPATH type STRING
      !I_LOCALPATH type STRING
      !I_USERNAME type STRING optional
      !I_PASSWORD type STRING optional
    raising
      ZCX_SAPLINK .
  methods INSTALL
    importing
      !I_XML_DOCUMENT type ref to IF_IXML_DOCUMENT
    exporting
      !E_OBJECTTYPE type STRING
      !E_OBJECTNAME type STRING .
  methods CREATE_TRANSPORT_REQUEST
    importing
      !I_TEXT type AS4TEXT optional
      !I_AUTHOR type TR_AS4USER default SY-UNAME
    returning
      value(R_TRANSPORT) type TRKORR .
  methods ADD_PACKAGE_OBJECTS_TO_TR
    importing
      !I_TRANSPORT type TRKORR optional
    raising
      ZCX_SAPLINK .
  methods SET_PACKAGE_OF_PACKAGE_OBJECTS
    raising
      ZCX_SAPLINK .
  methods RELEASE_TRANSPORT_REQUEST
    importing
      !I_TRANSPORT type TRKORR optional
    raising
      ZCX_SAPLINK .</publicSection>
 <protectedSection>*&quot;* protected components of class ZAKE
*&quot;* do not include other source files here!!!
protected section.

  data TESTRUN type FLAG .
  data ZAKE_HOME type STRING value &apos;C:\Projects\&apos;. &quot;#EC NOTEXT .
  data PASSWORD type STRING .
  data USERNAME type STRING .
  data PATH type STRING .
  data URL type STRING .

  methods INSTALL_SLINKEES
    importing
      !I_SLINKEES type IGS_CE_CU_TAB
    raising
      ZCX_SAPLINK .
  methods GET_SLINKEES_FROM_LM
    importing
      !I_FULLPATH type STRING
    changing
      value(C_SLINKEES) type IGS_CE_CU_TAB
    exceptions
      ZCX_SAPLINK .
  methods ADD_SLINKEE_TO_VERSIONCONTROL
    importing
      !I_FULLPATH type STRING
      !I_FOLDERPATH type STRING optional
    raising
      ZCX_SAPLINK .</protectedSection>
 <privateSection>*&quot;* private components of class ZAKE
*&quot;* do not include other source files here!!!
private section.

  data FILELIST_ZIP type STRING_TABLE .
  data IV_PACKAGE type DEVCLASS .
  data HTTPCLIENT type ref to IF_HTTP_CLIENT .
  data:
    L_OBJTABLE type standard table of t_objectTable .
  data:
    CURRENTNUGGETS type standard table of nuggetRow .
  data:
    FILELIST type standard table of fileListRowType .
  data:
    package_objects TYPE STANDARD TABLE OF t_packageObjectTable .
  data TRANSPORT type TRKORR .

  methods ADD_TRANSPORT_TO_FILELIST
    raising
      ZCX_SAPLINK .
  methods READ_XML_FROM_LM
    importing
      !I_FULLPATH type STRING
    returning
      value(R_XML_STRING) type STRING
    raising
      ZCX_SAPLINK .
  methods DELETE_FILE
    importing
      !I_FULLPATH type STRING .
  methods CREATE_SLINKEE
    importing
      !I_NUGGET_NAME type STRING optional
      !I_PACKAGE_OBJECT type T_PACKAGEOBJECTTABLE
    raising
      ZCX_SAPLINK .
  methods DOWNLOAD_ZIP_TO_LM
    importing
      !I_FULLPATH type STRING
      !I_STRINGTOZIP type STRING
    raising
      ZCX_SAPLINK .
  methods DOWNLOAD_XML_TO_LM
    importing
      !I_FULLPATH type STRING
      !I_XML_STRING type STRING .</privateSection>
 <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
 <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature
TYPES: BEGIN OF t_objecttable,
         classname TYPE string,
         object TYPE ko100-object,
         text TYPE ko100-text,
       END OF t_objecttable.


TYPES: BEGIN OF nuggetrow,
        name TYPE string,
        nuggetobject TYPE REF TO zsaplink_nugget,
       END OF nuggetrow.


TYPES: BEGIN OF filelistrowtype,
        name TYPE string,
        xmldoc TYPE REF TO if_ixml_document,
       END OF filelistrowtype.

****   Read all objects of the package
TYPES: BEGIN OF t_packageobjecttable,
          select     TYPE char1,
          object     TYPE tadir-object,
          object_txt TYPE string,
          obj_name   TYPE tadir-obj_name,
          srcsystem  TYPE tadir-srcsystem,
          down_flag  TYPE char1,
          status     TYPE char1,
          msg        TYPE string,
          delflag    TYPE flag,
       END OF t_packageobjecttable.

****   Type for Table of Objects to checkin
TYPES: BEGIN OF t_objects,
          object     TYPE tadir-object,
          obj_name   TYPE tadir-obj_name,
       END OF t_objects.

types: tt_objects TYPE STANDARD TABLE OF t_objects.</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <textPool/>
 <typeUsage CLSNAME="ZAKE" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" EXPLICIT="X"/>
 <typeUsage CLSNAME="ZAKE" TYPEGROUP="STMS" VERSION="1" TPUTYPE="0" EXPLICIT="X"/>
 <forwardDeclaration>ABAP</forwardDeclaration>
 <forwardDeclaration>STMS</forwardDeclaration>
 <attribute CLSNAME="ZAKE" CMPNAME="CURRENTNUGGETS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="11 " SRCCOLUMN1="4 " SRCROW2="11 " SRCCOLUMN2="50 " R3RELEASE="702" TYPESRC_LENG="49 " TYPESRC="CURRENTNUGGETS type standard table of nuggetRow
"/>
 <attribute CLSNAME="ZAKE" CMPNAME="DOWNLOAD_NUGGET_TO_LM" VERSION="1" LANGU="E" DESCRIPT="General Flag" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100401" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTVALUE="&apos;X&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="FLAG" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZAKE" CMPNAME="DOWNLOAD_SLINKEES_TO_LM" VERSION="1" LANGU="E" DESCRIPT="General Flag" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20100401" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTVALUE="&apos;X&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="FLAG" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZAKE" CMPNAME="DOWNLOAD_TRANSPORT_TO_LM" VERSION="1" LANGU="E" DESCRIPT="General Flag" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDON="00000000" ATTDECLTYP="0" ATTVALUE="&apos; &apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="FLAG" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZAKE" CMPNAME="FILELIST" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="6 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="13 " SRCCOLUMN1="4 " SRCROW2="13 " SRCCOLUMN2="50 " R3RELEASE="702" TYPESRC_LENG="49 " TYPESRC="FILELIST type standard table of fileListRowType
"/>
 <attribute CLSNAME="ZAKE" CMPNAME="FILELIST_ZIP" VERSION="1" LANGU="E" DESCRIPT="Files to add to the ZIP file" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100307" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING_TABLE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZAKE" CMPNAME="HTTPCLIENT" VERSION="1" LANGU="E" DESCRIPT="HTTP Client Abstraction" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="IF_HTTP_CLIENT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZAKE" CMPNAME="IV_PACKAGE" VERSION="1" LANGU="E" DESCRIPT="Package" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="DEVCLASS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZAKE" CMPNAME="L_OBJTABLE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="9 " SRCCOLUMN1="4 " SRCROW2="9 " SRCCOLUMN2="50 " R3RELEASE="702" TYPESRC_LENG="49 " TYPESRC="L_OBJTABLE type standard table of t_objectTable
"/>
 <attribute CLSNAME="ZAKE" CMPNAME="PACKAGE_OBJECTS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="7 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="15 " SRCCOLUMN1="4 " SRCROW2="15 " SRCCOLUMN2="62 " R3RELEASE="702" TYPESRC_LENG="61 " TYPESRC="package_objects TYPE STANDARD TABLE OF t_packageObjectTable
"/>
 <attribute CLSNAME="ZAKE" CMPNAME="PASSWORD" VERSION="1" LANGU="E" DESCRIPT="Password" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZAKE" CMPNAME="PATH" VERSION="1" LANGU="E" DESCRIPT="Local Path" EXPOSURE="1" STATE="1" EDITORDER="5 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZAKE" CMPNAME="TESTRUN" VERSION="1" LANGU="E" DESCRIPT="Testrun" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="FLAG" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZAKE" CMPNAME="TRANSPORT" VERSION="1" LANGU="E" DESCRIPT="Request/Task" EXPOSURE="0" STATE="1" EDITORDER="8 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TRKORR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZAKE" CMPNAME="URL" VERSION="1" LANGU="E" DESCRIPT="Repository URL" EXPOSURE="1" STATE="1" EDITORDER="6 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZAKE" CMPNAME="USERNAME" VERSION="1" LANGU="E" DESCRIPT="Username" EXPOSURE="1" STATE="1" EDITORDER="4 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZAKE" CMPNAME="ZAKE_HOME" VERSION="1" LANGU="E" DESCRIPT="Directory to the ZAKE CMD Scripts" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20100414" CHANGEDBY="BCUSER" CHANGEDON="20100823" ATTDECLTYP="0" ATTVALUE="&apos;C:\Projects\&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
 <method CLSNAME="ZAKE" CMPNAME="ACTIVATE" VERSION="1" LANGU="E" DESCRIPT="Activate Object" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="ACTIVATE" SCONAME="I_OBJTYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="ACTIVATE" SCONAME="I_OBJNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <exception CLSNAME="ZAKE" CMPNAME="ACTIVATE" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100117" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>method ACTIVATE.

  DATA: object TYPE trobjtype,
        obj_name TYPE trobj_name.
  DATA: objects TYPE dwinactiv_tab.
  DATA: msg TYPE string.

  object   = i_objtype.
  obj_name = i_objname.

  CALL FUNCTION &apos;RS_WORKING_OBJECT_ACTIVATE&apos;
    EXPORTING
      object                     = object
      obj_name                   = obj_name
      activate_only_this_object  = &apos;X&apos;
    TABLES
      OBJECTS                    = OBJECTS
    exceptions
      object_not_in_working_area = 1
      execution_error            = 2
      cancelled                  = 3
      insert_into_corr_error     = 4
      OTHERS                     = 5.

  IF sy-subrc &lt;&gt; 0.
    msg = &apos;Error during activation&apos;.
    RAISE EXCEPTION TYPE zcx_saplink
      EXPORTING
        textid = zcx_saplink=&gt;error_message
        msg    = msg.
  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="ACTIVATE_PACKAGE_OBJECTS" VERSION="1" LANGU="E" DESCRIPT="Activate Object" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100819" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <exception CLSNAME="ZAKE" CMPNAME="ACTIVATE_PACKAGE_OBJECTS" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100819" CHANGEDON="00000000"/>
  <source>METHOD activate_package_objects.
  DATA: object   TYPE trobjtype,
        obj_name TYPE trobj_name.
  DATA: objects TYPE dwinactiv_tab.
  DATA: msg TYPE string.
  FIELD-SYMBOLS: &lt;package_object&gt; LIKE LINE OF me-&gt;package_objects.

  LOOP AT me-&gt;package_objects ASSIGNING &lt;package_object&gt;
    WHERE object = &apos;DTEL&apos;
       OR object = &apos;VIEW&apos;
       OR object = &apos;DOMA&apos;
       OR object = &apos;TTYP&apos;
       OR object = &apos;INDX&apos;
       OR object = &apos;XINX&apos;
       OR object = &apos;SHLP&apos;
       OR object = &apos;ENQU&apos;
       OR object = &apos;MCOB&apos;
       OR object = &apos;TABL&apos;
       OR object = &apos;SQLT&apos;
       OR object = &apos;STRU&apos;
       OR object = &apos;SFBF&apos;
       OR object = &apos;SFSW&apos;
       OR object = &apos;SFBS&apos;
       OR object = &apos;SF01&apos;
       OR object = &apos;METH&apos;.
    object   = &lt;package_object&gt;-object.
    obj_name = &lt;package_object&gt;-obj_name.
    CALL FUNCTION &apos;RS_WORKING_OBJECT_ACTIVATE&apos;
      EXPORTING
        object                     = object
        obj_name                   = obj_name
        activate_only_this_object  = &apos;X&apos;
        dictionary_only            = &apos;X&apos;
      TABLES
        OBJECTS                    = OBJECTS
      exceptions
        object_not_in_working_area = 1
        execution_error            = 2
        cancelled                  = 3
        insert_into_corr_error     = 4
        OTHERS                     = 5.

    IF sy-subrc &lt;&gt; 0.
      msg = &apos;Error during activation&apos;.
      RAISE EXCEPTION TYPE zcx_saplink
        EXPORTING
          textid = zcx_saplink=&gt;error_message
          msg    = msg.
    ENDIF.
  ENDLOOP.
  LOOP AT me-&gt;package_objects ASSIGNING &lt;package_object&gt;
    WHERE object &lt;&gt; &apos;DTEL&apos;
       AND object &lt;&gt; &apos;VIEW&apos;
       AND object &lt;&gt; &apos;DOMA&apos;
       AND object &lt;&gt; &apos;TTYP&apos;
       AND object &lt;&gt; &apos;INDX&apos;
       AND object &lt;&gt; &apos;XINX&apos;
       AND object &lt;&gt; &apos;SHLP&apos;
       AND object &lt;&gt; &apos;ENQU&apos;
       AND object &lt;&gt; &apos;MCOB&apos;
       AND object &lt;&gt; &apos;TABL&apos;
       AND object &lt;&gt; &apos;SQLT&apos;
       AND object &lt;&gt; &apos;STRU&apos;
       AND object &lt;&gt; &apos;SFBF&apos;
       AND object &lt;&gt; &apos;SFSW&apos;
       AND object &lt;&gt; &apos;SFBS&apos;
       AND object &lt;&gt; &apos;SF01&apos;
       AND object &lt;&gt; &apos;METH&apos;.
    object   = &lt;package_object&gt;-object.
    obj_name = &lt;package_object&gt;-obj_name.
    CALL FUNCTION &apos;RS_WORKING_OBJECT_ACTIVATE&apos;
      EXPORTING
        object                     = object
        obj_name                   = obj_name
        activate_only_this_object  = &apos;X&apos;
        dictionary_only            = &apos; &apos;
      TABLES
        OBJECTS                    = OBJECTS
      exceptions
        object_not_in_working_area = 1
        execution_error            = 2
        cancelled                  = 3
        insert_into_corr_error     = 4
        OTHERS                     = 5.

    IF sy-subrc &lt;&gt; 0.
      msg = &apos;Error during activation&apos;.
      RAISE EXCEPTION TYPE zcx_saplink
        EXPORTING
          textid = zcx_saplink=&gt;error_message
          msg    = msg.
    ENDIF.
  ENDLOOP.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="ACTIVATE_SLINKEES" VERSION="1" LANGU="E" DESCRIPT="Activate slinkees" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100117" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="ACTIVATE_SLINKEES" SCONAME="I_SLINKEES" VERSION="1" LANGU="E" DESCRIPT="Multiple Customizings for CE" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100117" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="IGS_CE_CU_TAB"/>
  <exception CLSNAME="ZAKE" CMPNAME="ACTIVATE_SLINKEES" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100117" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>method ACTIVATE_SLINKEES.

  DATA slinkee LIKE LINE OF i_slinkees.
  DATA objecttype TYPE string.
  DATA objectname TYPE string.

* Activate all the Slinkee&apos;s
  IF me-&gt;testrun IS INITIAL.
    LOOP AT i_slinkees INTO slinkee.
      me-&gt;activate(
          i_objtype = objecttype
          i_objname = objectname
      ).
    ENDLOOP.
  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="ADD_FILES_TO_ZIP" VERSION="1" LANGU="E" DESCRIPT="Adds the provided files to the ZIP file" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100307" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="ADD_FILES_TO_ZIP" SCONAME="I_FILES" VERSION="1" LANGU="E" DESCRIPT="Table of Filenames" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100307" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING_TABLE"/>
  <source>METHOD add_files_to_zip.
  me-&gt;filelist_zip[] = i_files[].
ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="ADD_OBJECT_TO_NUGGET" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="13 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="ADD_OBJECT_TO_NUGGET" SCONAME="I_NUGGET_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="ADD_OBJECT_TO_NUGGET" SCONAME="I_XML_DOCUMENT" VERSION="1" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
  <exception CLSNAME="ZAKE" CMPNAME="ADD_OBJECT_TO_NUGGET" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>method ADD_OBJECT_TO_NUGGET.

  DATA name TYPE string.
  DATA nugget TYPE nuggetrow.
  DATA objname TYPE string.
  DATA objtype TYPE string.
  DATA msg TYPE string.

  name = i_nugget_name.
  TRANSLATE name TO UPPER CASE.
  READ TABLE currentnuggets INTO nugget WITH KEY name = name.

  IF sy-subrc = 0.
    nugget-nuggetobject-&gt;addobjecttonugget( xmldocument = i_xml_document ).
  ELSE.
    CONCATENATE &apos;Nugget&apos; name &apos;not found in Current Nuggets&apos;
      INTO msg SEPARATED BY space.
    RAISE EXCEPTION TYPE zcx_saplink
      EXPORTING
        textid = zcx_saplink=&gt;error_message
        msg    = msg.
  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="ADD_PACKAGE_OBJECTS_TO_TR" VERSION="1" LANGU="E" DESCRIPT="Add all package objects to transport request" EXPOSURE="2" STATE="1" EDITORDER="28 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="ADD_PACKAGE_OBJECTS_TO_TR" SCONAME="I_TRANSPORT" VERSION="1" LANGU="E" DESCRIPT="Request/Task" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDBY="BCUSER" CHANGEDON="20100823" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TRKORR" PAROPTIONL="X"/>
  <exception CLSNAME="ZAKE" CMPNAME="ADD_PACKAGE_OBJECTS_TO_TR" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDON="00000000"/>
  <source>METHOD add_package_objects_to_tr.
  DATA: objects TYPE TABLE OF trexreqob.
  DATA: msg TYPE string.

  FIELD-SYMBOLS: &lt;package_object&gt; LIKE LINE OF me-&gt;package_objects.
  FIELD-SYMBOLS: &lt;object&gt; LIKE LINE OF objects.

  IF i_transport IS INITIAL AND me-&gt;transport IS INITIAL.
    RAISE EXCEPTION TYPE zcx_saplink
      EXPORTING
        textid = zcx_saplink=&gt;error_message
        msg    = &apos;You have to specify a transport request&apos;.
  ELSEIF NOT i_transport IS INITIAL.
    me-&gt;transport = i_transport.
  ENDIF.

  &quot; Add Package first
  APPEND INITIAL LINE TO objects ASSIGNING &lt;object&gt;.
  &lt;object&gt;-pgmid    = &apos;R3TR&apos;.
  &lt;object&gt;-object   = &apos;DEVC&apos;.
  &lt;object&gt;-obj_name = me-&gt;iv_package.

  LOOP AT me-&gt;package_objects ASSIGNING &lt;package_object&gt;.
    APPEND INITIAL LINE TO objects ASSIGNING &lt;object&gt;.
    &lt;object&gt;-object   = &lt;package_object&gt;-object.
    &lt;object&gt;-obj_name = &lt;package_object&gt;-obj_name.

    SELECT SINGLE pgmid FROM tadir INTO &lt;object&gt;-pgmid
      WHERE object = &lt;package_object&gt;-object
        AND obj_name = &lt;package_object&gt;-obj_name.
  ENDLOOP.

  DATA: ev_exception TYPE  tr007-exception,
        es_msg       TYPE tr004-msgtext.

  CALL FUNCTION &apos;TR_EXT_INSERT_IN_REQUEST&apos;
    EXPORTING
      iv_req_id    = me-&gt;transport
    IMPORTING
      ev_exception = ev_exception
      es_msg       = es_msg
    TABLES
      it_objects   = objects.
  IF NOT ev_exception IS INITIAL.
    msg = es_msg.
    RAISE EXCEPTION TYPE zcx_saplink
      EXPORTING
        textid = zcx_saplink=&gt;error_message
        msg    = msg.
  ENDIF.
ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="ADD_SLINKEE_TO_VERSIONCONTROL" VERSION="1" LANGU="E" DESCRIPT="Add Slinkee to the Version Control System" EXPOSURE="1" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="ADD_SLINKEE_TO_VERSIONCONTROL" SCONAME="I_FULLPATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="ADD_SLINKEE_TO_VERSIONCONTROL" SCONAME="I_FOLDERPATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <exception CLSNAME="ZAKE" CMPNAME="ADD_SLINKEE_TO_VERSIONCONTROL" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>method ADD_SLINKEE_TO_VERSIONCONTROL.
endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="ADD_TRANSPORT_TO_FILELIST" VERSION="1" LANGU="E" DESCRIPT="Add transport files to filelist" EXPOSURE="0" STATE="1" EDITORDER="0 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <exception CLSNAME="ZAKE" CMPNAME="ADD_TRANSPORT_TO_FILELIST" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDBY="BCUSER" CHANGEDON="20100823"/>
  <source>METHOD add_transport_to_filelist.

  DATA: system     TYPE TMSSYSNAM,
        tp_dirtsts TYPE stms_tp_dirtsts,
        tefi       TYPE stmsttefi.

  DATA: data_dir    TYPE string,
        cofiles_dir TYPE string.

  FIELD-SYMBOLS: &lt;tp_dirtst&gt; LIKE LINE OF tp_dirtsts .

  IF me-&gt;transport IS INITIAL.
    RAISE EXCEPTION TYPE zcx_saplink
      EXPORTING
        textid = zcx_saplink=&gt;error_message
        msg    = &apos;You have to specify a transport request&apos;.
  ENDIF.

  system = sy-sysid.

  CALL FUNCTION &apos;TMS_MGR_CHECK_TRANSPORT_DIR&apos;
   EXPORTING
     iv_system                = system
*     IV_DOMAIN                = IV_DOMAIN
*     IV_USE_LIST              = IV_USE_LIST
*     IV_KEEP_FILES            = IV_KEEP_FILES
*     IV_MONITOR               = &apos;X&apos;
*     IV_VERBOSE               = IV_VERBOSE
   IMPORTING
     es_tp_dirtsts            = tp_dirtsts
*   TABLES
*     TT_SYS_CREATE            = TT_SYS_CREATE
*     TT_SYS_READ              = TT_SYS_READ
*     TT_DIR_TAB               = TT_DIR_TAB
   EXCEPTIONS
     read_config_failed       = 1
     OTHERS                   = 2.

  IF sy-subrc &lt;&gt; 0.
    RAISE EXCEPTION TYPE zcx_saplink
      EXPORTING
        textid = zcx_saplink=&gt;error_message
        msg    = &apos;Error reading transport directory&apos;.
  ENDIF.

  READ TABLE tp_dirtsts ASSIGNING &lt;tp_dirtst&gt; INDEX 1.
  READ TABLE &lt;tp_dirtst&gt;-tefi INTO tefi WITH KEY dir = &apos;data&apos;.
  data_dir = tefi-path.
  READ TABLE &lt;tp_dirtst&gt;-tefi INTO tefi WITH KEY dir = &apos;cofiles&apos;.
  cofiles_dir = tefi-path.

  CONCATENATE cofiles_dir &apos;\&apos; me-&gt;transport+3(7) &apos;.&apos; me-&gt;transport(3)
    INTO cofiles_dir.
  CONCATENATE data_dir &apos;\R&apos; me-&gt;transport+4(6) &apos;.&apos; me-&gt;transport(3)
    INTO data_dir.

  APPEND cofiles_dir to me-&gt;filelist_zip.
  APPEND data_dir to me-&gt;filelist_zip.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="BUILD_NUGGET_FROM_FILES" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="14 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="BUILD_NUGGET_FROM_FILES" SCONAME="I_NUGGET_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <exception CLSNAME="ZAKE" CMPNAME="BUILD_NUGGET_FROM_FILES" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>method BUILD_NUGGET_FROM_FILES.

  DATA afile TYPE filelistrowtype.
  DATA stemp TYPE string.
  DATA newnugget TYPE nuggetrow.

  stemp = i_nugget_name.
  TRANSLATE stemp TO UPPER CASE.
  READ TABLE currentnuggets TRANSPORTING NO FIELDS WITH KEY name = stemp.
  IF sy-subrc = 0.
    DELETE currentnuggets WHERE name = stemp.
  ENDIF.
  me-&gt;create_nugget( i_nugget_name ).

  LOOP AT filelist INTO afile.
    me-&gt;add_object_to_nugget(
      i_nugget_name = i_nugget_name
      i_xml_document = afile-xmldoc
    ).
  ENDLOOP.

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="CHECKIN" VERSION="1" LANGU="E" DESCRIPT="Checkin to version control system" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="CHECKIN" SCONAME="I_COMMENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <exception CLSNAME="ZAKE" CMPNAME="CHECKIN" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100105" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="CHECKOUT" VERSION="1" LANGU="E" DESCRIPT="Checkout from version control system" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="CHECKOUT" SCONAME="I_REVISION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
  <exception CLSNAME="ZAKE" CMPNAME="CHECKOUT" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100105" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="25 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="2" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="CONSTRUCTOR" SCONAME="I_SVNPATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="CONSTRUCTOR" SCONAME="I_LOCALPATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="CONSTRUCTOR" SCONAME="I_USERNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <parameter CLSNAME="ZAKE" CMPNAME="CONSTRUCTOR" SCONAME="I_PASSWORD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <exception CLSNAME="ZAKE" CMPNAME="CONSTRUCTOR" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="2" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100117" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>METHOD constructor.
  DATA plugininfo TYPE t_objecttable.
  DATA scheme TYPE string.
  DATA msg TYPE string.
  DATA zake_home_env TYPE string.

  CALL FUNCTION &apos;SWLWP_URI_PARSE&apos;
    EXPORTING
      uri         = i_svnpath
    IMPORTING
      scheme      = scheme
    EXCEPTIONS
      uri_no_path = 1
      OTHERS      = 2.

  IF sy-subrc &lt;&gt; 0.
    msg = &apos;The provided URL is not a valid URL&apos;.
    RAISE EXCEPTION TYPE zcx_saplink
      EXPORTING
        textid = zcx_saplink=&gt;error_message
        msg    = msg.
  ENDIF.

  TRANSLATE scheme TO UPPER CASE.
  IF scheme = &apos;HTTP&apos; OR scheme = &apos;HTTPS&apos;.
    CALL METHOD cl_http_client=&gt;create_by_url
      EXPORTING
        url    = i_svnpath
      IMPORTING
        client = httpclient.
  ENDIF.

  &quot; Get the Path to the CMD script controlling SVN from
  cl_gui_frontend_services=&gt;environment_get_variable(
    EXPORTING
      variable             = &apos;ZAKE_HOME&apos;
    CHANGING
      value                = zake_home_env
    EXCEPTIONS
      cntl_error           = 1
      error_no_gui         = 2
      not_supported_by_gui = 3
      OTHERS               = 4
  ).
  cl_gui_cfw=&gt;flush( ).
  IF NOT zake_home_env IS INITIAL.
    DATA len TYPE i.
    DATA file_separator TYPE c LENGTH 1.

    cl_gui_frontend_services=&gt;get_file_separator(
      CHANGING
        file_separator       = file_separator
      EXCEPTIONS
        cntl_error           = 1
        error_no_gui         = 2
        not_supported_by_gui = 3
        OTHERS               = 4
    ).
    IF sy-subrc &lt;&gt; 0.
      &quot; Default to Windows file separator
      file_separator = &apos;\&apos;.
    ENDIF.

    len = STRLEN( zake_home_env ) - 1.

    IF zake_home_env+len(1) &lt;&gt; file_separator.
      CONCATENATE zake_home_env file_separator INTO zake_home_env.
    ENDIF.

    me-&gt;zake_home = zake_home_env.
  ENDIF.

  me-&gt;url      = i_svnpath.
  me-&gt;path     = i_localpath.

  IF i_username IS INITIAL AND
     i_password IS INITIAL.
    &quot; Try to read username and password from the userdata table
    SELECT SINGLE username password
      FROM zake_userdata
      INTO (me-&gt;username, me-&gt;password)
      WHERE url = i_svnpath.
  ELSE.
    me-&gt;username = i_username.
    me-&gt;password = i_password.
  ENDIF.

  TRY.
      CALL METHOD zsaplink=&gt;getplugins(
        CHANGING
          objecttable = l_objtable
      ).
    CATCH cx_root.
      plugininfo-classname = &apos;ZSAPLINK_CLASS&apos;.
      plugininfo-object = &apos;CLAS&apos;.
      APPEND plugininfo TO l_objtable.
      plugininfo-classname = &apos;ZSAPLINK_PROG&apos;.
      plugininfo-object = &apos;PROG&apos;.
      APPEND plugininfo TO l_objtable.
  ENDTRY.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="CREATE_NUGGET" VERSION="1" LANGU="E" DESCRIPT="Creates a  Nugget so you can add objects to it" EXPOSURE="2" STATE="1" EDITORDER="15 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="CREATE_NUGGET" SCONAME="I_NUGGET_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>method CREATE_NUGGET.
  DATA newnugget TYPE nuggetrow.
  DATA xmldoc TYPE REF TO if_ixml_document.

  newnugget-name = i_nugget_name.
  TRANSLATE newnugget-name TO UPPER CASE.
  CREATE OBJECT newnugget-nuggetobject
    EXPORTING
      name = i_nugget_name.
  xmldoc = newnugget-nuggetobject-&gt;createemptyxml( i_nugget_name ).

  APPEND newnugget TO currentnuggets.

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="CREATE_SLINKEE" VERSION="1" LANGU="E" DESCRIPT="Create Slinkee" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="CREATE_SLINKEE" SCONAME="I_NUGGET_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <parameter CLSNAME="ZAKE" CMPNAME="CREATE_SLINKEE" SCONAME="I_PACKAGE_OBJECT" VERSION="1" LANGU="E" DESCRIPT="Object in a Package" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="T_PACKAGEOBJECTTABLE"/>
  <exception CLSNAME="ZAKE" CMPNAME="CREATE_SLINKEE" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>METHOD create_slinkee.

  DATA objectline LIKE LINE OF l_objtable.
  DATA targetobject TYPE REF TO zsaplink.
  DATA _objname TYPE string.
  DATA xml_document TYPE REF TO if_ixml_document.
  DATA xml TYPE string.
  DATA deffilename TYPE string.
  DATA packagepath TYPE string.
  DATA folderpath TYPE string.
  DATA fullpath TYPE string.
* Create the Filename, Folderpath and FullPath
  CONCATENATE i_package_object-obj_name &apos;.slnk&apos; INTO deffilename.
  CONCATENATE path &apos;/&apos; iv_package INTO packagepath.
  CONCATENATE packagepath &apos;/&apos; i_package_object-object &apos;/&apos; INTO folderpath.
  CONCATENATE folderpath deffilename INTO fullpath.
* Don&apos;t export if the Deletion Flag is set
* Instead we delete the file
  IF i_package_object-delflag = &apos;X&apos;.
    me-&gt;delete_file( fullpath ).
  ELSE.
*   Read the needed Class for the Object type
    READ TABLE l_objtable INTO objectline WITH KEY object = i_package_object-object.

    _objname = i_package_object-obj_name.

    CREATE OBJECT targetobject
      TYPE
        (objectline-classname)
      EXPORTING
        name                   = _objname.

    xml_document = targetobject-&gt;createixmldocfromobject( ).
    xml = zsaplink=&gt;convertixmldoctostring( xml_document ).

    IF me-&gt;download_slinkees_to_lm = abap_true.
      me-&gt;download_xml_to_lm(
          i_fullpath   = fullpath
          i_xml_string = xml
      ).
    ENDIF.

    IF NOT i_nugget_name IS INITIAL.
      me-&gt;add_object_to_nugget(
          i_nugget_name  = i_nugget_name
          i_xml_document = xml_document
      ).
    ENDIF.
  ENDIF.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="CREATE_SLINKEES" VERSION="1" LANGU="E" DESCRIPT="Create Slinkees" EXPOSURE="2" STATE="1" EDITORDER="16 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="CREATE_SLINKEES" SCONAME="I_NUGGET_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <exception CLSNAME="ZAKE" CMPNAME="CREATE_SLINKEES" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>METHOD create_slinkees.

  DATA objectline LIKE LINE OF l_objtable.
  DATA msg TYPE string.
  DATA nugget_string  TYPE string.
  DATA zipfile TYPE xstring.

  FIELD-SYMBOLS: &lt;package_object&gt; LIKE LINE OF package_objects.

  &quot; Check if all the plugins we need are installed
  LOOP AT package_objects ASSIGNING &lt;package_object&gt;.
    READ TABLE l_objtable INTO objectline WITH KEY object = &lt;package_object&gt;-object.
    IF sy-subrc &lt;&gt; 0.
      msg = &lt;package_object&gt;-object.
      RAISE EXCEPTION TYPE zcx_saplink
        EXPORTING
          textid = zcx_saplink=&gt;no_plugin
          msg    = msg.
    ENDIF.
  ENDLOOP.
  IF NOT i_nugget_name IS INITIAL.
    me-&gt;create_nugget( i_nugget_name = i_nugget_name ).
  ENDIF.
  &quot; now we can export all the objects
  LOOP AT package_objects ASSIGNING &lt;package_object&gt;.
    me-&gt;create_slinkee(
      i_nugget_name = i_nugget_name
      i_package_object = &lt;package_object&gt;
    ).
  ENDLOOP.
  IF NOT i_nugget_name IS INITIAL.
    nugget_string = me-&gt;get_nugget_string( i_nugget_name   = i_nugget_name ).

    IF me-&gt;download_nugget_to_lm = abap_true.
      me-&gt;download_xml_to_lm(
        EXPORTING
          i_fullpath   = i_nugget_name
          i_xml_string = nugget_string
      ).
    ENDIF.

    me-&gt;download_zip_to_lm(
        i_fullpath    = i_nugget_name
        i_stringtozip = nugget_string
    ).
  ENDIF.
ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="CREATE_TRANSPORT_REQUEST" VERSION="1" LANGU="E" DESCRIPT="Create transport request" EXPOSURE="2" STATE="1" EDITORDER="27 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="CREATE_TRANSPORT_REQUEST" SCONAME="I_TEXT" VERSION="1" LANGU="E" DESCRIPT="Short Description of Repository Objects" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="AS4TEXT" PAROPTIONL="X"/>
  <parameter CLSNAME="ZAKE" CMPNAME="CREATE_TRANSPORT_REQUEST" SCONAME="I_AUTHOR" VERSION="1" LANGU="E" DESCRIPT="Owner of a Request or Task" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TR_AS4USER" PARVALUE="SY-UNAME"/>
  <parameter CLSNAME="ZAKE" CMPNAME="CREATE_TRANSPORT_REQUEST" SCONAME="R_TRANSPORT" VERSION="1" LANGU="E" DESCRIPT="Request/Task" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="TRKORR"/>
  <source>METHOD create_transport_request.
  DATA: lv_text TYPE as4text.
  DATA: return TYPE  bapiret2,
        task_list TYPE TABLE OF bapiscts07,
        authorlist TYPE TABLE OF bapiscts12.

  FIELD-SYMBOLS: &lt;task&gt; LIKE LINE OF task_list,
                 &lt;author&gt; LIKE LINE OF authorlist.

  IF i_text IS INITIAL.
    CONCATENATE &apos;ZAKE Transport of package&apos; me-&gt;iv_package
      INTO lv_text SEPARATED BY space.
  ELSE.
    lv_text = i_text.
  ENDIF.
*
*  This Function Module does not create tasks
*  CALL FUNCTION &apos;TR_EXT_CREATE_REQUEST&apos;
*    EXPORTING
*     iv_request_type       = &apos;T&apos; &quot; Transport of Copies
**     IV_TARGET             = &apos; &apos;
*      iv_author             = i_author
*      iv_text               = lv_text
**     IV_REQ_ATTR           = IV_REQ_ATTR
**     IV_ATTR_REF           = IV_ATTR_REF
*   IMPORTING
*     es_req_id             = me-&gt;transport
**     ES_REQ_HEADER         = ES_REQ_HEADER
**     ES_MSG                = ES_MSG
**     EV_EXCEPTION          = EV_EXCEPTION
*            .

  CALL FUNCTION &apos;BAPI_CTREQUEST_CREATE&apos;
    EXPORTING
      author    = i_author
      text      = lv_text
    IMPORTING
      requestid = me-&gt;transport
      return    = return
    TABLES
      task_list = task_list.
** In the moment we don&apos;t need a task.
*  APPEND INITIAL LINE TO task_list ASSIGNING &lt;task&gt;.
*  &lt;task&gt;-author    = i_author.
*  &lt;task&gt;-text      = lv_text.
*  &lt;task&gt;-requestid = me-&gt;transport.
*  &lt;task&gt;-type      = &apos;S&apos;. &quot; Development/Correction
*
*  APPEND INITIAL LINE TO authorlist ASSIGNING &lt;author&gt;.
*  &lt;author&gt;-task_owner = i_author.
*
*  CALL FUNCTION &apos;BAPI_CTREQUEST_CREATE_TASKS&apos;
*    EXPORTING
*      requestid  = me-&gt;transport
*    IMPORTING
*      return     = return
*    TABLES
*      authorlist = authorlist
*      task_list  = task_list.
*
*  READ TABLE task_list ASSIGNING &lt;task&gt; INDEX 2.
*
*  me-&gt;task = &lt;task&gt;-taskid.

  r_transport = me-&gt;transport.
ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="DELETE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="23 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="DELETE" SCONAME="I_XML_DOCUMENT" VERSION="1" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
  <source>method DELETE.

  DATA typename TYPE string.
  DATA objname TYPE string.
  DATA l_objline TYPE t_objecttable.

  CALL METHOD zsaplink=&gt;getobjectinfofromixmldoc
    EXPORTING
      ixmldocument = i_xml_document
    IMPORTING
      objtypename  = typename
      objname      = objname.

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="DELETE_FILE" VERSION="1" LANGU="E" DESCRIPT="Delete File" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="DELETE_FILE" SCONAME="I_FULLPATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>method DELETE_FILE.
  DATA: rc TYPE i.
  cl_gui_frontend_services=&gt;file_delete(
    EXPORTING
      filename = i_fullpath
    CHANGING
      rc       = rc
  ).
endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="DOWNLOAD_XML_TO_LM" VERSION="1" LANGU="E" DESCRIPT="Download XML to local machine" EXPOSURE="0" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="DOWNLOAD_XML_TO_LM" SCONAME="I_FULLPATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="DOWNLOAD_XML_TO_LM" SCONAME="I_XML_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>method DOWNLOAD_XML_TO_LM.

  DATA: temptable_char TYPE table_of_strings,
        tempstring TYPE string.

  SPLIT i_xml_string AT cl_abap_char_utilities=&gt;newline
    INTO TABLE temptable_char.

  CALL METHOD cl_gui_frontend_services=&gt;gui_download
    EXPORTING
      filename = i_fullpath
      filetype = &apos;DAT&apos;
    CHANGING
      data_tab = temptable_char.

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="DOWNLOAD_ZIP_TO_LM" VERSION="1" LANGU="E" DESCRIPT="Download XML to local machine" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="DOWNLOAD_ZIP_TO_LM" SCONAME="I_FULLPATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="DOWNLOAD_ZIP_TO_LM" SCONAME="I_STRINGTOZIP" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <exception CLSNAME="ZAKE" CMPNAME="DOWNLOAD_ZIP_TO_LM" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100307" CHANGEDON="00000000"/>
  <source>METHOD download_zip_to_lm.

  DATA xstringtozip TYPE xstring.
  DATA temptable TYPE w3mimetabtype.
  DATA zip TYPE REF TO cl_abap_zip.
  DATA content TYPE xstring.
  DATA zipfilename TYPE string.
  DATA zipfile TYPE xstring.
  DATA filename TYPE string.
  DATA bin_filesize TYPE i.

  DATA file_to_zip LIKE LINE OF me-&gt;filelist_zip.
  DATA bin_tab TYPE TABLE OF x255.
  DATA filelength TYPE i.
  DATA tmpfullpath TYPE string.
  DATA slash TYPE string.
  &quot; Background processing
  DATA bin_data LIKE LINE OF bin_tab.
  DATA len TYPE i.
  DATA alen TYPE i.
  DATA templine LIKE LINE OF temptable.

  filename = zake=&gt;get_filename_from_fullpath( i_fullpath ).

  CALL FUNCTION &apos;SCMS_STRING_TO_XSTRING&apos;
    EXPORTING
      text   = i_stringtozip
    IMPORTING
      buffer = xstringtozip.

  CREATE OBJECT zip.
  zip-&gt;add(
    EXPORTING
      name    = filename
      content = xstringtozip
  ).

  IF me-&gt;download_transport_to_lm = abap_true.
    me-&gt;add_transport_to_filelist( ).
  ENDIF.

  IF NOT me-&gt;filelist_zip IS INITIAL.
    LOOP AT me-&gt;filelist_zip INTO file_to_zip.
      CLEAR: xstringtozip, content, bin_tab.
      tmpfullpath = file_to_zip.
      slash = &apos;/&apos;.
      REPLACE ALL OCCURRENCES OF slash IN tmpfullpath WITH &apos;\&apos;.

      IF sy-batch = abap_true.

        DESCRIBE FIELD bin_data LENGTH len IN BYTE MODE.
        OPEN DATASET tmpfullpath  FOR INPUT IN BINARY MODE.
        WHILE sy-subrc = 0.
          READ DATASET tmpfullpath INTO bin_data MAXIMUM LENGTH len ACTUAL LENGTH alen.
          APPEND bin_data TO bin_tab.
          filelength = filelength + alen.
        ENDWHILE.

        CLOSE DATASET tmpfullpath.
      ELSE.
        cl_gui_frontend_services=&gt;gui_upload(
          EXPORTING
            filename                = tmpfullpath    &quot; Name of file
            filetype                = &apos;BIN&apos;    &quot; File Type (ASCII, Binary)
          IMPORTING
            filelength              = filelength
          CHANGING
            data_tab                = bin_tab
          EXCEPTIONS
            file_open_error         = 1
            file_read_error         = 2
            no_batch                = 3
            gui_refuse_filetransfer = 4
            invalid_type            = 5
            no_authority            = 6
            unknown_error           = 7
            bad_data_format         = 8
            header_not_allowed      = 9
            separator_not_allowed   = 10
            header_too_long         = 11
            unknown_dp_error        = 12
            access_denied           = 13
            dp_out_of_memory        = 14
            disk_full               = 15
            dp_timeout              = 16
            not_supported_by_gui    = 17
            error_no_gui            = 18
            OTHERS                  = 19
        ).
        IF sy-subrc &lt;&gt; 0.
          RAISE EXCEPTION TYPE zcx_saplink
            EXPORTING
              textid = zcx_saplink=&gt;system_error.
        ENDIF.
      ENDIF.
      CALL FUNCTION &apos;SCMS_BINARY_TO_XSTRING&apos;
        EXPORTING
          input_length = filelength
        IMPORTING
          buffer       = xstringtozip
        TABLES
          binary_tab   = bin_tab.

      filename = zake=&gt;get_filename_from_fullpath( file_to_zip ).
      zip-&gt;add(
        EXPORTING
          name    = filename
          content = xstringtozip
      ).
    ENDLOOP.
  ENDIF.

  zipfile = zip-&gt;save( ).

  CALL FUNCTION &apos;SCMS_XSTRING_TO_BINARY&apos;
    EXPORTING
      buffer        = zipfile
    IMPORTING
      output_length = bin_filesize
    TABLES
      binary_tab    = temptable.

  CONCATENATE i_fullpath &apos;.zip&apos; INTO zipfilename.
  IF sy-batch = abap_true.
    OPEN DATASET zipfilename FOR OUTPUT IN BINARY MODE.
    LOOP AT temptable INTO templine.
      TRANSFER templine TO zipfilename.
    ENDLOOP.
    CLOSE DATASET zipfilename.
  ELSE.
    cl_gui_frontend_services=&gt;gui_download(
      EXPORTING
        bin_filesize = bin_filesize
        filename     = zipfilename
        filetype     = &apos;BIN&apos;
      CHANGING
        data_tab     = temptable
     ).
  ENDIF.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="GET_ALL_FILES" VERSION="1" LANGU="E" DESCRIPT="Get all files from HTTP Server" EXPOSURE="2" STATE="1" EDITORDER="17 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <exception CLSNAME="ZAKE" CMPNAME="GET_ALL_FILES" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>method GET_ALL_FILES.

  DATA xmldocument TYPE REF TO if_ixml_document.
  DATA httpstatuscode TYPE i.
  DATA httpstatusreason TYPE string.
  DATA responsedata TYPE string.
  DATA iterator TYPE REF TO if_ixml_node_iterator.
  DATA lowercaseanchors TYPE REF TO if_ixml_node_filter.
  DATA uppercaseanchors TYPE REF TO if_ixml_node_filter.
  DATA anchorfilter TYPE REF TO if_ixml_node_filter.
  DATA element TYPE REF TO if_ixml_element.
  DATA filename TYPE string.

  httpclient-&gt;send( ).
  httpclient-&gt;receive( ).
  httpclient-&gt;refresh_request( ).

  httpclient-&gt;response-&gt;get_status( IMPORTING code = httpstatuscode reason = httpstatusreason ).
  IF httpstatuscode = 200.
    responsedata = httpclient-&gt;response-&gt;get_cdata( ).
    xmldocument = zsaplink=&gt;convertstringtoixmldoc( responsedata ).
    lowercaseanchors = xmldocument-&gt;create_filter_name( &apos;a&apos; ).
    uppercaseanchors = xmldocument-&gt;create_filter_name( &apos;A&apos; ).
    anchorfilter = xmldocument-&gt;create_filter_or( filter1 = lowercaseanchors filter2 = uppercaseanchors ).
    iterator = xmldocument-&gt;create_iterator_filtered( anchorfilter ).
    element ?= iterator-&gt;get_next( ).
    WHILE element IS NOT INITIAL.
      filename = element-&gt;get_attribute( &apos;href&apos; ).
      IF filename IS INITIAL.
        filename = element-&gt;get_attribute( &apos;HREF&apos; ).
      ENDIF.
      IF NOT filename CO &apos;./&apos;.
        CONCATENATE url filename INTO filename.
        me-&gt;get_file( i_filename = filename ).
      ENDIF.
      element ?= iterator-&gt;get_next( ).
    ENDWHILE.
    httpclient-&gt;refresh_request( ).
  ELSE.
    RAISE EXCEPTION TYPE zcx_saplink.
  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="GET_FILE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="24 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="GET_FILE" SCONAME="I_FILENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="GET_FILE" SCONAME="I_NEWCLIENT" VERSION="1" LANGU="E" DESCRIPT="HTTP Client Abstraction" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_HTTP_CLIENT" PAROPTIONL="X"/>
  <parameter CLSNAME="ZAKE" CMPNAME="GET_FILE" SCONAME="R_XML_DOCUMENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
  <exception CLSNAME="ZAKE" CMPNAME="GET_FILE" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>method GET_FILE.

  DATA httpstatuscode TYPE i.
  DATA httpstatusreason TYPE string.
  DATA responsedata TYPE string.
  DATA filerow TYPE filelistrowtype.
  DATA tableostrings TYPE table_of_strings.
  DATA stemp TYPE string.

  httpclient-&gt;request-&gt;set_header_field(
    name  = &apos;~request_uri&apos;
    value = i_filename
  ).
  httpclient-&gt;request-&gt;set_header_field(
    name  = &apos;Cache-Control&apos;
    value = &apos;no-cache&apos;
  ).
  httpclient-&gt;send( ).
  httpclient-&gt;receive( ).

  httpclient-&gt;response-&gt;get_status( IMPORTING code = httpstatuscode reason = httpstatusreason ).
  IF httpstatuscode = 200.
    responsedata = httpclient-&gt;response-&gt;get_cdata( ).
    SPLIT responsedata AT cl_abap_char_utilities=&gt;cr_lf INTO TABLE tableostrings.
    CLEAR responsedata.
    LOOP AT tableostrings INTO stemp.
      CONCATENATE responsedata stemp cl_abap_char_utilities=&gt;newline INTO responsedata.
    ENDLOOP.
    r_xml_document = zsaplink=&gt;convertstringtoixmldoc( responsedata ).
    filerow-name = i_filename.
    filerow-xmldoc = r_xml_document.
    APPEND filerow TO filelist.
    httpclient-&gt;refresh_request( ).
  ELSE.
    RAISE EXCEPTION TYPE zcx_saplink.
  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="GET_FILENAME_FROM_FULLPATH" VERSION="1" LANGU="E" DESCRIPT="Read filename from the full path" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100307" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="GET_FILENAME_FROM_FULLPATH" SCONAME="I_FULLPATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100307" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="GET_FILENAME_FROM_FULLPATH" SCONAME="R_FILENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100307" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>METHOD get_filename_from_fullpath.
  DATA pathcomponents TYPE string_table.
  DATA l TYPE i.
  DATA slash TYPE string VALUE &apos;/&apos;.
  DATA tmpfullpath TYPE string.
  tmpfullpath = i_fullpath.
  REPLACE ALL OCCURRENCES OF slash IN tmpfullpath WITH &apos;\&apos;.

  SPLIT tmpfullpath AT &apos;\&apos; INTO TABLE pathcomponents.
  DESCRIBE TABLE pathcomponents LINES l.
  READ TABLE pathcomponents INTO r_filename INDEX l.
ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="GET_NUGGET_STRING" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="18 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="GET_NUGGET_STRING" SCONAME="I_NUGGET_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="GET_NUGGET_STRING" SCONAME="R_NUGGET_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method GET_NUGGET_STRING.

  DATA name TYPE string.
  DATA nugget TYPE nuggetrow.
  DATA xml_doc TYPE REF TO if_ixml_document.

  name = i_nugget_name.
  TRANSLATE name TO UPPER CASE.
  READ TABLE currentnuggets INTO nugget WITH KEY name = name.
  IF sy-subrc = 0.
    xml_doc = nugget-nuggetobject-&gt;createixmldocfromnugget( ).
    r_nugget_string = zsaplink=&gt;convertixmldoctostring( xml_doc ).
  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="GET_SLINKEES_FROM_LM" VERSION="1" LANGU="E" DESCRIPT="Get all Slinkee&apos;s from Version Control" EXPOSURE="1" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100307" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="GET_SLINKEES_FROM_LM" SCONAME="I_FULLPATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="GET_SLINKEES_FROM_LM" SCONAME="C_SLINKEES" VERSION="1" LANGU="E" DESCRIPT="Business Content Table XML DOM" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="2" PARPASSTYP="0" TYPTYPE="1" TYPE="IGS_CE_CU_TAB"/>
  <exception CLSNAME="ZAKE" CMPNAME="GET_SLINKEES_FROM_LM" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>METHOD get_slinkees_from_lm.

  DATA: result TYPE abap_bool.

  DATA: file_table TYPE TABLE OF file_info,
        file LIKE LINE OF file_table,
        count	TYPE i.
  DATA: tmpfullpath TYPE string.
  DATA: tmppath TYPE string.
  DATA: slash TYPE string.
  DATA: xmlstring TYPE string.
  DATA: slinkee LIKE LINE OF c_slinkees.
  &quot; For Batch processing
  DATA: name TYPE pfeflnamel,
        file_tbl TYPE TABLE OF salfldir.
  FIELD-SYMBOLS: &lt;file&gt; LIKE LINE OF file_tbl.

  tmpfullpath = i_fullpath.
  slash = &apos;/&apos;.
  REPLACE ALL OCCURRENCES OF slash IN tmpfullpath WITH &apos;\&apos;.
  &quot; When running as a Batch Job we had to read from the server
  IF sy-batch = abap_true.
    name = i_fullpath.
    CALL FUNCTION &apos;RZL_READ_DIR_LOCAL&apos;
      EXPORTING
        name           = name
      TABLES
        file_tbl       = file_tbl
      EXCEPTIONS
        argument_error = 1
        not_found      = 2
        OTHERS         = 3.
    IF sy-subrc &lt;&gt; 0.

    ENDIF.
    LOOP AT file_tbl ASSIGNING &lt;file&gt;
      WHERE name &lt;&gt; &apos;.&apos; AND name &lt;&gt; &apos;..&apos;
        AND NOT name CP &apos;.*&apos;.
      CLEAR file.
      &quot; When the size is initial, then we think it is a directory
      IF &lt;file&gt;-size IS INITIAL.
        file-isdir = &apos;1&apos;.
      ENDIF.
      file-filename = &lt;file&gt;-name.
      APPEND file TO file_table.
    ENDLOOP.
  ELSE.
    cl_gui_frontend_services=&gt;directory_list_files(
      EXPORTING
        directory                   = tmpfullpath   &quot; Directory To Search
      CHANGING
        file_table                  = file_table    &quot; Return Table for the Found Files
        count                       = count    &quot; Number of Files/Dir Found
      EXCEPTIONS
        cntl_error                  = 1
        directory_list_files_failed = 2
        wrong_parameter             = 3
        error_no_gui                = 4
        not_supported_by_gui        = 5
        OTHERS                      = 6
    ).
    IF sy-subrc &lt;&gt; 0.

    ENDIF.
  ENDIF.

  DELETE file_table WHERE ishidden = &apos;1&apos;.

  LOOP AT file_table INTO file.
    CONCATENATE tmpfullpath &apos;\&apos; file-filename INTO tmppath.
    IF file-isdir = &apos;1&apos;.
      me-&gt;get_slinkees_from_lm(
        EXPORTING
          i_fullpath    = tmppath
        CHANGING
          c_slinkees    = c_slinkees
      ).
    ELSE.
      IF file-filename CP &apos;*.slnk&apos;.
        xmlstring = me-&gt;read_xml_from_lm( i_fullpath  = tmppath ).
        slinkee = zsaplink=&gt;convertstringtoixmldoc( xmlstring ).
        APPEND slinkee TO c_slinkees.
      ENDIF.
    ENDIF.
  ENDLOOP.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="INSTALL" VERSION="1" LANGU="E" DESCRIPT="Install a Slinkee" EXPOSURE="2" STATE="1" EDITORDER="26 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="INSTALL" SCONAME="I_XML_DOCUMENT" VERSION="1" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
  <parameter CLSNAME="ZAKE" CMPNAME="INSTALL" SCONAME="E_OBJECTTYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="INSTALL" SCONAME="E_OBJECTNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>method INSTALL.

  DATA: l_excclass TYPE REF TO zcx_saplink.
  DATA: l_message TYPE string.

  DATA installer TYPE REF TO zsaplink.
  DATA l_objline TYPE t_objecttable.

  CALL METHOD zsaplink=&gt;getobjectinfofromixmldoc
    EXPORTING
      ixmldocument = i_xml_document
    IMPORTING
      objtypename  = e_objecttype
      objname      = e_objectname.

* Grab the right plugin from the cache built durning the constructor
  READ TABLE l_objtable INTO l_objline WITH KEY object = e_objecttype.
  IF sy-subrc = 0.
    CREATE OBJECT installer
      TYPE
        (l_objline-classname)
      EXPORTING
        name                  = e_objectname.
  ELSE.
* Seems that we don&apos;t have the plugin installed, but what if zake installed it previously.
* Re-read the plugin hierarchy
    CALL METHOD zsaplink=&gt;getplugins( CHANGING objecttable = l_objtable ).
    READ TABLE l_objtable INTO l_objline WITH KEY object = e_objecttype.
    IF sy-subrc = 0.
      CREATE OBJECT installer
        TYPE
          (l_objline-classname)
        EXPORTING
          name                  = e_objectname.
    ENDIF.
  ENDIF.
* Attempt to install
  TRY.
      installer-&gt;createobjectfromixmldoc(
        ixmldocument = i_xml_document
        overwrite    = &apos;X&apos;
      ).
*    bad times
    CATCH zcx_saplink INTO l_excclass.
      l_message = l_excclass-&gt;get_text( ).
      WRITE: / l_message.
  ENDTRY.

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="INSTALL_OBJECTS" VERSION="1" LANGU="E" DESCRIPT="Install Objects" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="INSTALL_OBJECTS" SCONAME="I_OBJECTS" VERSION="1" LANGU="E" DESCRIPT="Object Directory" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SCTS_TADIR"/>
  <exception CLSNAME="ZAKE" CMPNAME="INSTALL_OBJECTS" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>method INSTALL_OBJECTS.

  DATA: slinkees TYPE igs_ce_cu_tab,
        slinkees_to_install TYPE igs_ce_cu_tab.
  FIELD-SYMBOLS: &lt;slinkee&gt; LIKE LINE OF slinkees,
                 &lt;object&gt; LIKE LINE OF i_objects.
  DATA: objecttype TYPE string.
  DATA: objectname TYPE string.

  &quot; Read all the Slinkee&apos;s
  me-&gt;get_slinkees_from_lm(
    EXPORTING
      i_fullpath = path
    CHANGING
      c_slinkees = slinkees
  ).

  LOOP AT slinkees ASSIGNING &lt;slinkee&gt;.
    zsaplink=&gt;getobjectinfofromixmldoc(
      EXPORTING
        ixmldocument = &lt;slinkee&gt;
      IMPORTING
        objtypename  = objecttype
        objname      = objectname
    ).
    READ TABLE i_objects ASSIGNING &lt;object&gt;
      WITH KEY object = objecttype
               obj_name = objectname.
    IF &lt;object&gt; IS ASSIGNED.
      APPEND &lt;slinkee&gt; TO slinkees_to_install.
    ENDIF.
  ENDLOOP.

  me-&gt;install_slinkees( slinkees_to_install ).

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="INSTALL_SLINKEES" VERSION="1" LANGU="E" DESCRIPT="Install Slinkees" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100307" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="INSTALL_SLINKEES" SCONAME="I_SLINKEES" VERSION="1" LANGU="E" DESCRIPT="Multiple Customizings for CE" CMPTYPE="1" MTDTYPE="0" EDITORDER="0 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="IGS_CE_CU_TAB"/>
  <exception CLSNAME="ZAKE" CMPNAME="INSTALL_SLINKEES" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>METHOD install_slinkees.

  DATA: slinkee LIKE LINE OF i_slinkees.
  DATA: objecttype TYPE string.
  DATA: objectname TYPE string.
  FIELD-SYMBOLS: &lt;package_object&gt; LIKE LINE OF me-&gt;package_objects.

  &quot; Install all the Slinkee&apos;s
  LOOP AT i_slinkees INTO slinkee.
    IF me-&gt;testrun = abap_false.
      me-&gt;install(
        EXPORTING
          i_xml_document = slinkee
        IMPORTING
          e_objecttype  = objecttype
          e_objectname  = objectname
      ).
    ELSE.
      &quot; Even in the testrun we want to fill the Objectlist
      CALL METHOD zsaplink=&gt;getobjectinfofromixmldoc
        EXPORTING
          ixmldocument = slinkee
        IMPORTING
          objtypename  = objecttype
          objname      = objectname.
    ENDIF.

    APPEND INITIAL LINE TO me-&gt;package_objects ASSIGNING &lt;package_object&gt;.
    &lt;package_object&gt;-object   = objecttype.
    &lt;package_object&gt;-obj_name = objectname.
  ENDLOOP.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="INSTALL_SLINKEES_FROM_LM" VERSION="1" LANGU="E" DESCRIPT="Install Slinkees from local machine" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="INSTALL_SLINKEES_FROM_LM" SCONAME="I_TESTRUN" VERSION="1" LANGU="E" DESCRIPT="General Flag" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FLAG" PARVALUE="&apos; &apos;"/>
  <exception CLSNAME="ZAKE" CMPNAME="INSTALL_SLINKEES_FROM_LM" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>method INSTALL_SLINKEES_FROM_LM.

  DATA: slinkees TYPE igs_ce_cu_tab.

  me-&gt;testrun = i_testrun.
* Read all the Slinkee&apos;s
  me-&gt;get_slinkees_from_lm(
    EXPORTING
      i_fullpath = path
    CHANGING
      c_slinkees = slinkees
  ).

  me-&gt;install_slinkees( slinkees ).

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="READ_XML_FROM_LM" VERSION="1" LANGU="E" DESCRIPT="Read XML from local machine" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100819" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="READ_XML_FROM_LM" SCONAME="I_FULLPATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="READ_XML_FROM_LM" SCONAME="R_XML_STRING" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <exception CLSNAME="ZAKE" CMPNAME="READ_XML_FROM_LM" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100819" CHANGEDON="00000000"/>
  <source>METHOD read_xml_from_lm.

  DATA: temptable_char TYPE table_of_strings,
        tempstring TYPE string.

  IF sy-batch = abap_true.
    OPEN DATASET i_fullpath  FOR INPUT IN TEXT MODE
                             ENCODING DEFAULT
                             WITH SMART LINEFEED.
    WHILE sy-subrc = 0.
      READ DATASET i_fullpath INTO tempstring.
      APPEND tempstring TO temptable_char.
    ENDWHILE.

    CLOSE DATASET i_fullpath.
  ELSE.
    cl_gui_frontend_services=&gt;gui_upload(
      EXPORTING
         filename                = i_fullpath    &quot; Name of file
        filetype                = &apos;ASC&apos;    &quot; File Type (ASCII, Binary)
      CHANGING
        data_tab                = temptable_char    &quot; Transfer table for file contents
      EXCEPTIONS
        file_open_error         = 1
        file_read_error         = 2
        no_batch                = 3
        gui_refuse_filetransfer = 4
        invalid_type            = 5
        no_authority            = 6
        unknown_error           = 7
        bad_data_format         = 8
        header_not_allowed      = 9
        separator_not_allowed   = 10
        header_too_long         = 11
        unknown_dp_error        = 12
        access_denied           = 13
        dp_out_of_memory        = 14
        disk_full               = 15
        dp_timeout              = 16
        not_supported_by_gui    = 17
        error_no_gui            = 18
        OTHERS                  = 19
    ).
    IF sy-subrc &lt;&gt; 0.
      RAISE EXCEPTION TYPE zcx_saplink
        EXPORTING
          textid = zcx_saplink=&gt;system_error.
    ENDIF.
  ENDIF.
  LOOP AT temptable_char INTO tempstring.
    CONCATENATE r_xml_string tempstring cl_abap_char_utilities=&gt;newline
      INTO r_xml_string.
  ENDLOOP.

ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="RELEASE_TRANSPORT_REQUEST" VERSION="1" LANGU="E" DESCRIPT="Release transport request" EXPOSURE="2" STATE="1" EDITORDER="30 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="RELEASE_TRANSPORT_REQUEST" SCONAME="I_TRANSPORT" VERSION="1" LANGU="E" DESCRIPT="Request/Task" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TRKORR" PAROPTIONL="X"/>
  <exception CLSNAME="ZAKE" CMPNAME="RELEASE_TRANSPORT_REQUEST" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDON="00000000"/>
  <source>METHOD release_transport_request.

  DATA: return TYPE bapiret2.

  DATA: author TYPE tr_as4user,
        requests TYPE TABLE OF trexreqhd.

  DATA: released TYPE boolean VALUE abap_false.

  FIELD-SYMBOLS: &lt;request&gt; LIKE LINE OF requests.

  IF i_transport IS INITIAL AND me-&gt;transport IS INITIAL.
    RAISE EXCEPTION TYPE zcx_saplink
      EXPORTING
        textid = zcx_saplink=&gt;error_message
        msg    = &apos;You have to specify a transport request&apos;.
  ELSEIF NOT i_transport IS INITIAL.
    me-&gt;transport = i_transport.
  ENDIF.

  CALL FUNCTION &apos;BAPI_CTREQUEST_RELEASE&apos;
    EXPORTING
      requestid = me-&gt;transport
      complete  = &apos;X&apos;
    IMPORTING
      return    = return.

  author = sy-uname.

  WHILE released = abap_false.
    CLEAR: requests.
    CALL FUNCTION &apos;TR_EXT_GET_REQUESTS&apos;
      EXPORTING
        iv_author     = author
        iv_req_status = &apos;R&apos;
      TABLES
        et_requests   = requests.

    READ TABLE requests ASSIGNING &lt;request&gt;
      WITH KEY req_id = me-&gt;transport
               status = &apos;R&apos;. &quot; Released

    IF sy-subrc &lt;&gt; 0.
      WAIT UP TO 5 SECONDS.
    ELSE.
      released = abap_true.
    ENDIF.
  ENDWHILE.
ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="SAVE_NUGGET" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="19 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="SAVE_NUGGET" SCONAME="I_NUGGET_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="SAVE_NUGGET" SCONAME="I_TARGET" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>method SAVE_NUGGET.

  DATA stemp TYPE string.
  DATA nugget TYPE nuggetrow.
  DATA nugget_name TYPE string.
  DATA xmlstring TYPE string.

  TYPES: BEGIN OF t_char,
           maxchar(65535) TYPE c,
         END OF t_char.

  DATA: temptable_char TYPE TABLE OF t_char.

  nugget_name = i_nugget_name.
  TRANSLATE nugget_name TO UPPER CASE.
  READ TABLE currentnuggets INTO nugget WITH KEY name = nugget_name.

  stemp = i_target.
  TRANSLATE stemp TO UPPER CASE.

  IF stemp(4) = &apos;HTTP&apos;.
* Post to SVN
  ELSE.
    xmlstring = me-&gt;get_nugget_string( nugget_name ).

    SPLIT xmlstring AT cl_abap_char_utilities=&gt;newline
    INTO TABLE temptable_char.

    cl_gui_frontend_services=&gt;gui_download(
          EXPORTING
            filename = i_target
            filetype = &apos;DAT&apos;
          CHANGING
            data_tab = temptable_char
    ).
  ENDIF.

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="SET_CHECKIN_OBJECTS" VERSION="1" LANGU="E" DESCRIPT="Set the table of Objects to checkin" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="SET_CHECKIN_OBJECTS" SCONAME="I_OBJECTS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SCTS_TADIR"/>
  <source>method SET_CHECKIN_OBJECTS.

  FIELD-SYMBOLS: &lt;object&gt; LIKE LINE OF i_objects.
  DATA: package_object LIKE LINE OF package_objects.

  CLEAR: package_objects.

  LOOP AT i_objects ASSIGNING &lt;object&gt;.
    MOVE-CORRESPONDING &lt;object&gt; TO package_object.
    APPEND package_object TO package_objects.
  ENDLOOP.

endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="SET_PACKAGE" VERSION="1" LANGU="E" DESCRIPT="Get the Objects of a Package" EXPOSURE="2" STATE="1" EDITORDER="21 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="SET_PACKAGE" SCONAME="I_PACKAGE" VERSION="1" LANGU="E" DESCRIPT="Package" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="DEVCLASS"/>
  <source>method SET_PACKAGE.
  me-&gt;iv_package = i_package.
endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="SET_PACKAGE_OBJECTS" VERSION="1" LANGU="E" DESCRIPT="Get the Objects of a Package" EXPOSURE="2" STATE="1" EDITORDER="22 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="SET_PACKAGE_OBJECTS" SCONAME="I_PACKAGE" VERSION="1" LANGU="E" DESCRIPT="Package" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="DEVCLASS"/>
  <exception CLSNAME="ZAKE" CMPNAME="SET_PACKAGE_OBJECTS" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100117" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
  <source>method SET_PACKAGE_OBJECTS.
  DATA: msg TYPE string.
  me-&gt;iv_package = i_package.
  SELECT object obj_name srcsystem
      FROM tadir
      INTO CORRESPONDING FIELDS OF TABLE package_objects
      WHERE devclass  EQ me-&gt;iv_package
      AND  pgmid      EQ &apos;R3TR&apos;
      &quot;//-&gt; Mar: Added logic discard deleted objects from Package - 08/20/2008
      &quot; Comment this line when ABAP Release &lt;= 6.20
      AND  delflag    NE &apos;X&apos;
      .
  &quot;//&lt;- Mar: Added logic discard deleted objects from Package - 08/20/2008
  IF sy-subrc &lt;&gt; 0.
    MESSAGE s208(00) WITH &apos;Package does not exist or is empty&apos; INTO msg.
    RAISE EXCEPTION TYPE zcx_saplink
      EXPORTING
        textid = zcx_saplink=&gt;error_message
        msg    = msg.
  ENDIF.
endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="SET_PACKAGE_OF_PACKAGE_OBJECTS" VERSION="1" LANGU="E" DESCRIPT="Set the development package of all package objects" EXPOSURE="2" STATE="1" EDITORDER="29 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <exception CLSNAME="ZAKE" CMPNAME="SET_PACKAGE_OF_PACKAGE_OBJECTS" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100823" CHANGEDON="00000000"/>
  <source>METHOD set_package_of_package_objects.
  DATA: pgmid TYPE pgmid.
  DATA: msg TYPE string.
  DATA: devclass TYPE devclass.

  FIELD-SYMBOLS: &lt;package_object&gt; LIKE LINE OF me-&gt;package_objects.

  SELECT SINGLE pgmid FROM tadir INTO pgmid
    WHERE pgmid = &apos;R3TR&apos;
      AND object = &apos;DEVC&apos;
      AND obj_name = me-&gt;iv_package.

  IF sy-subrc &lt;&gt; 0.
    CONCATENATE &apos;The package&apos; me-&gt;iv_package &apos;does not exist, please create it first&apos;
      INTO msg SEPARATED BY space.
    RAISE EXCEPTION TYPE zcx_saplink
      EXPORTING
        textid = zcx_saplink=&gt;error_message
        msg    = msg.
  ENDIF.

  LOOP AT me-&gt;package_objects ASSIGNING &lt;package_object&gt;.

    SELECT SINGLE pgmid devclass FROM tadir INTO (pgmid, devclass)
      WHERE object = &lt;package_object&gt;-object
        AND obj_name = &lt;package_object&gt;-obj_name.

    IF devclass &lt;&gt; me-&gt;iv_package.
      CALL FUNCTION &apos;TRINT_TADIR_MODIFY&apos;
        EXPORTING
*     AUTHOR                     = &apos;~&apos;
*     CPROJECT                   = &apos;~&apos;
          devclass                   =  me-&gt;iv_package
*     EDTFLAG                    = &apos;~&apos;
*     EXISTS                     = &apos;~&apos;
*     GENFLAG                    = &apos;~&apos;
*     MASTERLANG                 = &apos;~&apos;
          object                     = &lt;package_object&gt;-object
          obj_name                   = &lt;package_object&gt;-obj_name
          pgmid                      = pgmid
*     SRCDEP                     = &apos;~&apos;
*     SRCSYSTEM                  = &apos;~&apos;
*     VERSID                     = &apos;~&apos;
*     CHANGE_MASTERLANG          = &apos;~&apos;
*     FORCE_MODE                 = &apos;~&apos;
*     PAKNOCHECK                 = &apos;~&apos;
*     OBJSTABLTY                 = &apos;~&apos;
*     DELFLAG                    = &apos;~&apos;
*     TRANSL_TECH_TEXT           = &apos;~&apos;
*   IMPORTING
*     ES_TADIR                   = ES_TADIR
       EXCEPTIONS
         object_exists_global       = 1
         object_exists_local        = 2
         object_has_no_tadir        = 3
         OTHERS                     = 4
                .
      IF sy-subrc &lt;&gt; 0.
        msg = sy-subrc.
        CONCATENATE &apos;An error with sy-subrc =&apos; msg &apos;occured&apos;
          INTO msg SEPARATED BY space.
        RAISE EXCEPTION TYPE zcx_saplink
          EXPORTING
            textid = zcx_saplink=&gt;error_message
            msg    = msg.
      ENDIF.
    ENDIF.
  ENDLOOP.
ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="SET_TESTRUN" VERSION="1" LANGU="E" DESCRIPT="Set the Testrun attribute" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="SET_TESTRUN" SCONAME="I_TESTRUN" VERSION="1" LANGU="E" DESCRIPT="General Flag" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100113" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FLAG"/>
  <source>method SET_TESTRUN.
  me-&gt;testrun = i_testrun.
endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="SYNTAXCHECK" VERSION="1" LANGU="E" DESCRIPT="JUST A STUB!" EXPOSURE="2" STATE="1" EDITORDER="20 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20091219" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZAKE" CMPNAME="SYNTAXCHECK" SCONAME="I_OBJNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZAKE" CMPNAME="SYNTAXCHECK" SCONAME="I_OBJTYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100112" CHANGEDBY="BCUSER" CHANGEDON="20100307" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>method SYNTAXCHECK.
endmethod.</source>
 </method>
 <method CLSNAME="ZAKE" CMPNAME="UPDATE" VERSION="1" LANGU="E" DESCRIPT="Update from Version Controll System" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20100130" CHANGEDBY="BCUSER" CHANGEDON="20100823" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
  <exception CLSNAME="ZAKE" CMPNAME="UPDATE" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20100130" CHANGEDBY="BCUSER" CHANGEDON="20100307"/>
 </method>
</CLAS>
