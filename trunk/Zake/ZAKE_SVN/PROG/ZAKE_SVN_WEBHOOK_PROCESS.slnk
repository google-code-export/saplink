<?xml version="1.0" encoding="iso-8859-1"?>
<PROG NAME="ZAKE_SVN_WEBHOOK_PROCESS" VARCL="X" SUBC="1" CNAM="BCUSER" CDAT="20101031" UNAM="BCUSER" UDAT="20101101" VERN="000033" RSTAT="K" RMAND="000" RLOAD="E" FIXPT="X" SDATE="20101101" STIME="175938" IDATE="20101101" ITIME="175938" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="Process Webhook call: checkout and build using ZAKE" LENGTH="51 "/>
  </language>
 </textPool>
 <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZAKE_SVN_WEBHOOK_PROCESS
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;
*&amp;---------------------------------------------------------------------*

REPORT  zake_svn_webhook_process.

TYPE-POOLS: abap.

DATA: zake           TYPE REF TO zake,
      userdata       TYPE zake_userdata,
      command_output TYPE string_table,
      filepath       TYPE string_table,
      fullpath       TYPE string,
      new_slinkee    TYPE flag,
      nuggetname     TYPE string,
      lines          TYPE i.

DATA: ex TYPE REF TO zcx_saplink,
      message TYPE string.

FIELD-SYMBOLS: &lt;command_output&gt; LIKE LINE OF command_output.

DATA: loclpath_str TYPE string,
      svnpath_str  TYPE string.

&quot; Check for running job
DATA: jobrunning TYPE flag VALUE &apos;X&apos;,
      jobsel     TYPE btcselect,
      joblist    TYPE TABLE OF tbtcjob,
      yesterday  TYPE sydatum,
      tomorrow   TYPE sydatum.

PARAMETERS: project TYPE zake_project_name DEFAULT &apos;ZABAPHook&apos;.

START-OF-SELECTION.
  MESSAGE &apos;ZAKE_SVN_WEBHOOK_PROCESS started&apos; TYPE &apos;I&apos;.
  &quot; Get details of the project
  SELECT SINGLE * FROM zake_userdata INTO userdata
    WHERE project = project.

  CHECK sy-subrc = 0.

  MESSAGE &apos;Project Details loaded&apos; TYPE &apos;I&apos;.
  IF userdata-url           IS INITIAL OR
     userdata-username      IS INITIAL OR
     userdata-password      IS INITIAL OR
     userdata-localpath     IS INITIAL OR
     userdata-build_manager IS INITIAL.
    MESSAGE &apos;Not all project details are maintained in ZAKE_USERDATA.&apos; TYPE &apos;E&apos;.
  ENDIF.
  loclpath_str = userdata-localpath.
  svnpath_str  = userdata-url.

  &quot; Check if another Build Job is already running
  WHILE jobrunning = abap_true.
    CLEAR: joblist.
    jobsel-jobname = &apos;ZAKE_SVN_WEBHOOK_PROCESS&apos;.
    yesterday = sy-datum - 1.
    tomorrow  = sy-datum + 1.
    WRITE yesterday TO jobsel-from_date.
    WRITE tomorrow  TO jobsel-to_date.
    jobsel-running = &apos;X&apos;.

    CALL FUNCTION &apos;BP_JOB_SELECT&apos;
      EXPORTING
        jobselect_dialog    = &apos;N&apos;
        jobsel_param_in     = jobsel
      TABLES
        jobselect_joblist   = joblist
      EXCEPTIONS
        invalid_dialog_type = 1
        jobname_missing     = 2
        no_jobs_found       = 3
        selection_canceled  = 4
        username_missing    = 5
        OTHERS              = 6.

    IF joblist[] IS INITIAL.
      MESSAGE &apos;Now we can carry on&apos; TYPE &apos;I&apos;.
      jobrunning = abap_false.
    ELSE.
      MESSAGE &apos;Another ZAKE_SVN_WEBHOOK_PROCESS is still running&apos; TYPE &apos;I&apos;.
      WAIT UP TO 5 SECONDS.
    ENDIF.
  ENDWHILE.

  TRY.
      CONCATENATE &apos;Instanciate ZAKE with the command line client using local path&apos; loclpath_str
            &apos;and SVN URL&apos; svnpath_str INTO message SEPARATED BY space.
      MESSAGE message TYPE &apos;I&apos;.
      CREATE OBJECT zake
        TYPE
          zcl_zake_svn
        EXPORTING
          i_svnpath    = svnpath_str
          i_localpath  = loclpath_str.

      CHECK zake IS BOUND.
      MESSAGE &apos;ZAKE was instanciated&apos; TYPE &apos;I&apos;.
      &quot; Checkout the latest Version
      command_output = zake-&gt;checkout( ).
      MESSAGE &apos;Objects that where checked out&apos; TYPE &apos;I&apos;.
      LOOP AT command_output ASSIGNING &lt;command_output&gt;.
        MESSAGE &lt;command_output&gt; TYPE &apos;I&apos;.
        IF &lt;command_output&gt; CP &apos;*.slnk&apos;.
          new_slinkee = abap_true.
          SPLIT &lt;command_output&gt; AT &apos;    &apos; INTO TABLE filepath.
          DESCRIBE TABLE filepath LINES lines.
          READ TABLE filepath INTO fullpath INDEX 2.
          MESSAGE fullpath TYPE &apos;I&apos;.
          zake-&gt;install_slinkee_from_lm( fullpath ).
        ENDIF.
      ENDLOOP.
      IF new_slinkee = abap_true.
        MESSAGE &apos;Install slinkees in test mode to fill objectlist&apos; TYPE &apos;I&apos;.
        zake-&gt;install_slinkees_from_lm( abap_true ).
        MESSAGE &apos;Activate objects&apos; TYPE &apos;I&apos;.
        zake-&gt;activate_package_objects( ).
        MESSAGE &apos;Build&apos; TYPE &apos;I&apos;.
        &quot;&quot; Currently do not change the package
        &quot;MESSAGE &apos;Change package assignment of objects&apos; TYPE &apos;I&apos;.
        &quot;zake-&gt;set_package_of_package_objects( ).
        &quot; For the daily build we don&apos;t want to write Slinkee&apos;s
        zake-&gt;download_slinkees_to_lm = abap_false.
        &quot; And also no Nugged
        zake-&gt;download_nugget_to_lm = abap_false.
        &quot; Write only the ZIP-File.
        CONCATENATE loclpath_str &apos;/build/&apos; project &apos;_Daily.nugg&apos;
          INTO nuggetname.
        zake-&gt;create_slinkees( nuggetname ).
        MESSAGE &apos;Checkin&apos; TYPE &apos;I&apos;.
        CONCATENATE &apos;New daily build of&apos; project
          INTO message SEPARATED BY space.
        zake-&gt;checkin( message ).
      ELSE.
        MESSAGE &apos;No new slinkees found&apos; TYPE &apos;I&apos;.
      ENDIF.
    CATCH zcx_saplink INTO ex.
      message = ex-&gt;get_text( ).
      CONCATENATE &apos;An Error occured: &apos; message INTO message.
      MESSAGE message TYPE &apos;E&apos;.
  ENDTRY.</source>
</PROG>
